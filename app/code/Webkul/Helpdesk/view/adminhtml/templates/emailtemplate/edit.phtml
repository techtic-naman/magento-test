<?php
/**
 * Webkul Software.
 *
 * @category  Webkul
 * @package   Webkul_Helpdesk
 * @author    Webkul
 * @copyright Copyright (c) Webkul Software Private Limited (https://webkul.com)
 * @license   https://store.webkul.com/license.html
 */

use Magento\Framework\App\TemplateTypesInterface;

?>
<form action="<?= $block->escapeUrl($block->getPreviewUrl()) ?>" method="post" 
id="email_template_preview_form" target="_blank">
    <?= /* @noEscape */ $block->getBlockHtml('formkey') ?>
    <div class="no-display">
        <input type="hidden" id="preview_type" name="type" 
        value="<?= /* @noEscape */ $block->isTextType() ? 1 : 2 ?>" />
        <input type="hidden" id="preview_text" name="text" value="" />
        <input type="hidden" id="preview_styles" name="styles" value="" />
    </div>
</form>
<script>
require([
    "jquery",
    "wysiwygAdapter",
    "Magento_Ui/js/modal/alert",
    "mage/mage",
    "Magento_Email/js/variables",
    "prototype"
], function(jQuery, tinyMCE, alert){

//<![CDATA[
    jQuery('#email_template_edit_form').mage('form').mage('validation');
    jQuery('#email_template_preview_form').mage('form').mage('validation');
    jQuery('#email_template_load_form').mage('validation');
    templateControl = {
        unconvertedText: '',
        typeChange: false,
        variables: null,

        events: {
            'click [data-role=template-save]' : 'save',
            'click [data-role=template-preview]' : 'preview',
            'click [data-role=template-unstrip]' : 'unStripTags',
            'click [data-role=template-strip]' : 'stripTags',
            'click [data-role=template-delete]': 'deleteTemplate',
            'click [data-role=template-load]': 'load'
        },

        init: function () {
            if ($('convert_button_back')) {
                $('convert_button_back').hide();
            }

            this.bindEvents();

            this.renderPaths(<?= /* @noEscape */ $block->getCurrentlyUsedForPaths() ?>, 'currently_used_for');
        },

        bindEvents: function(){
            var events = this.events,
                eventName,
                selector,
                callback,
                key;

            for( key in events ){
                callback    = this[events[key]];
                key         = key.split(' ');

                eventName   = key[0];
                selector    = key.slice(1).join(' ');

                jQuery(selector).on(eventName, jQuery.proxy(callback, this) );
            }
        },

        stripTags: function () {
            if(!window.confirm("<?= $block->escapeJs(
                $block->escapeHtml(__('Are you sure you want to strip tags?'))
            ) ?>")) {
                return false;
            }
            this.unconvertedText = $('template_text').value;
            $('convert_button').hide();
            $('template_text').value =  $('template_text').value.stripScripts().replace(
                new RegExp('<style[^>]*>[\\S\\s]*?</style>', 'img'), ''
            ).stripTags().strip();
            $('convert_button_back').show();
            $('field_template_styles').hide();
            this.typeChange = true;
            return false;
        },
        unStripTags: function () {
            $('convert_button').show();
            $('convert_button_back').hide();
            $('template_text').value =  this.unconvertedText;
            $('field_template_styles').show();
            this.typeChange = false;
            return false;
        },

        renderPaths: function(paths, fieldId) {
            var field = $(fieldId);
            if (field) {
                field.down('div').down('div').update(this.parsePath(paths, 
                '<span class="path-delimiter">&nbsp;-&gt;&nbsp;</span>', '<br />'));
            }
        },

        parsePath: function (value, pathDelimiter, lineDelimiter) {
            if (Object.isArray(value)) {
                var result = [];
                for (var i = 0, len = value.length; i < len; i++) {
                    result.push(this.parsePath(value[i], pathDelimiter, pathDelimiter));
                }
                return result.join(lineDelimiter);
            }

            if(!Object.isString(value) && value.title) {
                value = (
                    value.url ? '<a href="' + value.url + '">' + value.title + '</a>' : value.title) + (value.scope ? 
                    '&nbsp;&nbsp;<span class="path-scope-label">(' + value.scope + ')</span>' : '');
            }

            return value;
        },
        preview: function() {
            if (this.typeChange) {
                $('preview_type').value = <?= /* @noEscape */ TemplateTypesInterface::TYPE_TEXT ?>;
            } else {
                $('preview_type').value = <?= (int) $block->getTemplateType() ?>;
            }
            if (typeof tinyMCE == 'undefined' || !tinyMCE.get('template_text')) {
                $('preview_text').value = $('template_text').value;
            } else {
                $('preview_text').value = tinyMCE.get('template_text').getHTML();
            }

            if ($('template_styles') != undefined) {
                $('preview_styles').value = $('template_styles').value;
            }

            // Temporary solution will be replaced after refactoring of email templates functionality
            jQuery('#email_template_preview_form').triggerHandler('save');
            return false;
        },
        openVariableChooser: function() {
            Variables.init('template_text');
            if (this.variables == null) {
                Variables.resetData();
                this.variables = $('variables').value.evalJSON();
                var templateVariablesValue = $('template_variables').value;
                if (this.variables && templateVariablesValue) {
                    if (templateVariables = templateVariablesValue.evalJSON()) {
                        this.variables.push(templateVariables);
                    }
                }
            }
            if (this.variables) {
                Variables.openVariableChooser(this.variables);
            }
        }
    };

    templateControl.init();
//]]>

});
</script>
