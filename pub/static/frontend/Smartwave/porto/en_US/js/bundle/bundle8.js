require.config({"config": {
        "jsbuild":{"Webkul_Marketplace/catalog/product/composite/configure.js":"/**\n * Webkul Software.\n *\n * @category  Webkul\n * @package   Webkul_Marketplace\n * @author    Webkul Software Private Limited\n * @copyright Webkul Software Private Limited (https://webkul.com)\n * @license   https://store.webkul.com/license.html\n */\ndefine([\n    \"jquery\",\n    \"jquery/ui\",\n    \"mage/translate\",\n    \"prototype\",\n    \"Magento_Ui/js/modal/modal\"\n], function (jQuery) {\n\n    window.ProductConfigure = Class.create();\n\n    ProductConfigure.prototype = {\n\n        listTypes:                  $H({}),\n        current:                    $H({}),\n        itemsFilter:                $H({}),\n        blockWindow:                null,\n        blockForm:                  null,\n        blockFormFields:            null,\n        blockFormAdd:               null,\n        blockFormConfirmed:         null,\n        blockConfirmed:             null,\n        blockIFrame:                null,\n        blockCancelBtn:             null,\n        blockMask:                  null,\n        blockMsg:                   null,\n        blockMsgError:              null,\n        windowHeight:               null,\n        confirmedCurrentId:         null,\n        confirmCallback:            {},\n        cancelCallback:             {},\n        onLoadIFrameCallback:       {},\n        showWindowCallback:         {},\n        beforeSubmitCallback:       {},\n        iFrameJSVarname:            null,\n        _listTypeId:                1,\n\n        /**\n         * Initialize object\n         */\n        initialize: function () {\n            var self = this;\n\n            this._initWindowElements();\n            this.dialog = jQuery('#product_composite_configure').modal({\n                title: jQuery.mage.__('Configure Product'),\n                type: 'slide',\n                buttons: [{\n                    text: jQuery.mage.__('OK'),\n                    'class': 'action-primary',\n                    click: function () {\n                        self.onConfirmBtn();\n                    }\n                }]\n            });\n        },\n\n        /**\n         * Initialize window elements\n         */\n        _initWindowElements: function () {\n            this.blockWindow                = $('product_composite_configure');\n            this.blockForm                  = $('product_composite_configure_form');\n            this.blockFormFields            = $('product_composite_configure_form_fields');\n            this.blockFormAdd               = $('product_composite_configure_form_additional');\n            this.blockFormConfirmed         = $('product_composite_configure_form_confirmed');\n            this.blockConfirmed             = $('product_composite_configure_confirmed');\n            this.blockIFrame                = $('product_composite_configure_iframe');\n            this.blockCancelBtn             = $('product_composite_configure_form_cancel');\n            this.blockMsg                   = $('product_composite_configure_messages');\n            this.blockMsgError              = this.blockMsg.select('.message.error div')[0];\n            this.iFrameJSVarname            = this.blockForm.select('input[name=\"as_js_varname\"]')[0].value;\n        },\n\n        /**\n         * Returns next unique list type id\n         */\n        _generateListTypeId: function () {\n            return '_internal_lt_' + (this._listTypeId++);\n        },\n\n        /**\n         * Add product list types as scope and their urls\n         * expamle: addListType('product_to_add', {urlFetch: 'http://magento...'})\n         * expamle: addListType('wishlist', {urlSubmit: 'http://magento...'})\n         *\n         * @param type types as scope\n         * @param urls obj can be\n         *             - {urlFetch: 'http://magento...'} for fetching configuration fields through ajax\n         *             - {urlConfirm: 'http://magento...'} for submit configured data through iFrame when clicked confirm button\n         *             - {urlSubmit: 'http://magento...'} for submit configured data through iFrame\n         */\n        addListType: function (type, urls) {\n            if ('undefined' == typeof this.listTypes[type]) {\n                this.listTypes[type] = {};\n            }\n            Object.extend(this.listTypes[type], urls);\n            return this;\n        },\n\n        /**\n         * Adds complex list type - that is used to submit several list types at once\n         * Only urlSubmit is possible for this list type\n         * expamle: addComplexListType(['wishlist', 'product_list'], 'http://magento...')\n         *\n         * @param type types as scope\n         * @param urls obj can be\n         *             - {urlSubmit: 'http://magento...'} for submit configured data through iFrame\n         * @return type string\n         */\n        addComplexListType: function (types, urlSubmit) {\n            var type = this._generateListTypeId();\n            this.listTypes[type] = {};\n            this.listTypes[type].complexTypes = types;\n            this.listTypes[type].urlSubmit = urlSubmit;\n            return type;\n        },\n\n        /**\n         * Add filter of items\n         *\n         * @param listType scope name\n         * @param itemsFilter\n         */\n        addItemsFilter: function (listType, itemsFilter) {\n            if (!listType || !itemsFilter) {\n                return false;\n            }\n            if ('undefined' == typeof this.itemsFilter[listType]) {\n                this.itemsFilter[listType] = [];\n            }\n            this.itemsFilter[listType] = this.itemsFilter[listType].concat(itemsFilter);\n            return this;\n        },\n\n        /**\n         * Returns id of block where configuration for an item is stored\n         *\n         * @param listType scope name\n         * @param itemId\n         * @return string\n         */\n        _getConfirmedBlockId: function (listType, itemId) {\n            return this.blockConfirmed.id + '[' + listType + '][' + itemId + ']';\n        },\n\n        /**\n         * Checks whether item has some configuration fields\n         *\n         * @param listType scope name\n         * @param itemId\n         * @return bool\n         */\n        itemConfigured: function (listType, itemId) {\n            var confirmedBlockId = this._getConfirmedBlockId(listType, itemId);\n            var itemBlock = $(confirmedBlockId);\n            return !!(itemBlock && itemBlock.innerHTML);\n        },\n\n        /**\n         * Show configuration fields of item, if it not found then get it through ajax\n         *\n         * @param listType scope name\n         * @param itemId\n         */\n        showItemConfiguration: function (listType, itemId) {\n            if (!listType || !itemId) {\n                return false;\n            }\n\n            this.initialize();\n            this.current.listType = listType;\n            this.current.itemId = itemId;\n            this.confirmedCurrentId = this._getConfirmedBlockId(listType, itemId);\n\n            if (!this.itemConfigured(listType, itemId)) {\n                this._requestItemConfiguration(listType, itemId);\n            } else {\n                this._processFieldsData('item_restore');\n                this._showWindow();\n            }\n        },\n\n        /**\n         * Get configuration fields of product through ajax and show them\n         *\n         * @param listType scope name\n         * @param itemId\n         */\n        _requestItemConfiguration: function (listType, itemId) {\n            if (!this.listTypes[listType].urlFetch) {\n                return false;\n            }\n            var url = this.listTypes[listType].urlFetch;\n            if (url) {\n                new Ajax.Request(url, {\n                    parameters: {id: itemId},\n                    onSuccess: function (transport) {\n                        var response = transport.responseText;\n                        if (response.isJSON()) {\n                            response = response.evalJSON();\n                            if (response.error) {\n                                this.blockMsg.show();\n                                this.blockMsgError.innerHTML = response.message;\n                                this.blockCancelBtn.hide();\n                                this.setConfirmCallback(listType, null);\n                                this._showWindow();\n                            }\n                        } else if (response) {\n                            response = response + '';\n                            this.blockFormFields.update(response);\n\n                            // Add special div to hold mage data, e.g. scripts to execute on every popup show\n                            var mageData = {};\n                            var scripts = response.extractScripts();\n                            mageData.scripts = scripts;\n\n                            var scriptHolder = new Element('div', {'style': 'display:none'});\n                            scriptHolder.mageData = mageData;\n                            this.blockFormFields.insert(scriptHolder);\n\n                            // Show window\n                            this._showWindow();\n                        }\n                    }.bind(this)\n                });\n            }\n        },\n\n        /**\n         * Triggered on confirm button click\n         * Do submit configured data through iFrame if needed\n         */\n        onConfirmBtn: function () {\n            if (jQuery(this.blockForm).valid()) {\n                if (this.listTypes[this.current.listType].urlConfirm) {\n                    this.submit();\n                } else {\n                    this._processFieldsData('item_confirm');\n                    this._closeWindow();\n                    if (Object.isFunction(this.confirmCallback[this.current.listType])) {\n                        this.confirmCallback[this.current.listType]();\n                    }\n                }\n            }\n            return this;\n        },\n\n        /**\n         * Triggered on cancel button click\n         */\n        onCancelBtn: function () {\n            this._closeWindow();\n            if (Object.isFunction(this.cancelCallback[this.current.listType])) {\n                this.cancelCallback[this.current.listType]();\n            }\n            return this;\n        },\n\n        /**\n         * Submit configured data through iFrame\n         *\n         * @param listType scope name\n         */\n        submit: function (listType) {\n            // prepare data\n            if (listType) {\n                this.current.listType = listType;\n                this.current.itemId = null;\n            }\n            var urlConfirm = this.listTypes[this.current.listType].urlConfirm;\n            var urlSubmit = this.listTypes[this.current.listType].urlSubmit;\n            if (!urlConfirm && !urlSubmit) {\n                return false;\n            }\n            if (urlConfirm) {\n                this.blockForm.action = urlConfirm;\n                this.addFields([new Element('input', {type: 'hidden', name: 'id', value: this.current.itemId})]);\n            } else {\n                this.blockForm.action = urlSubmit;\n\n                var complexTypes = this.listTypes[this.current.listType].complexTypes;\n                if (complexTypes) {\n                    this.addFields([new Element('input', {type: 'hidden', name: 'configure_complex_list_types', value: complexTypes.join(',')})]);\n                }\n\n                this._processFieldsData('current_confirmed_to_form');\n\n                // Disable item controls that duplicate added fields (e.g. sometimes qty controls can intersect)\n                // so they won't be submitted\n                var tagNames = ['input', 'select', 'textarea'];\n\n                var names = {}; // Map of added field names\n                for (var i = 0, len = tagNames.length; i < len; i++) {\n                    var tagName = tagNames[i];\n                    var elements = this.blockFormAdd.getElementsByTagName(tagName);\n                    for (var index = 0, elLen = elements.length; index < elLen; index++) {\n                        names[elements[index].name] = true;\n                    }\n                }\n\n                for (var i = 0, len = tagNames.length; i < len; i++) {\n                    var tagName = tagNames[i];\n                    var elements = this.blockFormConfirmed.getElementsByTagName(tagName);\n                    for (var index = 0, elLen = elements.length; index < elLen; index++) {\n                        var element = elements[index];\n                        if (names[element.name]) {\n                            element.setAttribute('configure_disabled', 1);\n                            element.setAttribute('configure_prev_disabled', element.disabled ? 1 : 0);\n                            element.disabled = true;\n                        } else {\n                            element.setAttribute('configure_disabled', 0);\n                        }\n                    }\n                }\n            }\n            // do submit\n            if (Object.isFunction(this.beforeSubmitCallback[this.current.listType])) {\n                this.beforeSubmitCallback[this.current.listType]();\n            }\n            this.blockForm.submit();\n\n            // Show loader\n            jQuery(this.blockForm).trigger('processStart');\n\n            return this;\n        },\n\n        /**\n         * Add dynamically additional fields for form\n         *\n         * @param fields\n         */\n        addFields: function (fields) {\n            fields.each(function (elm) {\n                this.blockFormAdd.insert(elm);\n            }.bind(this));\n            return this;\n        },\n\n        /**\n         * Triggered when form was submitted and iFrame was loaded. Get response from iFrame and handle it\n         */\n        onLoadIFrame: function () {\n            this.blockFormConfirmed.select('[configure_disabled=1]').each(function (element) {\n                element.disabled = element.getAttribute('configure_prev_disabled') == '1';\n            });\n\n            this._processFieldsData('form_confirmed_to_confirmed');\n\n            var response = this.blockIFrame.contentWindow[this.iFrameJSVarname];\n            if (response && \"object\" == typeof response) {\n                if (this.listTypes[this.current.listType].urlConfirm) {\n                    if (response.ok) {\n                        this._closeWindow();\n                        this.clean('current');\n                    } else if (response.error) {\n                        this.showItemConfiguration(this.current.listType, this.current.itemId);\n                        this.blockMsg.show();\n                        this.blockMsgError.innerHTML = response.message;\n                        this._showWindow();\n                        return false;\n                    }\n                }\n                if (Object.isFunction(this.onLoadIFrameCallback[this.current.listType])) {\n                    this.onLoadIFrameCallback[this.current.listType](response);\n                }\n                document.fire(this.current.listType + ':afterIFrameLoaded');\n            }\n            // Hide loader\n            jQuery(this.blockForm).trigger('processStop');\n\n            this.clean('current');\n            this.initialize();\n        },\n\n        /**\n         * Helper for fetching content from iFrame\n         */\n        _getIFrameContent: function () {\n            var content = (this.blockIFrame.contentWindow || this.blockIFrame.contentDocument);\n            if (content.document) {\n                content=content.document;\n            }\n            return content;\n        },\n\n        /**\n         * Helper to find qty of currently confirmed item\n         */\n        getCurrentConfirmedQtyElement: function () {\n            var elms = $(this.confirmedCurrentId).getElementsByTagName('input');\n            for (var i = 0; i < elms.length; i++) {\n                if (elms[i].name == 'qty') {\n                    return elms[i];\n                }\n            }\n        },\n\n        /**\n         * Helper to find qty of active form\n         */\n        getCurrentFormQtyElement: function () {\n            var elms = this.blockFormFields.getElementsByTagName('input');\n            for (var i = 0; i < elms.length; i++) {\n                if (elms[i].name == 'qty') {\n                    return elms[i];\n                }\n            }\n        },\n\n        /**\n         * Show configuration window\n         */\n        _showWindow: function () {\n            this.dialog.modal('openModal');\n            //this._toggleSelectsExceptBlock(false);\n\n            if (Object.isFunction(this.showWindowCallback[this.current.listType])) {\n                this.showWindowCallback[this.current.listType]();\n            }\n        },\n\n        /**\n         * toggles Selects states (for IE) except those to be shown in popup\n         */\n        /*_toggleSelectsExceptBlock: function(flag) {\n         if(Prototype.Browser.IE){\n         if (this.blockForm) {\n         var states = new Array;\n         var selects = this.blockForm.getElementsByTagName(\"select\");\n         for(var i=0; i<selects.length; i++){\n         states[i] = selects[i].style.visibility\n         }\n         }\n         if (this.blockForm) {\n         for(i=0; i<selects.length; i++){\n         selects[i].style.visibility = states[i]\n         }\n         }\n         }\n         },*/\n\n        /**\n         * Close configuration window\n         */\n        _closeWindow: function () {\n            this.dialog.modal('closeModal');\n            //this.blockWindow.style.display = 'none';\n            //this.clean('window');\n        },\n\n        /**\n         * Attach callback function triggered when confirm button was clicked\n         *\n         * @param confirmCallback\n         */\n        setConfirmCallback: function (listType, confirmCallback) {\n            this.confirmCallback[listType] = confirmCallback;\n            return this;\n        },\n\n        /**\n         * Attach callback function triggered when cancel button was clicked\n         *\n         * @param cancelCallback\n         */\n        setCancelCallback: function (listType, cancelCallback) {\n            this.cancelCallback[listType] = cancelCallback;\n            return this;\n        },\n\n        /**\n         * Attach callback function triggered when iFrame was loaded\n         *\n         * @param onLoadIFrameCallback\n         */\n        setOnLoadIFrameCallback: function (listType, onLoadIFrameCallback) {\n            this.onLoadIFrameCallback[listType] = onLoadIFrameCallback;\n            return this;\n        },\n\n        /**\n         * Attach callback function triggered when iFrame was loaded\n         *\n         * @param showWindowCallback\n         */\n        setShowWindowCallback: function (listType, showWindowCallback) {\n            this.showWindowCallback[listType] = showWindowCallback;\n            return this;\n        },\n\n        /**\n         * Attach callback function triggered before submitting form\n         *\n         * @param beforeSubmitCallback\n         */\n        setBeforeSubmitCallback: function (listType, beforeSubmitCallback) {\n            this.beforeSubmitCallback[listType] = beforeSubmitCallback;\n            return this;\n        },\n\n        /**\n         * Clean object data\n         *\n         * @param method can be 'all' or 'current'\n         */\n        clean: function (method) {\n            var listInfo = null;\n            var listTypes = null;\n            var removeConfirmed = function (listTypes) {\n                this.blockConfirmed.childElements().each(function (elm) {\n                    for (var i = 0, len = listTypes.length; i < len; i++) {\n                        var pattern = this.blockConfirmed.id + '[' + listTypes[i] + ']';\n                        if (elm.id.indexOf(pattern) == 0) {\n                            elm.remove();\n                            break;\n                        }\n                    }\n                }.bind(this));\n            }.bind(this);\n\n            switch (method) {\n                case 'current':\n                    listInfo = this.listTypes[this.current.listType];\n                    listTypes = [this.current.listType];\n                    if (listInfo && listInfo.complexTypes) {\n                        listTypes = listTypes.concat(listInfo.complexTypes);\n                    }\n                    removeConfirmed(listTypes);\n                    break;\n                case 'window':\n                    this.blockFormFields.update();\n                    this.blockMsg.hide();\n                    this.blockMsgError.update();\n                    this.blockCancelBtn.show();\n                    break;\n                default:\n                    // search in list types for its cleaning\n                    if (this.listTypes[method]) {\n                        listInfo = this.listTypes[method];\n                        listTypes = [method];\n                        if (listInfo.complexTypes) {\n                            listTypes = listTypes.concat(listInfo.complexTypes);\n                        }\n                        removeConfirmed(listTypes);\n                        // clean all\n                    } else if (!method) {\n                        this.current = $H({});\n                        this.blockConfirmed.update();\n                        this.blockFormFields.update();\n                        this.blockMsg.hide();\n                        this.blockMsgError.update();\n                        this.blockCancelBtn.show();\n                    }\n                    break;\n            }\n            this._getIFrameContent().body.innerHTML = '';\n            this.blockIFrame.contentWindow[this.iFrameJSVarname] = {};\n            this.blockFormAdd.update();\n            this.blockFormConfirmed.update();\n            this.blockForm.action = '';\n\n            return this;\n        },\n\n        /**\n         * Process fields data: save, restore, move saved to form and back\n         *\n         * @param method can be 'item_confirm', 'item_restore', 'current_confirmed_to_form', 'form_confirmed_to_confirmed'\n         */\n        _processFieldsData: function (method) {\n\n            /**\n             * Internal function for rename fields names of some list type\n             * if listType is not specified, then it won't be added as prefix to all names\n             *\n             * @param method can be 'current_confirmed_to_form', 'form_confirmed_to_confirmed'\n             * @param blockItem\n             */\n            var _renameFields = function (method, blockItem, listType) {\n                var pattern         = null;\n                var patternFlat     = null;\n                var replacement     = null;\n                var replacementFlat = null\n                var scopeArr        = blockItem.id.match(/.*\\[\\w+\\]\\[([^\\]]+)\\]$/);\n                var itemId          = scopeArr[1];\n                if (method == 'current_confirmed_to_form') {\n                    pattern         = RegExp('(\\\\w+)(\\\\[?)');\n                    patternFlat     = RegExp('(\\\\w+)');\n                    replacement     = 'item[' + itemId + '][$1]$2';\n                    replacementFlat = 'item_' + itemId + '_$1';\n                    if (listType) {\n                        replacement = 'list[' + listType + '][item][' + itemId + '][$1]$2';\n                        replacementFlat = 'list_' + listType + '_' + replacementFlat;\n                    }\n                } else if (method == 'form_confirmed_to_confirmed') {\n                    var stPattern = 'item\\\\[' + itemId + '\\\\]\\\\[(\\\\w+)\\\\](.*)';\n                    var stPatternFlat = 'item_' + itemId + '_(\\\\w+)';\n                    if (listType) {\n                        stPattern = 'list\\\\[' + listType + '\\\\]\\\\[item\\\\]\\\\[' + itemId + '\\\\]\\\\[(\\\\w+)\\\\](.*)';\n                        stPatternFlat = 'list_' + listType + '_' + stPatternFlat;\n                    }\n                    pattern         = new RegExp(stPattern);\n                    patternFlat     = new RegExp(stPatternFlat);\n                    replacement     = '$1$2';\n                    replacementFlat = '$1';\n                } else {\n                    return false;\n                }\n                var rename = function (elms) {\n                    for (var i = 0; i < elms.length; i++) {\n                        if (elms[i].name && elms[i].type == 'file') {\n                            elms[i].name = elms[i].name.replace(patternFlat, replacementFlat);\n                        } else if (elms[i].name) {\n                            elms[i].name = elms[i].name.replace(pattern, replacement);\n                        }\n                    }\n                };\n                rename(blockItem.getElementsByTagName('input'));\n                rename(blockItem.getElementsByTagName('select'));\n                rename(blockItem.getElementsByTagName('textarea'));\n            }.bind(this);\n\n            switch (method) {\n                case 'item_confirm':\n                    if (!$(this.confirmedCurrentId)) {\n                        this.blockConfirmed.insert(new Element('div', {id: this.confirmedCurrentId}));\n                    } else {\n                        $(this.confirmedCurrentId).update();\n                    }\n                    this.blockFormFields.childElements().each(function (elm) {\n                        $(this.confirmedCurrentId).insert(elm);\n                    }.bind(this));\n                    break;\n                case 'item_restore':\n                    this.blockFormFields.update();\n\n                    // clone confirmed to form\n                    var mageData = null;\n                    $(this.confirmedCurrentId).childElements().each(function (elm) {\n                        var cloned = elm.cloneNode(true);\n                        if (elm.mageData) {\n                            cloned.mageData = elm.mageData;\n                            mageData = elm.mageData;\n                        }\n                        this.blockFormFields.insert(cloned);\n                    }.bind(this));\n\n                    // get confirmed values\n                    var fieldsValue = {};\n                    var getConfirmedValues = function (elms) {\n                        for (var i = 0; i < elms.length; i++) {\n                            if (elms[i].name) {\n                                if ('undefined' == typeof fieldsValue[elms[i].name] ) {\n                                    fieldsValue[elms[i].name] = {};\n                                }\n                                if (elms[i].type == 'checkbox') {\n                                    fieldsValue[elms[i].name][elms[i].value] = elms[i].checked;\n                                } else if (elms[i].type == 'radio') {\n                                    if (elms[i].checked) {\n                                        fieldsValue[elms[i].name] = elms[i].value;\n                                    }\n                                } else {\n                                    fieldsValue[elms[i].name] = Form.Element.getValue(elms[i]);\n                                }\n                            }\n                        }\n                    }.bind(this);\n                    getConfirmedValues($(this.confirmedCurrentId).getElementsByTagName('input'));\n                    getConfirmedValues($(this.confirmedCurrentId).getElementsByTagName('select'));\n                    getConfirmedValues($(this.confirmedCurrentId).getElementsByTagName('textarea'));\n\n                    // restore confirmed values\n                    var restoreConfirmedValues = function (elms) {\n                        for (var i = 0; i < elms.length; i++) {\n                            if ('undefined' != typeof fieldsValue[elms[i].name]) {\n                                if (elms[i].type != 'file') {\n                                    if (elms[i].type == 'checkbox') {\n                                        elms[i].checked = fieldsValue[elms[i].name][elms[i].value];\n                                    } else if (elms[i].type == 'radio') {\n                                        if (elms[i].value == fieldsValue[elms[i].name]) {\n                                            elms[i].checked = true;\n                                        }\n                                    } else {\n                                        elms[i].setValue(fieldsValue[elms[i].name]);\n                                    }\n                                }\n                            }\n                        }\n                    }.bind(this);\n                    restoreConfirmedValues(this.blockFormFields.getElementsByTagName('input'));\n                    restoreConfirmedValues(this.blockFormFields.getElementsByTagName('select'));\n                    restoreConfirmedValues(this.blockFormFields.getElementsByTagName('textarea'));\n\n                    // Execute scripts\n                    if (mageData && mageData.scripts) {\n                        this.restorePhase = true;\n                        try {\n                            mageData.scripts.map(function (script) {\n                                return eval(script);\n                            });\n                        } catch (e) {\n                        }\n                        this.restorePhase = false;\n                    }\n                    break;\n                case 'current_confirmed_to_form':\n                    var allowedListTypes = {};\n                    allowedListTypes[this.current.listType] = true;\n                    var listInfo = this.listTypes[this.current.listType];\n                    if (listInfo.complexTypes) {\n                        for (var i = 0, len = listInfo.complexTypes.length; i < len; i++) {\n                            allowedListTypes[listInfo.complexTypes[i]] = true;\n                        }\n                    }\n\n                    this.blockFormConfirmed.update();\n                    this.blockConfirmed.childElements().each(function (blockItem) {\n                        var scopeArr    = blockItem.id.match(/.*\\[(\\w+)\\]\\[([^\\]]+)\\]$/);\n                        var listType    = scopeArr[1];\n                        var itemId    = scopeArr[2];\n                        if (allowedListTypes[listType] && (!this.itemsFilter[listType]\n                            || this.itemsFilter[listType].indexOf(itemId) != -1)) {\n                            _renameFields(method, blockItem, listInfo.complexTypes ? listType : null);\n                            this.blockFormConfirmed.insert(blockItem);\n                        }\n                    }.bind(this));\n                    break;\n                case 'form_confirmed_to_confirmed':\n                    var listInfo = this.listTypes[this.current.listType];\n                    this.blockFormConfirmed.childElements().each(function (blockItem) {\n                        var scopeArr = blockItem.id.match(/.*\\[(\\w+)\\]\\[([^\\]]+)\\]$/);\n                        var listType = scopeArr[1];\n                        _renameFields(method, blockItem, listInfo.complexTypes ? listType : null);\n                        this.blockConfirmed.insert(blockItem);\n                    }.bind(this));\n                    break;\n            }\n        },\n\n        /**\n         * Check if qty selected correctly\n         *\n         * @param object element\n         * @param object event\n         */\n        changeOptionQty: function (element, event) {\n            var checkQty = true;\n            if ('undefined' != typeof event) {\n                if (event.keyCode == 8 || event.keyCode == 46) {\n                    checkQty = false;\n                }\n            }\n            if (checkQty && (Number(element.value) <= 0 || isNaN(Number(element.value)))) {\n                element.value = 1;\n            }\n        }\n    };\n\n    productConfigure = new ProductConfigure();\n});\n","Webkul_Marketplace/js/advanced-pricing-handler.js":"/**\n * Webkul Software.\n *\n * @category  Webkul\n * @package   Webkul_Marketplace\n * @author    Webkul Software Private Limited\n * @copyright Webkul Software Private Limited (https://webkul.com)\n * @license   https://store.webkul.com/license.html\n */\ndefine([\n    'jquery',\n    'Webkul_Marketplace/catalog/type-events'\n], function ($, productType) {\n    'use strict';\n\n    return {\n        $initiallyDisabledAttributes: [],\n        $links: $('[data-ui-id=product-tabs-tab-link-advanced-pricing]'),\n        $tab: $('[data-tab-panel=advanced-pricing]'),\n        toggleDisabledAttribute: function (disabled) {\n            $('input,select', this.$tab).each(function (index, element) {\n                if (!$.inArray(element, this.$initiallyDisabledAttributes)) {\n                    $(element).attr('disabled', disabled);\n                }\n            });\n        },\n        init: function () {\n            $(document).on('changeTypeProduct', this._initType.bind(this));\n            this._setInitialState();\n            this._initType();\n        },\n        _setInitialState: function () {\n            if (this.$initiallyDisabledAttributes.length == 0) {\n                this.$initiallyDisabledAttributes = $('input:disabled,select:disabled', this.$tab).toArray();\n            }\n        },\n        _initType: function () {\n            var isConfigurable = productType.type.current === 'configurable';\n\n            if (isConfigurable) {\n                this.$links.hide();\n            } else {\n                this.$links.show();\n            }\n\n            this.toggleDisabledAttribute(isConfigurable);\n        }\n    };\n});\n","Webkul_Marketplace/js/calendar-widget.js":"/**\n * Webkul Software.\n *\n * @category  Webkul\n * @package   Webkul_Marketplace\n * @author    Webkul Software Private Limited\n * @copyright Webkul Software Private Limited (https://webkul.com)\n * @license   https://store.webkul.com/license.html\n */\ndefine([\n    'jquery',\n    'jquery/ui'\n    ], function($){\n        $.widget('mage.calendarWidget', {\n            options: {\n            },\n            /**\n             * Widget initialization\n             * @private\n             */\n             _create: function() {\n                self = this;\n                var dayNames, dayNamesMin, monthNames, monthNamesShort, enUS;\n                dayNames = self.options.dayNames;\n                dayNamesMin = self.options.dayNamesMin;\n                monthNames = self.options.monthNames;\n                monthNamesShort = self.options.monthNamesShort;\n                enUS = self.options.enUS;\n                var config = {\n                        dayNames,\n                        dayNamesMin,\n                        monthNames,\n                        monthNamesShort\n                    };\n                $.extend(true, $, {\n                    calendarConfig: config\n                });\n                enUS = {enUS}; // en_US locale reference\n            }\n        });\n\n    return $.mage.calendarWidget;\n});","Webkul_Marketplace/js/color-picker-function.js":"/**\n * Webkul Software.\n *\n * @category  Webkul\n * @package   Webkul_Marketplace\n * @author    Webkul Software Private Limited\n * @copyright Webkul Software Private Limited (https://webkul.com)\n * @license   https://store.webkul.com/license.html\n */\n/**\n * Color picker function\n */\n/*jshint jquery:true*/\ndefine([\n    \"jquery\",\n    \"colorpicker\",\n    \"jquery/ui\"\n], function ($) {\n    'use strict';\n    $.widget('mage.colorPickerFunction', {\n        options: {\n            spanBackgroundColor: '',\n            fadeInSpeed: 500,\n            fadeOutSpeed: 500\n        },\n        _create: function () {\n            var self = this;\n            if (self.options.getActiveColorPickerStatus) {\n                var thisElement = this.element;\n                $(thisElement).css(\n                    'background-color',\n                    '#'+\"'\"+self.options.spanBackgroundColor+\"'\"\n                );\n                $(thisElement).ColorPicker({\n                    color: \"'\"+self.options.spanBackgroundColor+\"'\",\n                    onShow: function (colorPicker) {\n                        $(colorPicker).fadeIn(self.options.fadeInSpeed);\n                        return false;\n                    },\n                    onHide: function (colorPicker) {\n                        $(colorPicker).fadeOut(self.options.fadeOutSpeed);\n                        return false;\n                    },\n                    onChange: function (hsb, hex, rgb) {\n                        $(self.options.backgroundWidthSelector).val('#' + hex);\n                        $(thisElement).css('background-color','#'+hex);\n                    }\n                });\n            }\n        }\n    });\n    return $.mage.colorPickerFunction;\n});\n","Webkul_Marketplace/js/colorpicker.js":"/**\n *\n * Color picker\n * Author: Stefan Petre www.eyecon.ro\n *\n * Dual licensed under the MIT and GPL licenses\n *\n */\n(function ($) {\n    var ColorPicker = function () {\n        var\n            ids = {},\n            inAction,\n            charMin = 65,\n            visible,\n            tpl = '<div class=\"colorpicker\"><div class=\"colorpicker_color\"><div><div></div></div></div><div class=\"colorpicker_hue\"><div></div></div><div class=\"colorpicker_new_color\"></div><div class=\"colorpicker_current_color\"></div><div class=\"colorpicker_hex\"><input type=\"text\" maxlength=\"6\" size=\"6\"></div><div class=\"colorpicker_rgb_r colorpicker_field\"><input type=\"text\" maxlength=\"3\" size=\"3\"><span></span></div><div class=\"colorpicker_rgb_g colorpicker_field\"><input type=\"text\" maxlength=\"3\" size=\"3\" ><span></span></div><div class=\"colorpicker_rgb_b colorpicker_field\"><input type=\"text\" maxlength=\"3\" size=\"3\" ><span></span></div><div class=\"colorpicker_hsb_h colorpicker_field\"><input type=\"text\" maxlength=\"3\" size=\"3\" ><span></span></div><div class=\"colorpicker_hsb_s colorpicker_field\"><input type=\"text\" maxlength=\"3\" size=\"3\" ><span></span></div><div class=\"colorpicker_hsb_b colorpicker_field\"><input type=\"text\" maxlength=\"3\" size=\"3\" ><span></span></div><div class=\"colorpicker_submit\"></div></div>',\n            defaults = {\n                eventName: 'click',\n                onShow: function () {},\n                onBeforeShow: function (){},\n                onHide: function () {},\n                onChange: function () {},\n                onSubmit: function () {},\n                color: 'ff0000',\n                livePreview: true,\n                flat: false\n            },\n            fillRGBFields = function (hsb, cal) {\n                var rgb = HSBToRGB(hsb);\n                $(cal).data('colorpicker').fields\n                    .eq(1).val(rgb.r).end()\n                    .eq(2).val(rgb.g).end()\n                    .eq(3).val(rgb.b).end();\n            },\n            fillHSBFields = function (hsb, cal) {\n                $(cal).data('colorpicker').fields\n                    .eq(4).val(hsb.h).end()\n                    .eq(5).val(hsb.s).end()\n                    .eq(6).val(hsb.b).end();\n            },\n            fillHexFields = function (hsb, cal) {\n                $(cal).data('colorpicker').fields\n                    .eq(0).val(HSBToHex(hsb)).end();\n            },\n            setSelector = function (hsb, cal) {\n                $(cal).data('colorpicker').selector.css('backgroundColor', '#' + HSBToHex({h: hsb.h, s: 100, b: 100}));\n                $(cal).data('colorpicker').selectorIndic.css({\n                    left: parseInt(150 * hsb.s/100, 10),\n                    top: parseInt(150 * (100-hsb.b)/100, 10)\n                });\n            },\n            setHue = function (hsb, cal) {\n                $(cal).data('colorpicker').hue.css('top', parseInt(150 - 150 * hsb.h/360, 10));\n            },\n            setCurrentColor = function (hsb, cal) {\n                $(cal).data('colorpicker').currentColor.css('backgroundColor', '#' + HSBToHex(hsb));\n            },\n            setNewColor = function (hsb, cal) {\n                $(cal).data('colorpicker').newColor.css('backgroundColor', '#' + HSBToHex(hsb));\n            },\n            keyDown = function (ev) {\n                var pressedKey = ev.charCode || ev.keyCode || -1;\n                if ((pressedKey > charMin && pressedKey <= 90) || pressedKey == 32) {\n                    return false;\n                }\n                var cal = $(this).parent().parent();\n                if (cal.data('colorpicker').livePreview === true) {\n                    change.apply(this);\n                }\n            },\n            change = function (ev) {\n                var cal = $(this).parent().parent(), col;\n                if (this.parentNode.className.indexOf('_hex') > 0) {\n                    cal.data('colorpicker').color = col = HexToHSB(fixHex(this.value));\n                } else if (this.parentNode.className.indexOf('_hsb') > 0) {\n                    cal.data('colorpicker').color = col = fixHSB({\n                        h: parseInt(cal.data('colorpicker').fields.eq(4).val(), 10),\n                        s: parseInt(cal.data('colorpicker').fields.eq(5).val(), 10),\n                        b: parseInt(cal.data('colorpicker').fields.eq(6).val(), 10)\n                    });\n                } else {\n                    cal.data('colorpicker').color = col = RGBToHSB(fixRGB({\n                        r: parseInt(cal.data('colorpicker').fields.eq(1).val(), 10),\n                        g: parseInt(cal.data('colorpicker').fields.eq(2).val(), 10),\n                        b: parseInt(cal.data('colorpicker').fields.eq(3).val(), 10)\n                    }));\n                }\n                if (ev) {\n                    fillRGBFields(col, cal.get(0));\n                    fillHexFields(col, cal.get(0));\n                    fillHSBFields(col, cal.get(0));\n                }\n                setSelector(col, cal.get(0));\n                setHue(col, cal.get(0));\n                setNewColor(col, cal.get(0));\n                cal.data('colorpicker').onChange.apply(cal, [col, HSBToHex(col), HSBToRGB(col)]);\n            },\n            blur = function (ev) {\n                var cal = $(this).parent().parent();\n                cal.data('colorpicker').fields.parent().removeClass('colorpicker_focus');\n            },\n            focus = function () {\n                charMin = this.parentNode.className.indexOf('_hex') > 0 ? 70 : 65;\n                $(this).parent().parent().data('colorpicker').fields.parent().removeClass('colorpicker_focus');\n                $(this).parent().addClass('colorpicker_focus');\n            },\n            downIncrement = function (ev) {\n                var field = $(this).parent().find('input').focus();\n                var current = {\n                    el: $(this).parent().addClass('colorpicker_slider'),\n                    max: this.parentNode.className.indexOf('_hsb_h') > 0 ? 360 : (this.parentNode.className.indexOf('_hsb') > 0 ? 100 : 255),\n                    y: ev.pageY,\n                    field: field,\n                    val: parseInt(field.val(), 10),\n                    preview: $(this).parent().parent().data('colorpicker').livePreview\n                };\n                $(document).bind('mouseup', current, upIncrement);\n                $(document).bind('mousemove', current, moveIncrement);\n            },\n            moveIncrement = function (ev) {\n                ev.data.field.val(Math.max(0, Math.min(ev.data.max, parseInt(ev.data.val + ev.pageY - ev.data.y, 10))));\n                if (ev.data.preview) {\n                    change.apply(ev.data.field.get(0), [true]);\n                }\n                return false;\n            },\n            upIncrement = function (ev) {\n                change.apply(ev.data.field.get(0), [true]);\n                ev.data.el.removeClass('colorpicker_slider').find('input').focus();\n                $(document).unbind('mouseup', upIncrement);\n                $(document).unbind('mousemove', moveIncrement);\n                return false;\n            },\n            downHue = function (ev) {\n                var current = {\n                    cal: $(this).parent(),\n                    y: $(this).offset().top\n                };\n                current.preview = current.cal.data('colorpicker').livePreview;\n                $(document).bind('mouseup', current, upHue);\n                $(document).bind('mousemove', current, moveHue);\n            },\n            moveHue = function (ev) {\n                change.apply(\n                    ev.data.cal.data('colorpicker')\n                        .fields\n                        .eq(4)\n                        .val(parseInt(360*(150 - Math.max(0,Math.min(150,(ev.pageY - ev.data.y))))/150, 10))\n                        .get(0),\n                    [ev.data.preview]\n                );\n                return false;\n            },\n            upHue = function (ev) {\n                fillRGBFields(ev.data.cal.data('colorpicker').color, ev.data.cal.get(0));\n                fillHexFields(ev.data.cal.data('colorpicker').color, ev.data.cal.get(0));\n                $(document).unbind('mouseup', upHue);\n                $(document).unbind('mousemove', moveHue);\n                return false;\n            },\n            downSelector = function (ev) {\n                var current = {\n                    cal: $(this).parent(),\n                    pos: $(this).offset()\n                };\n                current.preview = current.cal.data('colorpicker').livePreview;\n                $(document).bind('mouseup', current, upSelector);\n                $(document).bind('mousemove', current, moveSelector);\n            },\n            moveSelector = function (ev) {\n                change.apply(\n                    ev.data.cal.data('colorpicker')\n                        .fields\n                        .eq(6)\n                        .val(parseInt(100*(150 - Math.max(0,Math.min(150,(ev.pageY - ev.data.pos.top))))/150, 10))\n                        .end()\n                        .eq(5)\n                        .val(parseInt(100*(Math.max(0,Math.min(150,(ev.pageX - ev.data.pos.left))))/150, 10))\n                        .get(0),\n                    [ev.data.preview]\n                );\n                return false;\n            },\n            upSelector = function (ev) {\n                fillRGBFields(ev.data.cal.data('colorpicker').color, ev.data.cal.get(0));\n                fillHexFields(ev.data.cal.data('colorpicker').color, ev.data.cal.get(0));\n                $(document).unbind('mouseup', upSelector);\n                $(document).unbind('mousemove', moveSelector);\n                return false;\n            },\n            enterSubmit = function (ev) {\n                $(this).addClass('colorpicker_focus');\n            },\n            leaveSubmit = function (ev) {\n                $(this).removeClass('colorpicker_focus');\n            },\n            clickSubmit = function (ev) {\n                var cal = $(this).parent();\n                var col = cal.data('colorpicker').color;\n                cal.data('colorpicker').origColor = col;\n                setCurrentColor(col, cal.get(0));\n                cal.data('colorpicker').onSubmit(col, HSBToHex(col), HSBToRGB(col), cal.data('colorpicker').el);\n            },\n            show = function (ev) {\n                var cal = $('#' + $(this).data('colorpickerId'));\n                cal.data('colorpicker').onBeforeShow.apply(this, [cal.get(0)]);\n                var pos = $(this).offset();\n                var viewPort = getViewport();\n                var top = pos.top + this.offsetHeight;\n                var left = pos.left;\n                if (top + 176 > viewPort.t + viewPort.h) {\n                    top -= this.offsetHeight + 176;\n                }\n                if (left + 356 > viewPort.l + viewPort.w) {\n                    left -= 356;\n                }\n                cal.css({left: left + 'px', top: top + 'px'});\n                if (cal.data('colorpicker').onShow.apply(this, [cal.get(0)]) != false) {\n                    cal.show();\n                }\n                $(document).bind('mousedown touchstart', {cal: cal}, hide);\n                return false;\n            },\n            hide = function (ev) {\n                if (!isChildOf(ev.data.cal.get(0), ev.target, ev.data.cal.get(0))) {\n                    if (ev.data.cal.data('colorpicker').onHide.apply(this, [ev.data.cal.get(0)]) != false) {\n                        ev.data.cal.hide();\n                    }\n                    $(document).unbind('mousedown touchstart', hide);\n                }\n            },\n            isChildOf = function (parentEl, el, container) {\n                if (parentEl == el) {\n                    return true;\n                }\n                if (parentEl.contains) {\n                    return parentEl.contains(el);\n                }\n                if (parentEl.compareDocumentPosition ) {\n                    return !!(parentEl.compareDocumentPosition(el) & 16);\n                }\n                var prEl = el.parentNode;\n                while (prEl && prEl != container) {\n                    if (prEl == parentEl) {\n                        return true;\n                    }\n                    prEl = prEl.parentNode;\n                }\n                return false;\n            },\n            getViewport = function () {\n                var m = document.compatMode == 'CSS1Compat';\n                return {\n                    l : window.pageXOffset || (m ? document.documentElement.scrollLeft : document.body.scrollLeft),\n                    t : window.pageYOffset || (m ? document.documentElement.scrollTop : document.body.scrollTop),\n                    w : window.innerWidth || (m ? document.documentElement.clientWidth : document.body.clientWidth),\n                    h : window.innerHeight || (m ? document.documentElement.clientHeight : document.body.clientHeight)\n                };\n            },\n            fixHSB = function (hsb) {\n                return {\n                    h: Math.min(360, Math.max(0, hsb.h)),\n                    s: Math.min(100, Math.max(0, hsb.s)),\n                    b: Math.min(100, Math.max(0, hsb.b))\n                };\n            },\n            fixRGB = function (rgb) {\n                return {\n                    r: Math.min(255, Math.max(0, rgb.r)),\n                    g: Math.min(255, Math.max(0, rgb.g)),\n                    b: Math.min(255, Math.max(0, rgb.b))\n                };\n            },\n            fixHex = function (hex) {\n                var len = 6 - hex.length;\n                if (len > 0) {\n                    var o = [];\n                    for (var i=0; i<len; i++) {\n                        o.push('0');\n                    }\n                    o.push(hex);\n                    hex = o.join('');\n                }\n                return hex;\n            },\n            HexToRGB = function (hex) {\n                var hex = parseInt(((hex.indexOf('#') > -1) ? hex.substring(1) : hex), 16);\n                return {r: hex >> 16, g: (hex & 0x00FF00) >> 8, b: (hex & 0x0000FF)};\n            },\n            HexToHSB = function (hex) {\n                return RGBToHSB(HexToRGB(hex));\n            },\n            RGBToHSB = function (rgb) {\n                var hsb = {\n                    h: 0,\n                    s: 0,\n                    b: 0\n                };\n                var min = Math.min(rgb.r, rgb.g, rgb.b);\n                var max = Math.max(rgb.r, rgb.g, rgb.b);\n                var delta = max - min;\n                hsb.b = max;\n                if (max != 0) {\n                }\n                hsb.s = max != 0 ? 255 * delta / max : 0;\n                if (hsb.s != 0) {\n                    if (rgb.r == max) {\n                        hsb.h = (rgb.g - rgb.b) / delta;\n                    } else if (rgb.g == max) {\n                        hsb.h = 2 + (rgb.b - rgb.r) / delta;\n                    } else {\n                        hsb.h = 4 + (rgb.r - rgb.g) / delta;\n                    }\n                } else {\n                    hsb.h = -1;\n                }\n                hsb.h *= 60;\n                if (hsb.h < 0) {\n                    hsb.h += 360;\n                }\n                hsb.s *= 100/255;\n                hsb.b *= 100/255;\n                return hsb;\n            },\n            HSBToRGB = function (hsb) {\n                var rgb = {};\n                var h = Math.round(hsb.h);\n                var s = Math.round(hsb.s*255/100);\n                var v = Math.round(hsb.b*255/100);\n                if (s == 0) {\n                    rgb.r = rgb.g = rgb.b = v;\n                } else {\n                    var t1 = v;\n                    var t2 = (255-s)*v/255;\n                    var t3 = (t1-t2)*(h%60)/60;\n                    if (h==360) {\nh = 0;\n                    }\n                    if (h<60) {\nrgb.r=t1;     rgb.b=t2; rgb.g=t2+t3} else if (h<120) {\nrgb.g=t1; rgb.b=t2;     rgb.r=t1-t3} else if (h<180) {\nrgb.g=t1; rgb.r=t2;     rgb.b=t2+t3} else if (h<240) {\nrgb.b=t1; rgb.r=t2;     rgb.g=t1-t3} else if (h<300) {\nrgb.b=t1; rgb.g=t2;     rgb.r=t2+t3} else if (h<360) {\nrgb.r=t1; rgb.g=t2;     rgb.b=t1-t3} else {\nrgb.r=0; rgb.g=0;     rgb.b=0}\n                }\n                return {r:Math.round(rgb.r), g:Math.round(rgb.g), b:Math.round(rgb.b)};\n            },\n            RGBToHex = function (rgb) {\n                var hex = [\n                    rgb.r.toString(16),\n                    rgb.g.toString(16),\n                    rgb.b.toString(16)\n                ];\n                $.each(hex, function (nr, val) {\n                    if (val.length == 1) {\n                        hex[nr] = '0' + val;\n                    }\n                });\n                return hex.join('');\n            },\n            HSBToHex = function (hsb) {\n                return RGBToHex(HSBToRGB(hsb));\n            },\n            restoreOriginal = function () {\n                var cal = $(this).parent();\n                var col = cal.data('colorpicker').origColor;\n                cal.data('colorpicker').color = col;\n                fillRGBFields(col, cal.get(0));\n                fillHexFields(col, cal.get(0));\n                fillHSBFields(col, cal.get(0));\n                setSelector(col, cal.get(0));\n                setHue(col, cal.get(0));\n                setNewColor(col, cal.get(0));\n            };\n        return {\n            init: function (opt) {\n                opt = $.extend({}, defaults, opt || {});\n                if (typeof opt.color == 'string') {\n                    opt.color = HexToHSB(opt.color);\n                } else if (opt.color.r != undefined && opt.color.g != undefined && opt.color.b != undefined) {\n                    opt.color = RGBToHSB(opt.color);\n                } else if (opt.color.h != undefined && opt.color.s != undefined && opt.color.b != undefined) {\n                    opt.color = fixHSB(opt.color);\n                } else {\n                    return this;\n                }\n                return this.each(function () {\n                    if (!$(this).data('colorpickerId')) {\n                        var options = $.extend({}, opt);\n                        options.origColor = opt.color;\n                        var id = 'collorpicker_' + parseInt(Math.random() * 1000);\n                        $(this).data('colorpickerId', id);\n                        var cal = $(tpl).attr('id', id);\n                        if (options.flat) {\n                            cal.appendTo(this).show();\n                        } else {\n                            cal.appendTo(document.body);\n                        }\n                        options.fields = cal\n                                            .find('input')\n                                                .bind('keyup', keyDown)\n                                                .bind('change', change)\n                                                .bind('blur', blur)\n                                                .bind('focus', focus);\n                        cal\n                            .find('span').bind('mousedown touchstart', downIncrement).end()\n                            .find('>div.colorpicker_current_color').bind('click', restoreOriginal);\n                        options.selector = cal.find('div.colorpicker_color').bind('mousedown touchstart', downSelector);\n                        options.selectorIndic = options.selector.find('div div');\n                        options.el = this;\n                        options.hue = cal.find('div.colorpicker_hue div');\n                        cal.find('div.colorpicker_hue').bind('mousedown touchstart', downHue);\n                        options.newColor = cal.find('div.colorpicker_new_color');\n                        options.currentColor = cal.find('div.colorpicker_current_color');\n                        cal.data('colorpicker', options);\n                        cal.find('div.colorpicker_submit')\n                            .bind('mouseenter', enterSubmit)\n                            .bind('mouseleave', leaveSubmit)\n                            .bind('click', clickSubmit);\n                        fillRGBFields(options.color, cal.get(0));\n                        fillHSBFields(options.color, cal.get(0));\n                        fillHexFields(options.color, cal.get(0));\n                        setHue(options.color, cal.get(0));\n                        setSelector(options.color, cal.get(0));\n                        setCurrentColor(options.color, cal.get(0));\n                        setNewColor(options.color, cal.get(0));\n                        if (options.flat) {\n                            cal.css({\n                                position: 'relative',\n                                display: 'block'\n                            });\n                        } else {\n                            $(this).bind(options.eventName, show);\n                        }\n                    }\n                });\n            },\n            showPicker: function () {\n                return this.each(function () {\n                    if ($(this).data('colorpickerId')) {\n                        show.apply(this);\n                    }\n                });\n            },\n            hidePicker: function () {\n                return this.each(function () {\n                    if ($(this).data('colorpickerId')) {\n                        $('#' + $(this).data('colorpickerId')).hide();\n                    }\n                });\n            },\n            setColor: function (col) {\n                if (typeof col == 'string') {\n                    col = HexToHSB(col);\n                } else if (col.r != undefined && col.g != undefined && col.b != undefined) {\n                    col = RGBToHSB(col);\n                } else if (col.h != undefined && col.s != undefined && col.b != undefined) {\n                    col = fixHSB(col);\n                } else {\n                    return this;\n                }\n                return this.each(function () {\n                    if ($(this).data('colorpickerId')) {\n                        var cal = $('#' + $(this).data('colorpickerId'));\n                        cal.data('colorpicker').color = col;\n                        cal.data('colorpicker').origColor = col;\n                        fillRGBFields(col, cal.get(0));\n                        fillHSBFields(col, cal.get(0));\n                        fillHexFields(col, cal.get(0));\n                        setHue(col, cal.get(0));\n                        setSelector(col, cal.get(0));\n                        setCurrentColor(col, cal.get(0));\n                        setNewColor(col, cal.get(0));\n                    }\n                });\n            }\n        };\n    }();\n    $.fn.extend({\n        ColorPicker: ColorPicker.init,\n        ColorPickerHide: ColorPicker.hidePicker,\n        ColorPickerShow: ColorPicker.showPicker,\n        ColorPickerSetColor: ColorPicker.setColor\n    });\n})(jQuery)","Webkul_Marketplace/js/configurable-type-handler.js":"/**\n * Webkul Software.\n *\n * @category  Webkul\n * @package   Webkul_Marketplace\n * @author    Webkul Software Private Limited\n * @copyright Webkul Software Private Limited (https://webkul.com)\n * @license   https://store.webkul.com/license.html\n */\ndefine([\n    'jquery',\n    'Webkul_Marketplace/catalog/type-events',\n    'Webkul_Marketplace/js/advanced-pricing-handler',\n    'Webkul_Marketplace/js/options/price-type-handler',\n    'collapsible',\n    'Magento_Ui/js/modal/modal',\n    'mage/translate',\n    'domReady!'\n], function ($, productType, advancedPricingHandler, priceTypeHandler) {\n    'use strict';\n\n    return {\n        $block: null,\n        hasVariations: null,\n        configurationSectionMessageHandler: (function () {\n            var title = $('[data-role=\"product-create-configuration-info\"]'),\n                buttons = $('[data-action=\"product-create-configuration-buttons\"]'),\n                newText = 'Configurations cannot be created for a standard product with downloadable files.' +\n                ' To create configurations, first remove all downloadable files.',\n                oldText = title.text();\n\n            return function (change) {\n                if (change) {\n                    title.text(newText);\n                    buttons.hide();\n                } else {\n                    title.text(oldText);\n                    buttons.show();\n                }\n            };\n        }()),\n\n        /**\n         * Set element disabled\n         * @param {Object} $element - jquery instance element\n         * @param {Bool} state\n         * @param {Bool} triggerEvent\n         * @private\n         */\n        _setElementDisabled: function ($element, state, triggerEvent) {\n            if (!$element.is('[data-locked]')) {\n                $element.prop('disabled', state);\n\n                if (triggerEvent) {\n                    $element.trigger('change');\n                }\n            }\n        },\n\n        /**\n         * Show\n         */\n        show: function () {\n            this.configurationSectionMessageHandler(false);\n        },\n\n        /**\n         * Hide\n         */\n        hide: function () {\n            this.configurationSectionMessageHandler(true);\n        },\n\n        /**\n         * Bind all\n         */\n        bindAll: function () {\n            $(document).on('changeConfigurableTypeProduct', function (event, isConfigurable) {\n                $(document).trigger('setTypeProduct', isConfigurable ? 'configurable' : null);\n            });\n            $(document).on('changeTypeProduct', this._initType.bind(this));\n        },\n\n        /**\n         * Init type\n         * @private\n         */\n        _initType: function () {\n            var suggestContainer = $('#product-template-suggest-container .action-dropdown > .action-toggle');\n\n            if (productType.type.current === 'configurable') {\n                suggestContainer.addClass('disabled').prop('disabled', true);\n                $('#inventory_qty').prop('disabled', true);\n                $('#inventory_stock_availability').removeProp('disabled');\n                this._setElementDisabled($('#qty'), true, true);\n                this._setElementDisabled($('#quantity_and_stock_status'), false, false);\n            } else {\n                suggestContainer.removeClass('disabled').removeProp('disabled');\n                $('#inventory_qty').removeProp('disabled');\n                $('#inventory_stock_availability').prop('disabled', true);\n                this._setElementDisabled($('#quantity_and_stock_status'), true, false);\n                this._setElementDisabled($('#qty'), false, true);\n            }\n\n            if (['simple', 'virtual', 'configurable'].indexOf(productType.type.current) < 0) {\n                this.hide();\n            } else {\n                this.show();\n            }\n        },\n\n        /**\n         * Constructor component\n         * @param {Object} data - this backend data\n         */\n        'Webkul_Marketplace/js/configurable-type-handler': function (data) {\n            this.$block = $(data.blockId + ' input[name=\"attributes[]\"]');\n            this.hasVariations = data.hasVariations;\n\n            advancedPricingHandler.init();\n            priceTypeHandler.init();\n\n            this.bindAll();\n            this._initType();\n        }\n    };\n});\n","Webkul_Marketplace/js/configurable.js":"/**\n * Webkul Software.\n *\n * @category  Webkul\n * @package   Webkul_Marketplace\n * @author    Webkul Software Private Limited\n * @copyright Webkul Software Private Limited (https://webkul.com)\n * @license   https://store.webkul.com/license.html\n */\n/**************************** CONFIGURABLE PRODUCT **************************/\ndefine([\n    'jquery',\n    'mage/template',\n    'mage/translate',\n    'prototype'\n], function (jQuery, mageTemplate) {\n\nif (typeof Product == 'undefined') {\n    window.Product = {};\n}\n\nProduct.Config = Class.create();\nProduct.Config.prototype = {\n    initialize: function (config) {\n        // Magic preprocessing\n        config.taxConfig = {\n            showBothPrices: false,\n            inclTaxTitle: jQuery.mage.__('Incl. Tax')\n        };\n\n        this.config     = config;\n        this.taxConfig  = this.config.taxConfig;\n        if (config.containerId) {\n            this.settings   = $$('#' + config.containerId + ' ' + '.super-attribute-select');\n        } else {\n            this.settings   = $$('.super-attribute-select');\n        }\n        this.state      = new Hash();\n        this.priceTemplate = mageTemplate(this.config.template);\n        this.prices     = config.prices;\n        this.values     = {};\n\n        // Set default values from config\n        if (config.defaultValues) {\n            this.values = config.defaultValues;\n        }\n\n        // Overwrite defaults by url\n        var separatorIndex = window.location.href.indexOf('#');\n        if (separatorIndex != -1) {\n            var paramsStr = window.location.href.substr(separatorIndex+1);\n            var urlValues = paramsStr.toQueryParams();\n            for (var i in urlValues) {\n                this.values[i] = urlValues[i];\n            }\n        }\n\n        // Overwrite defaults by inputs values if needed\n        if (config.inputsInitialized) {\n            this.values = {};\n            this.settings.each(function (element) {\n                if (element.value) {\n                    var attributeId = element.id.replace(/[a-z]*/, '');\n                    this.values[attributeId] = element.value;\n                }\n            }.bind(this));\n        }\n\n        // Put events to check select reloads\n        this.settings.each(function (element) {\n            Event.observe(element, 'change', this.configure.bind(this))\n        }.bind(this));\n\n        // fill state\n        this.settings.each(function (element) {\n            var attributeId = element.id.replace(/[a-z]*/, '');\n            if (attributeId && this.config.attributes[attributeId]) {\n                element.config = this.config.attributes[attributeId];\n                element.attributeId = attributeId;\n                this.state[attributeId] = false;\n            }\n        }.bind(this));\n\n        // Init settings dropdown\n        var childSettings = [];\n        for (var i=this.settings.length-1; i>=0; i--) {\n            var prevSetting = this.settings[i-1] ? this.settings[i-1] : false;\n            var nextSetting = this.settings[i+1] ? this.settings[i+1] : false;\n            if (i == 0) {\n                this.fillSelect(this.settings[i])\n            } else {\n                this.settings[i].disabled = true;\n            }\n            $(this.settings[i]).childSettings = childSettings.clone();\n            $(this.settings[i]).prevSetting   = prevSetting;\n            $(this.settings[i]).nextSetting   = nextSetting;\n            childSettings.push(this.settings[i]);\n        }\n\n        // Set values to inputs\n        this.configureForValues();\n        document.observe(\"dom:loaded\", this.configureForValues.bind(this));\n    },\n\n    configureForValues: function () {\n        if (this.values) {\n            this.settings.each(function (element) {\n                var attributeId = element.attributeId;\n                element.value = (typeof(this.values[attributeId]) == 'undefined')? '' : this.values[attributeId];\n                this.configureElement(element);\n            }.bind(this));\n        }\n    },\n\n    configure: function (event) {\n        var element = Event.element(event);\n        this.configureElement(element);\n    },\n\n    configureElement : function (element) {\n        this.reloadOptionLabels(element);\n        if (element.value) {\n            this.state[element.config.id] = element.value;\n            if (element.nextSetting) {\n                element.nextSetting.disabled = false;\n                this.fillSelect(element.nextSetting);\n                this.resetChildren(element.nextSetting);\n            }\n        } else {\n            this.resetChildren(element);\n        }\n        this.reloadPrice();\n    },\n\n    reloadOptionLabels: function (element) {\n        var selectedPrice = 0;\n        if (element.options[element.selectedIndex] && element.options[element.selectedIndex].config) {\n            var option = element.options[element.selectedIndex].config;\n            selectedPrice = parseFloat(this.config.optionPrices[option.allowedProducts[0]].finalPrice.amount);\n        }\n        element.setAttribute('price', selectedPrice);\n        for (var i=0; i<element.options.length; i++) {\n            if (element.options[i].config) {\n                element.options[i].setAttribute('price', selectedPrice);\n                element.options[i].setAttribute('summarizePrice', 0);\n                element.options[i].text = this.getOptionLabel(element.options[i].config, selectedPrice);\n            }\n        }\n    },\n\n    resetChildren : function (element) {\n        if (element.childSettings) {\n            for (var i=0; i<element.childSettings.length; i++) {\n                element.childSettings[i].selectedIndex = 0;\n                element.childSettings[i].disabled = true;\n                if (element.config) {\n                    this.state[element.config.id] = false;\n                }\n            }\n        }\n    },\n\n    fillSelect: function (element) {\n        var attributeId = element.id.replace(/[a-z]*/, '');\n        var options = this.getAttributeOptions(attributeId);\n        this.clearSelect(element);\n        element.options[0] = new Option('', '');\n        element.options[0].innerHTML = this.config.chooseText;\n\n        var prevConfig = false;\n        if (element.prevSetting) {\n            prevConfig = element.prevSetting.options[element.prevSetting.selectedIndex];\n        }\n\n        if (options) {\n            var index = 1;\n            for (var i=0; i<options.length; i++) {\n                var allowedProducts = [];\n                if (prevConfig) {\n                    for (var j=0; j<options[i].products.length; j++) {\n                        if (prevConfig.config.allowedProducts\n                            && prevConfig.config.allowedProducts.indexOf(options[i].products[j])>-1) {\n                            allowedProducts.push(options[i].products[j]);\n                        }\n                    }\n                } else {\n                    allowedProducts = options[i].products.clone();\n                }\n\n                if (allowedProducts.size()>0) {\n                    options[i].allowedProducts = allowedProducts;\n                    element.options[index] = new Option(this.getOptionLabel(options[i]), options[i].id);\n                    if (typeof options[i].price != 'undefined') {\n                        element.options[index].setAttribute('price', options[i].price);\n                    }\n                    element.options[index].config = options[i];\n                    index++;\n                }\n            }\n        }\n    },\n\n    getOptionLabel: function (option) {\n        return option.label;\n    },\n\n    formatPrice: function (price, showSign) {\n        var str = '';\n        price = parseFloat(price);\n        if (showSign) {\n            if (price<0) {\n                str+= '-';\n                price = -price;\n            } else {\n                str+= '+';\n            }\n        }\n\n        var roundedPrice = (Math.round(price*100)/100).toString();\n\n        if (this.prices && this.prices[roundedPrice]) {\n            str+= this.prices[roundedPrice];\n        } else {\n            str+= this.priceTemplate({\n                data: {\n                    price:price.toFixed(2)\n                }\n            });\n        }\n        return str;\n    },\n\n    clearSelect: function (element) {\n        for (var i=element.options.length-1; i>=0; i--) {\n            element.remove(i);\n        }\n    },\n\n    getAttributeOptions: function (attributeId) {\n        if (this.config.attributes[attributeId]) {\n            return this.config.attributes[attributeId].options;\n        }\n    },\n\n    reloadPrice: function () {\n        if (this.config.disablePriceReload) {\n            return;\n        }\n        var price    = 0;\n        var oldPrice = 0;\n        var inclTaxPrice = 0;\n        var exclTaxPrice = 0;\n        for (var i=this.settings.length-1; i>=0; i--) {\n            var selected = this.settings[i].options[this.settings[i].selectedIndex];\n            if (selected.config) {\n                price += parseFloat(selected.config.price);\n                oldPrice += parseFloat(selected.config.oldPrice);\n                inclTaxPrice += parseFloat(selected.config.inclTaxPrice);\n                exclTaxPrice += parseFloat(selected.config.exclTaxPrice);\n            }\n        }\n\n        optionsPrice.changePrice(\n            'config',\n            {\n                'price': price,\n                'oldPrice': oldPrice,\n                'inclTaxPrice': inclTaxPrice,\n                'exclTaxPrice': exclTaxPrice\n            }\n        );\n        optionsPrice.reload();\n\n        return price;\n\n        if ($('product-price-'+this.config.productId)) {\n            $('product-price-'+this.config.productId).innerHTML = price;\n        }\n        this.reloadOldPrice();\n    },\n\n    reloadOldPrice: function () {\n        if (this.config.disablePriceReload) {\n            return;\n        }\n        if ($('old-price-'+this.config.productId)) {\n            var price = parseFloat(this.config.oldPrice);\n            for (var i=this.settings.length-1; i>=0; i--) {\n                var selected = this.settings[i].options[this.settings[i].selectedIndex];\n                if (selected.config) {\n                    price+= parseFloat(selected.config.price);\n                }\n            }\n            if (price < 0) {\n                price = 0;\n            }\n            price = this.formatPrice(price);\n\n            if ($('old-price-'+this.config.productId)) {\n                $('old-price-'+this.config.productId).innerHTML = price;\n            }\n        }\n    }\n};\n\n});\n","Webkul_Marketplace/js/description-gallery.js":"/**\n * Webkul Software.\n *\n * @category  Webkul\n * @package   Webkul_Marketplace\n * @author    Webkul Software Private Limited\n * @copyright Webkul Software Private Limited (https://webkul.com)\n * @license   https://store.webkul.com/license.html\n */\n/*jshint jquery:true*/\ndefine([\n    'jquery',\n    'mage/template',\n    'mage/url',\n    'jquery/ui',\n    'baseImage',\n], function ($, mageTemplate, url) {\n    'use strict';\n\n    /**\n     * Product gallery widget\n     */\n    $.widget('mage.productGallery', {\n        options: {\n            imageSelector: '[data-role=image]',\n            template: '[data-template=image]',\n            types: null,\n            initialized: false,\n            baseUrl: url.build('marketplace/wysiwyg/delete')\n        },\n\n        /**\n         * Gallery creation\n         * @protected\n         */\n        _create: function () {\n            this.options.types = this.options.types || this.element.data('types');\n            this.options.images = this.options.images || this.element.data('images');\n            this.imgTmpl = mageTemplate(this.options.template);\n\n            this._bind();\n            var count = 0;\n            if( this.options.images != null){\n            $.each(this.options.images, $.proxy(function (index, imageData) {\n                var  element = this.imgTmpl({\n                    data: imageData\n                });\n    \n                element = $(element).data('imageData', imageData);\n                if (count === 0) {\n                    element.prependTo(this.element);\n                } else {\n                    element.insertAfter(this.element.find(this.options.imageSelector + ':last'));\n                }\n                $.each(this.options.types, $.proxy(function (index, image) {\n                    if (imageData.file === image.value) {\n                        this.element.trigger('setImageType', {\n                            type: image.code,\n                            imageData: imageData\n                        });\n                    }\n                }, this));\n            }, this));\n        }\n            this.options.initialized = true;\n        },\n\n        /**\n         * Bind handler to elements\n         * @protected\n         */\n        _bind: function () {\n            var events = {\n                openDialog: '_onOpenDialog',\n                addItem: '_addItem',\n                removeItem: '_removeItem',\n                setImageType: '_setImageType',\n                setPosition: '_setPosition',\n                resort: '_resort',\n                'mouseup [data-role=delete-button]': function (event) {\n                    var $imageContainer;\n\n                    event.preventDefault();\n                    $imageContainer = $(event.currentTarget).closest(this.options.imageSelector);\n                    this.element.find('[data-role=dialog]').trigger('close');\n                    this.element.trigger('removeItem', $imageContainer.data('imageData'));\n                },\n                'mouseup [data-role=make-base-button]': function (event) {\n                    var $imageContainer,\n                        imageData;\n\n                    event.preventDefault();\n                    event.stopImmediatePropagation();\n                    $imageContainer = $(event.currentTarget).closest(this.options.imageSelector);\n                    imageData = $imageContainer.data('imageData');\n                }\n            };\n\n            this._on(events);\n            this.element.sortable({\n                distance: 8,\n                items: this.options.imageSelector,\n                tolerance: \"pointer\",\n                cancel: 'input, button, .uploader',\n                update: $.proxy(function () {\n                    this.element.trigger('resort');\n                }, this)\n            });\n        },\n        /**\n         * Find element by fileName\n         * @param {Object} data\n         * @returns {Element}\n         */\n        findElement: function (data) {\n            return this.element.find(this.options.imageSelector).filter(function () {\n                return $(this).data('imageData').file === data.file;               \n            }).first();\n        },\n\n        /**\n         * Add image\n         * @param event\n         * @param imageData\n         * @private\n         */\n        _addItem: function (event, imageData) {\n            var count = this.element.find(this.options.imageSelector).length,\n                element;\n\n            imageData = $.extend({\n                file_id: Math.random().toString(33).substr(2, 18),\n                disabled: imageData.disabled ? imageData.disabled : 0,\n                position: count + 1\n            }, imageData);\n\n            element = this.imgTmpl({\n                data: imageData\n            });\n\n            element = $(element).data('imageData', imageData);\n            if (count === 0) {\n                element.prependTo(this.element);\n            } else {\n                element.insertAfter(this.element.find(this.options.imageSelector + ':last'));\n            }\n\n            $.each(this.options.types, $.proxy(function (index, image) {\n                if (imageData.file === image.value) {\n                    this.element.trigger('setImageType', {\n                        type: image.code,\n                        imageData: imageData\n                    });\n                }\n            }, this));\n        },\n\n        /**\n         * Remove Image\n         * @param {jQuery.Event} event\n         * @param imageData\n         * @private\n         */\n        _removeItem: function (event, imageData) {\n            var $imageContainer = this.findElement(imageData);\n            var filename = imageData.file;\n            imageData.isRemoved = true;\n            if(filename){\n                let self = this;\n                var url = window.location.origin;\n                var pathname = window.location.pathname.split('/marketplace');\n                var quickOrder  = window.location.pathname.split('/');\n                $.ajax({\n                    url : this.options.baseUrl,\n                    data : {\"imageurl\" : filename.split('.tmp')[0]},\n                    dataType: \"json\",  \n                    type: 'post',\n                    success : function (response) {\n                        if (response.result == \"failure\") {\n                            return false;\n                        }\n                    }\n                });\n                }\n            $imageContainer.addClass('removed').hide().find('.is-removed').val(1);\n        },\n\n        /**\n         * Set image type\n         * @param event\n         * @param data\n         * @private\n         */\n        _setImageType: function (event, data) {\n            if (data.type === 'image') {\n                this.element.find('.base-image').removeClass('base-image');\n            }\n\n            if (data.imageData) {\n                this.options.types[data.type].value = data.imageData.file;\n\n                if (data.type === 'image') {\n                    this.findElement(data.imageData).addClass('base-image');\n                }\n            } else {\n                this.options.types[data.type].value = 'no_selection';\n            }\n            this.element.find('.image-' + data.type).val(this.options.types[data.type].value || 'no_selection');\n        },\n\n        /**\n         * Resort images\n         * @private\n         */\n        _resort: function () {\n            this.element.find('.position').each($.proxy(function (index, element) {\n                var value = $(element).val();\n\n                if (value != index) {\n                    this.element.trigger('moveElement', {\n                        imageData: $(element).closest(this.options.imageSelector).data('imageData'),\n                        position: index\n                    });\n                    $(element).val(index);\n                }\n            }, this));\n        },\n\n        /**\n         * Set image position\n         * @param event\n         * @param data\n         * @private\n         */\n        _setPosition: function (event, data) {\n            var $element = this.findElement(data.imageData);\n            var curIndex = this.element.find(this.options.imageSelector).index($element);\n            var newPosition = data.position + (curIndex > data.position ? -1 : 0);\n\n            if (data.position != curIndex) {\n                if (data.position === 0) {\n                    this.element.prepend($element);\n                } else {\n                    $element.insertAfter(\n                        this.element.find(this.options.imageSelector).eq(newPosition)\n                    );\n                }\n                this.element.trigger('resort');\n            }\n        }\n    });\n\n    // Extension for mage.productGallery - Add advanced settings block\n    $.widget('mage.productGallery', $.mage.productGallery, {\n        options: {\n            dialogTemplate: '.dialog-template'\n        },\n\n        _create: function () {\n            this._super();\n            var template = this.element.find(this.options.dialogTemplate);\n            if (template.length) {\n                this.dialogTmpl = mageTemplate(template.html());\n            }\n        },\n\n        /**\n         * Bind handler to elements\n         * @protected\n         */\n        _bind: function () {\n            this._super();\n            var events = {};\n            events['click [data-role=close-panel]'] = $.proxy(function () {\n                this.element.find('[data-role=dialog]').trigger('close');\n            }, this);\n            events['mouseup ' + this.options.imageSelector] = function (event) {\n                if (!$(event.currentTarget).is('.ui-sortable-helper')) {\n                    $(event.currentTarget).addClass('active');\n                    var itemId = $(event.currentTarget).find('input')[0].name.match(/\\[([^\\]]*)\\]/g)[2];\n                    $('#item_id').val(itemId);\n                    var imageData = $(event.currentTarget).data('imageData');\n                    var $imageContainer = this.findElement(imageData);\n                    if ($imageContainer.is('.removed')) {\n                        return;\n                    }\n                    this.element.trigger('openDialog', [imageData]);\n                }\n            };\n\n            this._on(events);\n            this.element.on('sortstart', $.proxy(function () {\n                this.element.find('[data-role=dialog]').trigger('close');\n            }, this));\n        },\n\n        /**\n         *\n         * Click by image handler\n         *\n         * @param e\n         * @param imageData\n         * @private\n         */\n        _onOpenDialog: function (e, imageData) {\n            if (imageData.media_type && imageData.media_type != 'image') {\n                return;\n            }\n            this._showDialog(imageData);\n        },\n\n        /**\n         * Show dialog\n         * @param imageData\n         * @private\n         */\n        _showDialog: function (imageData) {\n            var $imageContainer = this.findElement(imageData);\n            var dialogElement = $imageContainer.data('dialog');\n            if (!this.dialogTmpl) {\n                alert('System problem!');\n                return;\n            }\n\n            var $template = this.dialogTmpl({ data: imageData });\n            dialogElement = $($template);\n            dialogElement.modal({\n                'type': 'slide',\n                title: $.mage.__('Image Detail'),\n                buttons: [],\n                opened: function () {\n                    dialogElement.trigger('open');\n                },\n                closed: function (e) {\n                    dialogElement.trigger('close');\n                }\n            });\n            dialogElement\n                .data('imageContainer', $imageContainer)\n                .on('open', $.proxy(function (event) {\n                    $(event.target)\n                        .find('[data-role=type-selector]')\n                        .each($.proxy(function (index, checkbox) {\n                            var $checkbox = $(checkbox),\n                                parent = $checkbox.closest('.item'),\n                                selectedClass = 'selected',\n                                isChecked = this.options.types[$checkbox.val()].value == imageData.file;\n                            $checkbox.prop(\n                                'checked',\n                                isChecked\n                            );\n                            parent.toggleClass(selectedClass, isChecked);\n                        }, this));\n\n                }, this))\n                .on('close', $.proxy(function (event) {\n                    $imageContainer.removeClass('active');\n                    $imageContainer.data('dialog', null);\n                }, this));\n\n            $imageContainer.data('dialog', dialogElement);\n\n\n            var _changeDescription = function (e) {\n                var urlVal = $(this).val();\n               \n                $(\".action-close\").trigger(\"click\");                   \n                 $('.tox-textfield[type=url]').each(function(index,data) {\n                    if(!$(this).hasClass(\"mce-abs-layout-item\")){\n                        $(this).val(urlVal);\n                    }\n                });\n            };\n\n            dialogElement.on('change', '[data-role=type-selector]', function () {\n                var parent = $(this).closest('.item'),\n                    selectedClass = 'selected';\n                parent.toggleClass(selectedClass, $(this).prop('checked'));\n            });\n            dialogElement.on('change', '[data-role=type-selector]', $.proxy(this._notifyType, this));\n            dialogElement.on('change', '[data-role=visibility-trigger]', $.proxy(function (e) {\n                this._changeVisibility(e, imageData);\n            }, this));\n            dialogElement.on('click', '#image-description', _changeDescription);\n            dialogElement.modal('openModal');\n        },\n\n        /**\n         * Change visibility\n         *\n         * @param event\n         * @private\n         */\n        _changeVisibility: function (event, imageData) {\n            var $checkbox = $(event.currentTarget);\n            var $imageContainer = $checkbox.closest('[data-role=dialog]').data('imageContainer');\n            $imageContainer.toggleClass('hidden-for-front', $checkbox.is(':checked'));\n            var checked = $checkbox.is(':checked') ? 1 : 0;\n            $imageContainer.find('[name*=\"disabled\"]').val(checked);\n            imageData.disabled = checked;\n        },\n\n        /**\n         * Set image\n         * @param event\n         * @private\n         */\n        _notifyType: function (event) {\n            var $checkbox = $(event.currentTarget);\n            var $imageContainer = $checkbox.closest('[data-role=dialog]').data('imageContainer');\n            this.element.trigger('setImageType', {\n                type: $checkbox.val(),\n                imageData: $checkbox.is(':checked') ? $imageContainer.data('imageData') : null\n            });\n        }\n    });\n    return $.mage.productGallery;\n});\n","Webkul_Marketplace/js/form-button-action.js":"/**\n * Webkul Software.\n *\n * @category  Webkul\n * @package   Webkul_Marketplace\n * @author    Webkul Software Private Limited\n * @copyright Webkul Software Private Limited (https://webkul.com)\n * @license   https://store.webkul.com/license.html\n */\n/*jshint browser:true*/\ndefine([\n    \"jquery\"\n], function ($) {\n    \"use strict\";\n    $.widget('mage.formButtonAction', {\n        options: {\n            fixedClass: 'wk-mp-fixed'\n        },\n        /**\n         * Widget initialization\n         * @private\n         */\n        _create: function () {\n            this.setRequiredVariables();\n            this.applyBinding();\n        },\n        setRequiredVariables: function () {\n            this.elementBeforeObj = this.element.before(\n                $('<div></div>', {'class': 'wk-mp-page-actions-before'})\n            ).prev();\n            this.offsetTop = this.elementBeforeObj.offset().top;\n            this.height = this.element.parents('.wk-mp-page-title').outerHeight();\n            this.formoffset = this.element.parents('form').outerHeight()+this.offsetTop-100;\n        },\n        applyBinding: function () {\n            this._on(window, {\n                scroll: this._handlePageScroll,\n                resize: this._handlePageScroll\n            });\n        },\n        _handlePageScroll: function () {\n            var isActive = ($(window).scrollTop() > this.offsetTop);\n            if (this.element.attr('id') == 'wk-mp-editprofile-form') {\n                var isActiveForm = (this.formoffset > $(window).scrollTop());\n                if (isActive && isActiveForm) {\n                    this.element.addClass(this.options.fixedClass);\n                } else {\n                    this.element.removeClass(this.options.fixedClass);\n                }\n            } else {\n                if (isActive) {\n                    this.element.addClass(this.options.fixedClass);\n                } else {\n                    this.element.removeClass(this.options.fixedClass);\n                }\n            }\n            this.elementBeforeObj.height(isActive ? this.height: '');\n        }\n    });\n    \n    return $.mage.formButtonAction;\n});","Webkul_Marketplace/js/get-video-information.js":"/**\n * Webkul Software.\n *\n * @category  Webkul\n * @package   Webkul_Marketplace\n * @author    Webkul Software Private Limited\n * @copyright Webkul Software Private Limited (https://webkul.com)\n * @license   https://store.webkul.com/license.html\n */\n/*jshint browser:true jquery:true*/\nrequire(\n    [\n        'jquery',\n        'Magento_Ui/js/modal/alert',\n        'jquery/ui'\n    ],\n    function ($, alert) {\n        'use strict';\n\n        var videoRegister = {\n            _register: {},\n\n            /**\n             * Checks, if api is already registered\n             *\n             * @param {String} api\n             * @returns {bool}\n             */\n            isRegistered: function (api) {\n                return this._register[api] !== undefined;\n            },\n\n            /**\n             * Checks, if api is loaded\n             *\n             * @param {String} api\n             * @returns {bool}\n             */\n            isLoaded: function (api) {\n                return this._register[api] !== undefined && this._register[api] === true;\n            },\n\n            /**\n             * Register new video api\n             * @param {String} api\n             * @param {bool} loaded\n             */\n            register: function (api, loaded) {\n                loaded = loaded || false;\n                this._register[api] = loaded;\n            }\n        };\n\n        $.widget('mage.productVideoLoader', {\n\n            /**\n             * @private\n             */\n            _create: function () {\n                switch (this.element.data('type')) {\n                    case 'youtube':\n                        this.element.videoYoutube();\n                        this._player = this.element.data('mageVideoYoutube');\n                        break;\n\n                    case 'vimeo':\n                        this.element.videoVimeo();\n                        this._player = this.element.data('mageVideoVimeo');\n                        break;\n                    default:\n                        throw {\n                            name: $.mage.__('Video Error'),\n                            message: $.mage.__('Unknown video type'),\n\n                            /**\n                             * Return string\n                             */\n                            toString: function () {\n                                return this.name + ': ' + this.message;\n                            }\n                        };\n                }\n            },\n\n            /**\n             * Initializes variables\n             * @private\n             */\n            _initialize: function () {\n                this._params = this.element.data('params') || {};\n                this._code = this.element.data('code');\n                this._width = this.element.data('width');\n                this._height = this.element.data('height');\n                this._autoplay = !!this.element.data('autoplay');\n                this._playing = this._autoplay || false;\n\n                this._responsive = this.element.data('responsive') !== false;\n\n                if (this._responsive === true) {\n                    this.element.addClass('responsive');\n                }\n\n                this._calculateRatio();\n            },\n\n            /**\n             * Abstract play command\n             */\n            play: function () {\n                this._player.play();\n            },\n\n            /**\n             * Abstract pause command\n             */\n            pause: function () {\n                this._player.pause();\n            },\n\n            /**\n             * Abstract stop command\n             */\n            stop: function () {\n                this._player.stop();\n            },\n\n            /**\n             * Abstract playing command\n             */\n            playing: function () {\n                return this._player.playing();\n            },\n\n            /**\n             * Abstract destroying command\n             */\n            destroy: function () {\n                this._player.destroy();\n            },\n\n            /**\n             * Calculates ratio for responsive videos\n             * @private\n             */\n            _calculateRatio: function () {\n                if (!this._responsive) {\n                    return;\n                }\n                this.element.css('paddingBottom', this._height / this._width * 100 + '%');\n            }\n        });\n\n        $.widget('mage.videoYoutube', $.mage.productVideoLoader, {\n\n            /**\n             * Initialization of the Youtube widget\n             * @private\n             */\n            _create: function () {\n                var self = this;\n\n                this._initialize();\n\n                this.element.append('<div></div>');\n\n                this._on(window, {\n\n                    /**\n                     * Youtube state check\n                     * @private\n                     */\n                    'youtubeapiready': function () {\n                        if (self._player !== undefined) {\n                            return;\n                        }\n\n                        if (self._autoplay) {\n                            self._params.autoplay = 1;\n                        }\n                        self._params.rel = 0;\n\n                        self._player = new window.YT.Player(self.element.children(':first')[0], {\n                            height: self._height,\n                            width: self._width,\n                            videoId: self._code,\n                            playerVars: self._params,\n                            events: {\n\n                                /**\n                                 * @private\n                                 */\n                                'onReady': function onPlayerReady()\n                                {\n                                    self._player.getDuration();\n                                },\n\n                                /**\n                                 * State change flag init\n                                 */\n                                onStateChange: function (data) {\n                                    switch (window.parseInt(data.data, 10)) {\n                                        case 1:\n                                            self._playing = true;\n                                            break;\n                                        default:\n                                            self._playing = false;\n                                            break;\n                                    }\n\n                                    self._trigger('statechange', {}, data);\n                                }\n                            }\n\n                        });\n                    }\n                });\n\n                this._loadApi();\n            },\n\n            /**\n             * Loads Youtube API and triggers event, when loaded\n             * @private\n             */\n            _loadApi: function () {\n                var element,\n                    scriptTag;\n\n                if (videoRegister.isRegistered('youtube')) {\n                    if (videoRegister.isLoaded('youtube')) {\n                        $(window).trigger('youtubeapiready');\n                    }\n\n                    return;\n                }\n                videoRegister.register('youtube');\n\n                element = document.createElement('script');\n                scriptTag = document.getElementsByTagName('script')[0];\n\n                element.async = true;\n                element.src = 'https://www.youtube.com/iframe_api';\n                scriptTag.parentNode.insertBefore(element, scriptTag);\n\n                /**\n                 * Trigger youtube api ready event\n                 */\n                window.onYouTubeIframeAPIReady = function () {\n                    $(window).trigger('youtubeapiready');\n                    videoRegister.register('youtube', true);\n                };\n            },\n\n            /**\n             * Play command for Youtube\n             */\n            play: function () {\n                this._player.playVideo();\n                this._playing = true;\n            },\n\n            /**\n             * Pause command for Youtube\n             */\n            pause: function () {\n                this._player.pauseVideo();\n                this._playing = false;\n            },\n\n            /**\n             * Stop command for Youtube\n             */\n            stop: function () {\n                this._player.stopVideo();\n                this._playing = false;\n            },\n\n            /**\n             * Playing command for Youtube\n             */\n            playing: function () {\n                return this._playing;\n            },\n\n            /**\n             * stops and unloads player\n             * @private\n             */\n            // destroy: function () {\n            //     this.stop();\n            //     this._player.destroy();\n            // }\n        });\n\n        $.widget('mage.videoVimeo', $.mage.productVideoLoader, {\n\n            /**\n             * Initialize the Vimeo widget\n             * @private\n             */\n            _create: function () {\n                var timestamp,\n                    src,\n                    additionalParams;\n\n                this._initialize();\n                timestamp = new Date().getTime();\n\n                if (this._autoplay) {\n                    additionalParams += '&autoplay=1';\n                }\n\n                src = window.location.protocol + '//player.vimeo.com/video/' +\n                    this._code + '?api=1&player_id=vimeo' +\n                    this._code +\n                    timestamp +\n                    additionalParams;\n                this.element.append(\n                    $('<iframe></iframe>')\n                        .attr('frameborder', 0)\n                        .attr('id', 'vimeo' + this._code + timestamp)\n                        .attr('width', this._width)\n                        .attr('height', this._height)\n                        .attr('src', src)\n                );\n\n            }\n        });\n\n        $.widget('mage.videoData', {\n            options: {\n                youtubeKey: '',\n                eventSource: '' //where is data going from - focus out or click on button\n            },\n\n            _REQUEST_VIDEO_INFORMATION_TRIGGER: 'request_video_information',\n\n            _UPDATE_VIDEO_INFORMATION_TRIGGER: 'updated_video_information',\n\n            _START_UPDATE_INFORMATION_TRIGGER: 'update_video_information',\n\n            _ERROR_UPDATE_INFORMATION_TRIGGER: 'error_updated_information',\n\n            _FINISH_UPDATE_INFORMATION_TRIGGER: 'finish_update_information',\n\n            _videoInformation: null,\n\n            _currentVideoUrl: null,\n\n            /**\n             * @private\n             */\n            _init: function () {\n                this.element.on(this._START_UPDATE_INFORMATION_TRIGGER, $.proxy(this._onRequestHandler, this));\n                this.element.on(this._ERROR_UPDATE_INFORMATION_TRIGGER, $.proxy(this._onVideoInvalid, this));\n                this.element.on(this._FINISH_UPDATE_INFORMATION_TRIGGER, $.proxy(\n                    function () {\n                        this._currentVideoUrl = null;\n                    },\n                    this\n                ));\n            },\n\n            /**\n             * @private\n             */\n            _onRequestHandler: function () {\n                var url = this.element.val(),\n                    self = this,\n                    videoInfo,\n                    type,\n                    id,\n                    googleapisUrl;\n\n                if (this._currentVideoUrl === url) {\n                    return;\n                }\n\n                this._currentVideoUrl = url;\n\n                this.element.trigger(this._REQUEST_VIDEO_INFORMATION_TRIGGER, {\n                    url: url\n                });\n\n                if (!url) {\n                    return;\n                }\n\n                videoInfo = this._validateURL(url);\n\n                if (!videoInfo) {\n                    this._onRequestError($.mage.__('Invalid video url'));\n\n                    return;\n                }\n\n                /**\n                 *\n                 * @param {Object} data\n                 * @private\n                 */\n                function _onYouTubeLoaded(data)\n                {\n                    var tmp,\n                        uploadedFormatted,\n                        respData,\n                        createErrorMessage;\n\n                    /**\n                     * Create errors message\n                     *\n                     * @returns {String}\n                     */\n                    createErrorMessage = function () {\n                        var error = data.error,\n                            errors = error.errors,\n                            i,\n                            errLength = errors.length,\n                            tmpError,\n                            errReason,\n                            errorsMessage = [];\n\n                        for (i = 0; i < errLength; i++) {\n                            tmpError = errors[i];\n                            errReason = tmpError.reason;\n\n                            if (['keyInvalid'].indexOf(errReason) !== -1) {\n                                errorsMessage.push($.mage.__('Youtube API key is invalid'));\n\n                                break;\n                            }\n\n                            errorsMessage.push(tmpError.message);\n                        }\n\n                        return $.mage.__('Video cant be shown due to the following reason: ') +\n                            $.unique(errorsMessage).join(', ');\n                    };\n\n                    if (data.error && data.error.code === 400) {\n                        this._onRequestError(createErrorMessage());\n\n                        return;\n                    }\n\n                    if (!data.items || data.items.length < 1) {\n                        this._onRequestError($.mage.__('Video not found'));\n\n                        return;\n                    }\n\n                    tmp = data.items[0];\n                    uploadedFormatted = tmp.snippet.publishedAt.replace('T', ' ').replace(/\\..+/g, '');\n                    respData = {\n                        duration: this._formatYoutubeDuration(tmp.contentDetails.duration),\n                        channel: tmp.snippet.channelTitle,\n                        channelId: tmp.snippet.channelId,\n                        uploaded: uploadedFormatted,\n                        title: tmp.snippet.localized.title,\n                        description: tmp.snippet.description,\n                        thumbnail: tmp.snippet.thumbnails.high.url,\n                        videoId: videoInfo.id,\n                        videoProvider: videoInfo.type\n                    };\n                    this._videoInformation = respData;\n                    this.element.trigger(this._UPDATE_VIDEO_INFORMATION_TRIGGER, respData);\n                    this.element.trigger(this._FINISH_UPDATE_INFORMATION_TRIGGER, true);\n                }\n\n                /**\n                 * @private\n                 */\n                function _onVimeoLoaded(data)\n                {\n                    var tmp = data[0],\n                        respData;\n\n                    if (data.length < 1) {\n                        this._onRequestError($.mage.__('Video not found'));\n\n                        return null;\n                    }\n                    tmp = data[0];\n                    respData = {\n                        duration: this._formatVimeoDuration(tmp.duration),\n                        channel: tmp['user_name'],\n                        channelId: tmp['user_url'],\n                        uploaded: tmp['upload_date'],\n                        title: tmp.title,\n                        description: tmp.description.replace(/(&nbsp;|<([^>]+)>)/ig, ''),\n                        thumbnail: tmp['thumbnail_large'],\n                        videoId: videoInfo.id,\n                        videoProvider: videoInfo.type\n                    };\n                    this._videoInformation = respData;\n                    this.element.trigger(this._UPDATE_VIDEO_INFORMATION_TRIGGER, respData);\n                    this.element.trigger(this._FINISH_UPDATE_INFORMATION_TRIGGER, true);\n                }\n\n                type = videoInfo.type;\n                id = videoInfo.id;\n\n                if (type === 'youtube') {\n                    googleapisUrl = 'https://www.googleapis.com/youtube/v3/videos?id=' +\n                        id +\n                        '&part=snippet,contentDetails,statistics,status&key=' +\n                        this.options.youtubeKey + '&alt=json&callback=?';\n                    $.getJSON(\n                        googleapisUrl,\n                        {\n                            format: 'json'\n                        },\n                        $.proxy(_onYouTubeLoaded, self)\n                    ).fail(\n                        function () {\n                            self._onRequestError('Video not found');\n                        }\n                    );\n                } else if (type === 'vimeo') {\n                    $.ajax({\n                        url: window.location.protocol + '//www.vimeo.com/api/v2/video/' + id + '.json',\n                        dataType: 'jsonp',\n                        data: {\n                            format: 'json'\n                        },\n                        timeout: 5000,\n                        success:  $.proxy(_onVimeoLoaded, self),\n\n                        /**\n                         * @private\n                         */\n                        error: function () {\n                            self._onRequestError($.mage.__('Video not found'));\n                        }\n                    });\n                }\n            },\n\n            /**\n             * @private\n             */\n            _onVideoInvalid: function (event, data) {\n                this._videoInformation = null;\n                this.element.val('');\n                alert({\n                    content: 'Error: \"' + data + '\"'\n                });\n            },\n\n            /**\n             * @private\n             */\n            _onRequestError: function (error) {\n                this.element.trigger(this._ERROR_UPDATE_INFORMATION_TRIGGER, error);\n                this.element.trigger(this._FINISH_UPDATE_INFORMATION_TRIGGER, false);\n                this._currentVideoUrl = null;\n            },\n\n            /**\n             * @private\n             */\n            _formatYoutubeDuration: function (duration) {\n                var match = duration.match(/PT(\\d+H)?(\\d+M)?(\\d+S)?/),\n                    hours = parseInt(match[1], 10) || 0,\n                    minutes = parseInt(match[2], 10) || 0,\n                    seconds = parseInt(match[3], 10) || 0;\n\n                return this._formatVimeoDuration(hours * 3600 + minutes * 60 + seconds);\n            },\n\n            /**\n             * @private\n             */\n            _formatVimeoDuration: function (seconds) {\n                return (new Date(seconds * 1000)).toUTCString().match(/(\\d\\d:\\d\\d:\\d\\d)/)[0];\n            },\n\n            /**\n             * @private\n             */\n            _parseHref: function (href) {\n                var a = document.createElement('a');\n\n                a.href = href;\n\n                return a;\n            },\n\n            /**\n             * @private\n             */\n            _validateURL: function (href, forceVideo) {\n                var id,\n                    type,\n                    ampersandPosition,\n                    vimeoRegex;\n\n                if (typeof href !== 'string') {\n                    return href;\n                }\n                href = this._parseHref(href);\n\n                if (href.host.match(/youtube\\.com/) && href.search) {\n                    id = href.search.split('v=')[1];\n\n                    if (id) {\n                        ampersandPosition = id.indexOf('&');\n                        type = 'youtube';\n                    }\n\n                    if (id && ampersandPosition !== -1) {\n                        id = id.substring(0, ampersandPosition);\n                    }\n                } else if (href.host.match(/youtube\\.com|youtu\\.be/)) {\n                    id = href.pathname.replace(/^\\/(embed\\/|v\\/)?/, '').replace(/\\/.*/, '');\n                    type = 'youtube';\n                } else if (href.host.match(/vimeo\\.com/)) {\n                    type = 'vimeo';\n                    vimeoRegex = new RegExp(['https?:\\\\/\\\\/(?:www\\\\.|player\\\\.)?vimeo.com\\\\/(?:channels\\\\/(?:\\\\w+\\\\/)',\n                        '?|groups\\\\/([^\\\\/]*)\\\\/videos\\\\/|album\\\\/(\\\\d+)\\\\/video\\\\/|video\\\\/|)(\\\\d+)(?:$|\\\\/|\\\\?)'\n                    ].join(''));\n\n                    if (href.href.match(vimeoRegex) != null) {\n                        id = href.href.match(vimeoRegex)[3];\n                    }\n                }\n\n                if ((!id || !type) && forceVideo) {\n                    id = href.href;\n                    type = 'custom';\n                }\n\n                return id ? {\n                    id: id, type: type, s: href.search.replace(/^\\?/, '')\n                } : false;\n            }\n        });\n    }\n);\n","Webkul_Marketplace/js/google-analytics.js":"/**\n * Webkul Software.\n *\n * @category  Webkul\n * @package   Webkul_Marketplace\n * @author    Webkul Software Private Limited\n * @copyright Webkul Software Private Limited (https://webkul.com)\n * @license   https://store.webkul.com/license.html\n */\n/* jscs:disable */\n/* eslint-disable */\ndefine([\n    'jquery',\n    'mage/cookies'\n], function ($) {\n    'use strict';\n\n    /**\n     * @param {Object} config\n     */\n    return function (config) {\n        (function (i, s, o, g, r, a, m) {\n            i.GoogleAnalyticsObject = r;\n            i[r] = i[r] || function () {\n                    (i[r].q = i[r].q || []).push(arguments)\n                }, i[r].l = 1 * new Date();\n            a = s.createElement(o),\n                m = s.getElementsByTagName(o)[0];\n            a.async = 1;\n            a.src = g;\n            m.parentNode.insertBefore(a, m)\n        })(window, document, 'script', '//www.google-analytics.com/analytics.js', 'wkga');\n\n        // Process page info\n        wkga('create', config.sellerTrackingData.accountId, {'name':'seller'});\n        wkga('seller.send', 'pageview');\n    }\n});\n","Webkul_Marketplace/js/imageGallery.js":"/**\n * Webkul Software.\n *\n * @category  Webkul\n * @package   Webkul_Marketplace\n * @author    Webkul Software Private Limited\n * @copyright Webkul Software Private Limited (https://webkul.com)\n * @license   https://store.webkul.com/license.html\n */\ndefine([\n    \"jquery\",\n    'mage/template',\n    'Magento_Ui/js/modal/alert',\n    \"mage/translate\",\n    \"jquery/file-uploader\"\n    ], function($, mageTemplate, alert){\n        $.widget('mage.imageGallery', {\n            options: {\n            },\n            /**\n             * Widget initialization\n             * @private\n             */\n            _create: function() {\n                var self = this;\n                $(self.options.uploadId).fileupload({\n                    dataType: 'json',\n                    dropZone: '[data-tab-panel=image-management]',\n                    sequentialUploads: true,\n                    acceptFileTypes: /(\\.|\\/)(gif|jpe?g|png)$/i,\n                    maxFileSize: self.options.maxFileSize,\n                    add: function (e, data) {\n                        var progressTmpl = mageTemplate(self.options.templateId),\n                            fileSize,\n                            tmpl;\n\n                        $.each(data.files, function (index, file) {\n                            fileSize = typeof file.size == \"undefined\" ?\n                                $.mage.__('We could not detect a size.') :\n                                byteConvert(file.size);\n\n                            data.fileId = Math.random().toString(33).substr(2, 18);\n\n                            tmpl = progressTmpl({\n                                data: {\n                                    name: file.name,\n                                    size: fileSize,\n                                    id: data.fileId\n                                }\n                            });\n\n                            $(tmpl).appendTo(self.options.contentUploaderId);\n                        });\n\n                        $(this).fileupload('process', data).done(function () {\n                            data.submit();\n                        });\n                    },\n                    done: function (e, data) {\n                        if (data.result && !data.result.error) {\n                            $(self.options.contentId).trigger('addItem', data.result);\n                        } else {\n                            $('#' + data.fileId)\n                                .delay(2000)\n                                .hide('highlight');\n                            alert({\n                            content: $.mage.__('We don\\'t recognize or support this file extension type.')\n                            });\n                        }\n                        $('#' + data.fileId).remove();\n                    },\n                    progress: function (e, data) {\n                        var progress = parseInt(data.loaded / data.total * 100, 10);\n                        var progressSelector = '#' + data.fileId + ' .progressbar-container .progressbar';\n                        $(progressSelector).css('width', progress + '%');\n                    },\n                    fail: function (e, data) {\n                        var progressSelector = '#' + data.fileId;\n                        $(progressSelector).removeClass('upload-progress').addClass('upload-failure')\n                            .delay(2000)\n                            .hide('highlight')\n                            .remove();\n                    }\n                });\n                $(self.options.uploadId).fileupload('option', {\n                    process: [{\n                        action: 'load',\n                        fileTypes: /^image\\/(gif|jpeg|png)$/\n                    }, {\n                        action: 'resize',\n                        maxWidth: self.options.maxWidth,\n                        maxHeight: self.options.maxHeight \n                    }, {\n                        action: 'save'\n                    }]\n                });\n            }\n    })\n    return $.mage.imageGallery;\n});","Webkul_Marketplace/js/new-video-dialog.js":"/**\n * Webkul Software.\n *\n * @category  Webkul\n * @package   Webkul_Marketplace\n * @author    Webkul Software Private Limited\n * @copyright Webkul Software Private Limited (https://webkul.com)\n * @license   https://store.webkul.com/license.html\n */\ndefine([\n    'jquery',\n    'jquery/ui',\n    'Magento_Ui/js/modal/modal',\n    'mage/translate',\n    'mage/backend/tree-suggest',\n    'mage/backend/validation',\n    'Webkul_Marketplace/js/get-video-information'\n], function ($) {\n    'use strict';\n\n    $.widget('mage.createVideoPlayer', {\n        options: {\n            videoId: '',\n            videoProvider: '',\n            container: '.video-player-container',\n            videoClass: 'product-video',\n            reset: false,\n            metaData: {\n                DOM: {\n                    title: '.video-information.title span',\n                    uploaded: '.video-information.uploaded span',\n                    uploader: '.video-information.uploader span',\n                    duration: '.video-information.duration span',\n                    all: '.video-information span',\n                    wrapper: '.video-information'\n                },\n                data: {\n                    title: '',\n                    uploaded: '',\n                    uploader: '',\n                    uploaderUrl: '',\n                    duration: ''\n                }\n            }\n        },\n\n        /**\n         * @private\n         */\n        _init: function () {\n            if (this.options.reset) {\n                this.reset();\n            } else {\n                this.update();\n            }\n\n            this.element.on('reset', $.proxy(this.reset, this));\n\n        },\n\n        /**\n         * @returns {Boolean}\n         */\n        update: function () {\n            var checkVideoID = $(this.options.container).find('.' + this.options.videoClass).data('code');\n\n            if (checkVideoID && checkVideoID !== this.options.videoId) {\n                this._doUpdate();\n            } else if (checkVideoID && checkVideoID === this.options.videoId) {\n                return false;\n            } else if (!checkVideoID) {\n                this._doUpdate();\n            }\n\n        },\n\n        /**\n         * @private\n         */\n        _doUpdate: function () {\n            this.reset();\n            $(this.options.container).append('<div class=\"' +\n                this.options.videoClass +\n                '\" data-type=\"' +\n                this.options.videoProvider +\n                '\" data-code=\"' +\n                this.options.videoId +\n                '\" data-width=\"100%\" data-height=\"100%\"></div>');\n            $(this.options.metaData.DOM.wrapper).show();\n            $(this.options.metaData.DOM.title).text(this.options.metaData.data.title);\n            $(this.options.metaData.DOM.uploaded).text(this.options.metaData.data.uploaded);\n            $(this.options.metaData.DOM.duration).text(this.options.metaData.data.duration);\n\n            if (this.options.videoProvider === 'youtube') {\n                $(this.options.metaData.DOM.uploader).html(\n                    '<a href=\"https://youtube.com/channel/' +\n                    this.options.metaData.data.uploaderUrl +\n                    '\" target=\"_blank\">' +\n                    this.options.metaData.data.uploader +\n                    '</a>'\n                );\n            } else if (this.options.videoProvider === 'vimeo') {\n                $(this.options.metaData.DOM.uploader).html(\n                    '<a href=\"' +\n                    this.options.metaData.data.uploaderUrl +\n                    '\" target=\"_blank\">' + this.options.metaData.data.uploader +\n                    '</a>'\n                );\n            }\n            $('.' + this.options.videoClass).productVideoLoader();\n\n        },\n\n        /**\n         * Reset\n         */\n        reset: function () {\n            // $(this.options.container).find('.' + this.options.videoClass).remove();\n            if ($(this.options.container).find('.' + this.options.videoClass).length) {\n                $(this.options.container).find('.' + this.options.videoClass).remove();\n            }\n            $(this.options.metaData.DOM.wrapper).hide();\n            $(this.options.metaData.DOM.all).text('');\n\n        }\n    });\n\n    $.widget('mage.updateInputFields', {\n        options: {\n            reset: false,\n            DOM: {\n                urlField: 'input[name=\"video_url\"]',\n                titleField: 'input[name=\"video_title\"]',\n                fileField: '#file_name',\n                descriptionField: 'textarea[name=\"video_description\"]',\n                thumbnailLocation: '.field-new_video_screenshot_preview .admin__field-control'\n            },\n            data: {\n                url: '',\n                title: '',\n                description: '',\n                thumbnail: ''\n            }\n        },\n\n        /**\n         * @private\n         */\n        _init: function () {\n            if (this.options.reset) {\n                this.reset();\n            } else {\n                this.update();\n            }\n        },\n\n        /**\n         * Update\n         */\n        update: function () {\n            $(this.options.DOM.titleField).val(this.options.data.title);\n            $(this.options.DOM.descriptionField).val(this.options.data.description);\n        },\n\n        /**\n         * Reset\n         */\n        reset: function () {\n            $(this.options.DOM.fileField).val('');\n            $(this.options.DOM.urlField).val('');\n            $(this.options.DOM.titleField).val('');\n            $(this.options.DOM.descriptionField).val('');\n        }\n    });\n\n    /**\n     */\n    $.widget('mage.newVideoDialog', {\n\n        _previewImage: null,\n\n        clickedElement: '',\n\n        _images: {},\n\n        _imageTypes: [\n            '.jpeg',\n            '.pjpeg',\n            '.jpeg',\n            '.jpg',\n            '.pjpeg',\n            '.png',\n            '.gif'\n        ],\n\n        _imageWidgetSelector: '#media_gallery_content',\n\n        _imageProductGalleryWrapperSelector: '#image-container',\n\n        _videoPreviewInputSelector: '#new_video_screenshot',\n\n        _videoPreviewRemoteSelector: '',\n\n        _videoDisableinputSelector: '#new_video_disabled',\n\n        _videoPreviewImagePointer: '#new_video_screenshot_preview',\n\n        _videoFormSelector: '#new_video_form',\n\n        _itemIdSelector: '#item_id',\n\n        _videoUrlSelector: '[name=\"video_url\"]',\n\n        _videoImageFilenameselector: '#file_name',\n\n        _videoUrlWidget: null,\n\n        _videoInformationBtnSelector: '[name=\"new_video_get\"]',\n\n        _editVideoBtnSelector: '#media_gallery_content .image',\n\n        _deleteGalleryVideoSelector: '[data-role=delete-button]',\n\n        _deleteGalleryVideoSelectorBtn: null,\n\n        _videoInformationGetBtn: null,\n\n        _videoInformationGetUrlField: null,\n\n        _videoInformationGetEditBtn: null,\n\n        _isEditPage: false,\n\n        _onlyVideoPlayer: false,\n\n        _tempPreviewImageData: null,\n\n        _videoPlayerSelector: '.mage-new-video-dialog',\n\n        _videoRequestComplete: null,\n\n        /**\n         * Bind events\n         * @private\n         */\n        _bind: function () {\n            var events = {\n                'setImage': '_onSetImage'\n            };\n\n            this._on(events);\n\n            this._videoUrlWidget = $(this._videoUrlSelector).videoData({\n                youtubeKey: this.options.youTubeApiKey,\n                eventSource: 'focusout'\n            });\n\n            this._videoInformationGetBtn = $(this._videoInformationBtnSelector);\n            this._videoInformationGetUrlField = $(this._videoUrlSelector);\n            this._videoInformationGetEditBtn = $(this._editVideoBtnSelector);\n\n            this._videoInformationGetBtn.on('click', $.proxy(this._onGetVideoInformationClick, this));\n            this._videoInformationGetUrlField.on('focusout', $.proxy(this._onGetVideoInformationFocusOut, this));\n\n            this._videoUrlWidget.on('updated_video_information', $.proxy(this._onGetVideoInformationSuccess, this));\n            this._videoUrlWidget.on('error_updated_information', $.proxy(this._onGetVideoInformationError, this));\n            this._videoUrlWidget.on(\n                'request_video_information',\n                $.proxy(this._onGetVideoInformationStartRequest, this)\n            );\n        },\n\n        /**\n         * Fired when user click on button \"Get video information\"\n         * @private\n         */\n        _onGetVideoInformationClick: function () {\n            this._onlyVideoPlayer = false;\n            this._isEditPage = false;\n            this._videoUrlWidget.trigger('update_video_information');\n        },\n\n        /**\n         * Fired when user do focus out from url field\n         * @private\n         */\n        _onGetVideoInformationFocusOut: function () {\n            this._videoUrlWidget.trigger('update_video_information');\n        },\n\n        /**\n         * @private\n         */\n        _onGetVideoInformationStartRequest: function () {\n            this._videoRequestComplete = false;\n        },\n\n        /**\n         * Fired when user click Edit Video button\n         * @private\n         */\n        _onGetVideoInformationEditClick: function () {\n            this._onlyVideoPlayer = true;\n            this._isEditPage = true;\n            this._videoUrlWidget.trigger('update_video_information');\n        },\n\n        /**\n         * Fired when successfully received information about the video.\n         * @param {Object} e\n         * @param {Object} data\n         * @private\n         */\n        _onGetVideoInformationSuccess: function (e, data) {\n            var player = $(this._videoPlayerSelector).createVideoPlayer({\n                videoId: data.videoId,\n                videoProvider: data.videoProvider,\n                reset: false,\n                metaData: {\n                    DOM: {\n                        title: '.video-information.title span',\n                        uploaded: '.video-information.uploaded span',\n                        uploader: '.video-information.uploader span',\n                        duration: '.video-information.duration span',\n                        all: '.video-information span',\n                        wrapper: '.video-information'\n                    },\n                    data: {\n                        title: data.title,\n                        uploaded: data.uploaded,\n                        uploader: data.channel,\n                        duration: data.duration,\n                        uploaderUrl: data.channelId\n                    }\n                }\n            });\n\n            this._videoRequestComplete = true;\n\n            if (!this._isEditPage) {\n                this._onGetVideoInformationClick();\n                player.updateInputFields({\n                    reset: false,\n                    data: {\n                        title: data.title,\n                        description: data.description\n                    }\n                });\n                this._loadRemotePreview(data.thumbnail);\n            }\n        },\n\n        /**\n         * Load preview from youtube/vimeo\n         * @param {String} sourceUrl\n         * @private\n         */\n        _loadRemotePreview: function (sourceUrl) {\n            var url = this.options.saveRemoteVideoUrl,\n            self = this;\n\n            this._blockActionButtons(true, true);\n            $.ajax({\n                url: url,\n                data: 'remote_image=' + sourceUrl,\n                type: 'post',\n                success: $.proxy(function (result) {\n                    this._tempPreviewImageData = result;\n                    this._getPreviewImage().attr('src', sourceUrl).show();\n                    this._blockActionButtons(false, true);\n                }, self)\n            });\n        },\n\n        /**\n         * Fired when receiving information about the video ended with error\n         * @private\n         */\n        _onGetVideoInformationError: function () {\n        },\n\n        /**\n         * Remove \".tmp\"\n         * @param {String} name\n         * @returns {*}\n         * @private\n         */\n        __prepareFilename: function (name) {\n            var tmppost = '.tmp';\n\n            if (!name) {\n                return name;\n            }\n\n            if (name.endsWith(tmppost)) {\n                name = name.slice(0, name.length - tmppost.length);\n            }\n\n            return name;\n        },\n\n        /**\n         * Set image data\n         * @param {String} file\n         * @param {Object} imageData\n         * @private\n         */\n        _setImage: function (file, imageData) {\n            file = this.__prepareFilename(file);\n            this._images[file] = imageData;\n            $(this._imageWidgetSelector).trigger('addItem', imageData);\n            this.element.trigger('setImage', imageData);\n            this._addVideoClass(imageData.url);\n        },\n\n        /**\n         * Get image data\n         *\n         * @param {String} file\n         * @returns {*}\n         * @private\n         */\n        _getImage: function (file) {\n            file = this.__prepareFilename(file);\n\n            return this._images[file];\n        },\n\n        /**\n         * Replace image (update)\n         * @param {String} oldFile\n         * @param {String} newFile\n         * @param {Object} imageData\n         * @private\n         */\n        _replaceImage: function (oldFile, newFile, imageData) {\n            var tmpNewFile = newFile,\n                tmpOldImage,\n                newImageId,\n                oldNewFilePosition,\n                fc,\n                suff,\n                searchsuff,\n                key,\n                oldValIdElem;\n\n            oldFile = this.__prepareFilename(oldFile);\n            newFile = this.__prepareFilename(newFile);\n            tmpOldImage = this._images[oldFile];\n\n            if (newFile === oldFile) {\n                this._images[newFile] = imageData;\n                this.saveImageRoles(imageData);\n\n                return null;\n            }\n\n            this._removeImage(oldFile);\n            this._setImage(newFile, imageData);\n\n            if (!oldFile || !imageData.oldFile) {\n                return null;\n            }\n\n            newImageId = this.findElementId(tmpNewFile);\n            fc = $(this._itemIdSelector).val();\n\n            suff = 'product[media_gallery][images]' + fc;\n\n            searchsuff = 'input[name=\"' + suff + '[value_id]\"]';\n            key = $(searchsuff).val();\n\n            if (!key) {\n                return null;\n            }\n\n            oldValIdElem = document.createElement('input');\n            $('form[data-form=\"edit-product\"]').append(oldValIdElem);\n            $(oldValIdElem).attr({\n                type: 'hidden',\n                name: 'product[media_gallery][images][' + newImageId + '][save_data_from]'\n            }).val(key);\n\n            oldNewFilePosition = parseInt(tmpOldImage.position, 10);\n            imageData.position = oldNewFilePosition;\n\n            $(this._imageWidgetSelector).trigger('setPosition', {\n                imageData: imageData,\n                position: oldNewFilePosition\n            });\n        },\n\n        /**\n         * Remove image data\n         * @param {String} file\n         * @private\n         */\n        _removeImage: function (file) {\n            var imageData = this._getImage(file);\n\n            if (!imageData) {\n                return null;\n            }\n\n            $(this._imageWidgetSelector).trigger('removeItem', imageData);\n            this.element.trigger('removeImage', imageData);\n            delete this._images[file];\n        },\n\n        /**\n         * Fired when image setted\n         * @param {Event} event\n         * @param {Object} imageData\n         * @private\n         */\n        _onSetImage: function (event, imageData) {\n            this.saveImageRoles(imageData);\n        },\n\n        /**\n         *\n         * Wrap _uploadFile\n         * @param {String} file\n         * @param {String} oldFile\n         * @param {Function} callback\n         * @private\n         */\n        _uploadImage: function (file, oldFile, callback) {\n            var url         = this.options.saveVideoUrl,\n            data = {\n                files: file,\n                url: url\n            };\n\n            this._blockActionButtons(true, true);\n            this._uploadFile(data, $.proxy(function (result) {\n                this._onImageLoaded(result, file, oldFile, callback);\n                this._blockActionButtons(false);\n            }, this));\n\n        },\n\n        /**\n         * @param {String} result\n         * @param {String} file\n         * @param {String} oldFile\n         * @param {Function} callback\n         * @private\n         */\n        _onImageLoaded: function (result, file, oldFile, callback) {\n            if (file) {\n                var data = result;\n            } else {\n                var data = JSON.parse(result);\n            }\n\n            if ($('#video_url').parent().find('.image-upload-error').length > 0) {\n                $('.image-upload-error').remove();\n            }\n\n            if (data.errorcode || data.error) {\n                $('#video_url').parent().append('<div class=\"image-upload-error\">' +\n                '<div class=\"image-upload-error-cross\"></div><span>' + data.error + '</span></div>');\n\n                return;\n            }\n            $.each($(this._videoFormSelector).serializeArray(), function (i, field) {\n                data[field.name] = field.value;\n            });\n            data.disabled = $(this._videoDisableinputSelector).attr('checked') ? 1 : 0;\n            data['media_type'] = 'external-video';\n            data.oldFile = oldFile;\n\n            oldFile  ?\n                this._replaceImage(oldFile, data.file, data) :\n                this._setImage(data.file, data);\n            callback.call(0, data);\n        },\n\n        /**\n         * File uploader\n         * @private\n         */\n        _uploadFile: function (data, callback) {\n            var fu = $(this._videoPreviewInputSelector),\n                tmpInput   = document.createElement('input'),\n                fileUploader = null;\n\n            $(tmpInput).attr({\n                'name': fu.attr('name'),\n                'value': fu.val(),\n                'type': 'file',\n                'data-ui-ud': fu.attr('data-ui-ud')\n            }).css('display', 'none');\n            fu.parent().append(tmpInput);\n            fileUploader = $(tmpInput).fileupload();\n            fileUploader.fileupload('send', data).success(function (result, textStatus, jqXHR) {\n                tmpInput.remove();\n                callback.call(null, result, textStatus, jqXHR);\n            });\n        },\n\n        /**\n         * Update style\n         * @param {String} url\n         * @private\n         */\n        _addVideoClass: function (url) {\n            var classVideo = 'video-item';\n\n            $('img[src=\"' + url + '\"]').addClass(classVideo);\n        },\n\n        /**\n         * Build widget\n         * @private\n         */\n        _create: function () {\n            var imgs = $(this._imageWidgetSelector).data('images') || [],\n                widget,\n                uploader,\n                tmp,\n                i;\n\n            for (i = 0; i < imgs.length; i++) {\n                tmp = imgs[i];\n                this._images[tmp.file] = tmp;\n\n                if (tmp['media_type'] === 'external-video') {\n                    tmp.subclass = 'video-item';\n                    this._addVideoClass(tmp.url);\n                }\n            }\n            $('.gallery.ui-sortable').on('openDialog', $.proxy(this._onOpenDialog, this));\n            this._bind();\n            this.createVideoItemIcons();\n            widget = this;\n            uploader = $(this._videoPreviewInputSelector);\n            uploader.on('change', this._onImageInputChange.bind(this));\n            uploader.attr('accept', this._imageTypes.join(','));\n\n            this.element.modal({\n                type: 'slide',\n                modalClass: 'mage-new-video-dialog form-inline',\n                title: $.mage.__('New Video'),\n                buttons: [\n                    {\n                        text: $.mage.__('Save'),\n                        class: 'action-primary video-create-button',\n                        click: $.proxy(widget._onCreate, widget)\n                    },\n                    {\n                        text: $.mage.__('Cancel'),\n                        class: 'video-cancel-button',\n                        click: $.proxy(widget._onCancel, widget)\n                    },\n                    {\n                        text: $.mage.__('Delete'),\n                        class: 'video-delete-button',\n                        click: $.proxy(widget._onDelete, widget)\n                    },\n                    {\n                        text: $.mage.__('Save'),\n                        class: 'action-primary video-edit',\n                        click: $.proxy(widget._onUpdate, widget)\n                    }\n                ],\n\n                /**\n                 * @returns {null}\n                 */\n                opened: function () {\n                    var roles, file, modalTitleElement, imageData;\n\n                    $('#video_url').focus();\n                    roles = $('.video_image_role');\n                    roles.prop('disabled', false);\n                    file = $('#file_name').val();\n                    widget._onGetVideoInformationEditClick();\n                    modalTitleElement = $('.mage-new-video-dialog .modal-title');\n\n                    if (!file) {\n                        widget._blockActionButtons(true);\n                        roles.prop('checked', $('.image.item:not(.removed)').length < 1);\n                        modalTitleElement.text($.mage.__('New Video'));\n                        widget._isEditPage = false;\n\n                        return null;\n                    }\n                    modalTitleElement.text($.mage.__('Edit Video'));\n                    widget._isEditPage = true;\n                    imageData = widget._getImage(file);\n                    widget._onPreview(null, imageData.url, false);\n                },\n\n                /**\n                 * Closed\n                 */\n                closed: function () {\n                    widget._onClose();\n                    widget.createVideoItemIcons();\n                }\n            });\n            this.toggleButtons();\n        },\n\n        /**\n         * @param {String} status\n         * @private\n         */\n        _blockActionButtons: function (status) {\n            $('.page-actions-buttons').find('button.video-create-button').attr('disabled', status);\n            $('.page-actions-buttons').find('button.video-edit').attr('disabled', status);\n        },\n\n        /**\n         * Check form\n         * @param {Function} callback\n         */\n        isValid: function (callback) {\n            var videoForm = $(this._videoFormSelector),\n                videoLoaded = true;\n\n            this._blockActionButtons(true);\n            this._videoUrlWidget.on('finish_update_information.validation', $.proxy(\n                function (event, status) {\n                    videoForm.mage('validation', {\n\n                        /**\n                         * @param {jQuery} error\n                         * @param {jQuery} element\n                         */\n                        errorPlacement: function (error, element) {\n                            error.insertAfter(element);\n                        }\n                    }).on('highlight.validate', function () {\n                        $(this).validation('option');\n                    });\n                    videoForm.validation();\n\n                    if (this._videoRequestComplete === false) {\n                        videoLoaded = false;\n                    }\n\n                    callback(status && videoForm.valid() && videoLoaded);\n                    this._videoUrlWidget.off('finish_update_information.validation');\n                    this._blockActionButtons(false);\n                },\n                this\n            ));\n\n            this._videoUrlWidget.trigger('update_video_information');\n        },\n\n        /**\n         * Create video item icons\n         */\n        createVideoItemIcons: function () {\n            var $imageWidget = $(this._imageWidgetSelector).find('.product-image.video-item'),\n                $productGalleryWrapper = $(this._imageProductGalleryWrapperSelector).find('.product-image.video-item');\n\n            $imageWidget.parent().addClass('video-item');\n            $productGalleryWrapper.parent().addClass('video-item');\n            $imageWidget.removeClass('video-item');\n            $productGalleryWrapper.removeClass('video-item');\n            $('.video-item .action-delete').attr('title',  $.mage.__('Delete video'));\n            $('.video-item .action-delete span').html($.mage.__('Delete video'));\n        },\n\n        /**\n         * Fired when click on create video\n         * @private\n         */\n        _onCreate: function () {\n            var nvs = $(this._videoPreviewInputSelector),\n            file = nvs.get(0),\n            reqClass = 'required-entry _required';\n\n            if (file && file.files && file.files.length) {\n                file =  file.files[0];\n            } else {\n                file = null;\n            }\n\n            if (!file && !this._tempPreviewImageData) {\n                nvs.addClass(reqClass);\n            }\n\n            this.isValid($.proxy(\n                function (videoValidStatus) {\n\n                    if (!videoValidStatus) {\n                        return;\n                    }\n\n                    if (this._tempPreviewImageData) {\n                        this._onImageLoaded(this._tempPreviewImageData, null, null, $.proxy(this.close, this));\n                    } else {\n                        this._uploadImage(file, null, $.proxy(function () {\n                            this.close();\n                        }, this));\n                    }\n\n                    nvs.removeClass(reqClass);\n                },\n                this\n            ));\n        },\n\n        /**\n         * Fired when click on update video\n         * @private\n         */\n        _onUpdate: function () {\n            var inputFile, itemId, _inputSelector, mediaFields, imageData, flagChecked, fileName, callback;\n\n            this.isValid($.proxy(\n                function (videoValidStatus) {\n\n                    if (!videoValidStatus) {\n                        return;\n                    }\n\n                    imageData = this.imageData;\n                    inputFile       = $(this._videoPreviewInputSelector);\n                    itemId          = $(this._itemIdSelector).val();\n                    itemId              = itemId.slice(1, itemId.length - 1);\n                    _inputSelector  = '[name*=\"[' + itemId + ']\"]';\n                    mediaFields     = $('input' + _inputSelector);\n                    $.each(mediaFields, function (i, el) {\n                        var elName      = el.name,\n                            start       = elName.indexOf(itemId) + itemId.length + 2,\n                            fieldName   = elName.substring(start, el.name.length - 1),\n                            _field      = $('#' + fieldName),\n                            _tmp;\n\n                        if (_field.length > 0) {\n                            _tmp = _inputSelector.slice(0, _inputSelector.length - 2) + '[' + fieldName + ']\"]';\n                            $(_tmp).val(_field.val());\n                            imageData[fieldName] = _field.val();\n                        }\n                    });\n                    flagChecked     = $(this._videoDisableinputSelector).attr('checked') ? 1 : 0;\n                    $('input[name*=\"' + itemId + '][disabled]\"]').val(flagChecked);\n                    $(_inputSelector).siblings('.image-fade').css('visibility', flagChecked ? 'visible' : 'hidden');\n                    imageData.disabled = flagChecked;\n\n                    if (this._tempPreviewImageData) {\n                        this._onImageLoaded(\n                            this._tempPreviewImageData,\n                            null,\n                            imageData.file,\n                            $.proxy(this.close, this)\n                        );\n\n                        return;\n                    }\n                    fileName = inputFile.get(0).files;\n\n                    if (!fileName || !fileName.length) {\n                        fileName = null;\n                    }\n                    inputFile.replaceWith(inputFile);\n\n                    callback = $.proxy(function () {\n                        this.close();\n                    }, this);\n\n                    if (fileName) {\n                        this._uploadImage(fileName, imageData.file, callback);\n                    } else {\n                        this._replaceImage(imageData.file, imageData.file, imageData);\n                        callback(0, imageData);\n                    }\n                },\n                this\n            ));\n        },\n\n        /**\n         * Fired when clicked on cancel\n         * @private\n         */\n        _onCancel: function () {\n            this.close();\n        },\n\n        /**\n         * Fired when clicked on delete\n         * @private\n         */\n        _onDelete: function () {\n            var filename = this.element.find(this._videoImageFilenameselector).val();\n\n            this._removeImage(filename);\n            this.close();\n        },\n\n        /**\n         * @param {String} file\n         * @param {Function} callback\n         * @private\n         */\n        _readPreviewLocal: function (file, callback) {\n            var fr = new FileReader;\n\n            if (!window.FileReader) {\n                return;\n            }\n\n            /**\n             * On load end\n             */\n            fr.onloadend = function () {\n                callback(fr.result);\n            };\n            fr.readAsDataURL(file);\n        },\n\n        /**\n         *  Image file input handler\n         * @private\n         */\n        _onImageInputChange: function () {\n            var jFile = $(this._videoPreviewInputSelector),\n            file = jFile[0],\n            val = jFile.val(),\n            prev = this._getPreviewImage(),\n            ext = '.' + val.split('.').pop();\n\n            if (!val) {\n                return;\n            }\n            ext = ext ? ext.toLowerCase() : '';\n\n            if (ext.length < 2 ||\n                this._imageTypes.indexOf(ext.toLowerCase()) === -1 ||\n                !file.files ||\n                !file.files.length\n            ) {\n                prev.remove();\n                this._previewImage = null;\n                jFile.val('');\n\n                return;\n            } // end if\n            file = file.files[0];\n            this._tempPreviewImageData = null;\n            this._onPreview(null, file, true);\n        },\n\n        /**\n         * Change Preview\n         * @param {String} error\n         * @param {String} src\n         * @param {Boolean} local\n         * @private\n         */\n        _onPreview: function (error, src, local) {\n            var img, renderImage;\n\n            img = this._getPreviewImage();\n\n            /**\n             * Callback\n             * @param {String} source\n             */\n            renderImage = function (source) {\n                img.attr({\n                    'src': source\n                }).show();\n            };\n\n            if (error) {\n                return;\n            }\n\n            if (!local) {\n                renderImage(src);\n            } else {\n                this._readPreviewLocal(src, renderImage);\n            }\n        },\n\n        /**\n         *\n         * Return preview image imstance\n         * @returns {null}\n         * @private\n         */\n        _getPreviewImage: function () {\n\n            if (!this._previewImage) {\n                this._previewImage = $(document.createElement('img')).css({\n                    'width': '100%',\n                    'display': 'none',\n                    'src': ''\n                });\n                $(this._previewImage).insertAfter(this._videoPreviewImagePointer);\n                $(this._previewImage).attr('data-role', 'video_preview_image');\n            }\n\n            return this._previewImage;\n        },\n\n        /**\n         * Close slideout dialog\n         */\n        close: function () {\n            this.element.trigger('closeModal');\n        },\n\n        /**\n         * Close dialog wrap\n         * @private\n         */\n        _onClose: function () {\n            var newVideoForm;\n\n            this.imageData = null;\n\n            if (this._previewImage) {\n                this._previewImage.remove();\n                this._previewImage = null;\n            }\n            this._tempPreviewImageData = null;\n            $(this._videoPlayerSelector).trigger('reset');\n            newVideoForm = this.element.find(this._videoFormSelector);\n\n            $(newVideoForm).find('input[type=\"hidden\"][name!=\"form_key\"]').val('');\n            $('input[name*=\"' + $(this._itemIdSelector).val() + '\"]').parent().removeClass('active');\n\n            try {\n                newVideoForm.validation('clearError');\n            } catch (e) {\n            }\n            newVideoForm.trigger('reset');\n        },\n\n        /**\n         * Find element by fileName\n         * @param {String} file\n         */\n        findElementId: function (file) {\n            var elem = $('.image.item').find('input[value=\"' + file + '\"]');\n\n            if (!elem) {\n                return null;\n            }\n\n            return $(elem).attr('name').replace('product[media_gallery][images][', '').replace('][file]', '');\n        },\n\n        /**\n         * Save image roles\n         * @param {Object} imageData\n         */\n        saveImageRoles: function (imageData) {\n            var data = imageData.file,\n                self = this,\n                containers;\n\n            if (data && data.length > 0) {\n                containers = $('.image-placeholder').siblings('input');\n                $.each(containers, function (i, el) {\n                    var start = el.name.indexOf('[') + 1,\n                        end = el.name.indexOf(']'),\n                        imageType = el.name.substring(start, end),\n                        imageCheckbox = $(self._videoFormSelector + ' input[value=\"' + imageType + '\"]');\n\n                    self._changeRole(imageType, imageCheckbox.attr('checked'), imageData);\n                });\n            }\n        },\n\n        /**\n         * Change image role\n         * @param {String} imageType - role name\n         * @param {bool} isEnabled - role active status\n         * @param {Object} imageData - image data object\n         * @private\n         */\n        _changeRole: function (imageType, isEnabled, imageData) {\n            var needCheked = true;\n\n            if (!isEnabled) {\n                needCheked = $('input[name=\"product[' + imageType + ']\"]').val() === imageData.file;\n            }\n\n            if (!needCheked) {\n                return null;\n            }\n\n            $(this._imageWidgetSelector).trigger('setImageType', {\n                type:  imageType,\n                imageData: isEnabled ? imageData : null\n            });\n        },\n\n        /**\n         * On open dialog\n         * @param {Object} e\n         * @param {Object} imageData\n         * @private\n         */\n        _onOpenDialog: function (e, imageData) {\n            var formFields, flagChecked, file;\n\n            if (imageData['media_type'] === 'external-video') {\n                this.imageData = imageData;\n                $('.video-create-button').hide();\n                $('.video-delete-button').show();\n                $('.video-edit').show();\n                $('.mage-new-video-dialog').createVideoPlayer({\n                    reset: true\n                }).createVideoPlayer('reset');\n\n                formFields = $(this._videoFormSelector).find('.edited-data');\n\n                $.each(formFields, function (i, field) {\n                    $(field).val(imageData[field.name]);\n                });\n\n                flagChecked = imageData.disabled > 0;\n                $(this._videoDisableinputSelector).prop('checked', flagChecked);\n\n                file = $('#file_name').val(imageData.file);\n\n                $.each($('.video_image_role'), function () {\n                    $(this).prop('checked', false).prop('disabled', false);\n                });\n\n                $.each($('.image-placeholder').siblings('input:hidden'), function () {\n                    var start, end, imageRole;\n\n                    if ($(this).val() === file.val()) {\n                        start = this.name.indexOf('[') + 1;\n                        end = this.name.length - 1;\n                        imageRole = this.name.substring(start, end);\n                        $('#new_video_form input[value=\"' + imageRole + '\"]').prop('checked', true);\n                    }\n                });\n            }\n\n        },\n\n        /**\n         * Toggle buttons\n         */\n        toggleButtons: function () {\n            var self = this;\n\n            $('.video-placeholder, .add-video-button-container > button').click(function () {\n                $('.video-create-button').show();\n                $('.video-delete-button').hide();\n                $('.video-edit').hide();\n                $('.mage-new-video-dialog').createVideoPlayer({\n                    reset: true\n                }).createVideoPlayer('reset').updateInputFields({\n                    reset: true\n                }).updateInputFields('reset');\n            });\n            $(document).on('click', '#media_gallery_content .item.video-item', function () {\n                $('.video-create-button').hide();\n                $('.video-delete-button').show();\n                $('.video-edit').show();\n                $('.mage-new-video-dialog').createVideoPlayer({\n                    reset: true\n                }).createVideoPlayer('reset');\n            });\n            $(document).on('click', '#media_gallery_content .item.video-item:not(.removed)', function () {\n                var flagChecked,\n                    file,\n                    formFields = $(self._videoFormSelector).find('.edited-data'),\n                    container = $(this);\n\n                $.each(formFields, function (i, field) {\n                    $(field).val(container.find('input[name*=\"' + field.name + '\"]').val());\n                });\n\n                flagChecked = container.find('input[name*=\"disabled\"]').val() > 0;\n                $(self._videoDisableinputSelector).attr('checked', flagChecked);\n\n                file = $('#file_name').val(container.find('input[name*=\"file\"]').val());\n\n                $.each($('.video_image_role'), function () {\n                    $(this).prop('checked', false).prop('disabled', false);\n                });\n\n                $.each($('.image-placeholder').siblings('input:hidden'), function () {\n                    var start, end, imageRole;\n\n                    if ($(this).val() !== file.val()) {\n                        return null;\n                    }\n\n                    start = this.name.indexOf('[') + 1;\n                    end = this.name.length - 1;\n                    imageRole = this.name.substring(start, end);\n                    $('input[value=\"' + imageRole + '\"]').prop('checked', true);\n                });\n            });\n        }\n    });\n\n    $('#group-fields-image-management > legend > span').text($.mage.__('Images and Videos'));\n\n    return $.mage.newVideoDialog;\n});\n","Webkul_Marketplace/js/notification.js":"/**\n * Webkul Software.\n *\n * @category  Webkul\n * @package   Webkul_Marketplace\n * @author    Webkul Software Private Limited\n * @copyright Webkul Software Private Limited (https://webkul.com)\n * @license   https://store.webkul.com/license.html\n */\n/*jshint browser:true*/\ndefine([\n    'jquery',\n    'mage/template',\n    'jquery/ui'\n], function ($, mageTemplate) {\n    'use strict';\n\n    $.widget('mage.notification', {\n        options: {\n            templates: {\n                global: '<div data-role=\"messages\" id=\"messages\"><div class=\"message <% if (data.error) { %>error<% } %>\"><div><%- data.message %></div></div></div>',\n                error: '<div data-role=\"messages\" id=\"messages\"><div class=\"messages\"><div class=\"message message-error error\"><div data-ui-id=\"messages-message-error\"><%- data.message %></div></div></div></div>'\n            }\n        },\n        placeholder: '[data-role=messages]',\n        /**\n         * Notification creation\n         * @protected\n         */\n        _create: function () {\n            $(document).on('ajaxComplete ajaxError', $.proxy(this._add, this));\n        },\n\n        /**\n         * Add new message\n         * @protected\n         * @param {Object} event - object\n         * @param {Object} jqXHR - The jQuery XMLHttpRequest object returned by $.ajax()\n         */\n        _add: function (event, jqXHR) {\n            try {\n                var response = JSON.parse(jqXHR.responseText);\n\n                if (response && response.error && response.html_message) {\n                    $(this.placeholder).html(response.html_message);\n                }\n            } catch (e) {\n}\n        },\n\n        /**\n         * Adds new message.\n         *\n         * @param {Object} data - Data with a message to be displayed.\n         */\n        add: function (data) {\n            var template = data.error ? this.options.templates.error : this.options.templates.global;\n            var message = mageTemplate(template, {\n                data: data\n            });\n            if (typeof data.insertMethod === 'function') {\n                data.insertMethod(message);\n            } else {\n                var messageContainer = data.messageContainer || this.placeholder;\n                $(messageContainer).prepend(message);\n            }\n            return this;\n        },\n\n        /**\n         * Removes error messages.\n         */\n        clear: function () {\n            $(this.placeholder).html('');\n        }\n    });\n\n    return $.mage.notification;\n});\n","Webkul_Marketplace/js/pay.js":"/**\n * Webkul Software.\n *\n * @category  Webkul\n * @package   Webkul_Marketplace\n * @author    Webkul Software Private Limited\n * @copyright Webkul Software Private Limited (https://webkul.com)\n * @license   https://store.webkul.com/license.html\n */\n /*jshint jquery:true*/\n define([\n    //'uiComponent',\n    'Magento_Ui/js/grid/columns/multiselect',\n    'Magento_Catalog/js/price-utils'\n], function (Component, utils, paging) {\n    'use strict';\n    return Component.extend({\n        initialize: function () {\n            this._super();\n            this.totalSellerPrice = this.totalSelected;\n        },\n        updateState: function () {\n            this.totalSellerPrice = this.totalSelected;\n        }\n    });\n});","Webkul_Marketplace/js/product-gallery.js":"/**\n * Webkul Software.\n *\n * @category  Webkul\n * @package   Webkul_Marketplace\n * @author    Webkul Software Private Limited\n * @copyright Webkul Software Private Limited (https://webkul.com)\n * @license   https://store.webkul.com/license.html\n */\n/*jshint jquery:true*/\ndefine([\n    'jquery',\n    'mage/template',\n    'jquery/ui',\n    'baseImage'\n], function ($, mageTemplate) {\n    'use strict';\n\n    /**\n     * Product gallery widget\n     */\n    $.widget('mage.productGallery', {\n        options: {\n            imageSelector: '[data-role=image]',\n            template: '[data-template=image]',\n            types: null,\n            initialized: false\n        },\n\n        /**\n         * Gallery creation\n         * @protected\n         */\n        _create: function () {\n            this.options.types = this.options.types || this.element.data('types');\n            this.options.images = this.options.images || this.element.data('images');\n\n            this.imgTmpl = mageTemplate(this.options.template);\n\n            this._bind();\n\n            $.each(this.options.images, $.proxy(function (index, imageData) {\n                this.element.trigger('addItem', imageData);\n            }, this));\n\n            this.options.initialized = true;\n        },\n\n        /**\n         * Bind handler to elements\n         * @protected\n         */\n        _bind: function () {\n            var events = {\n                openDialog: '_onOpenDialog',\n                addItem: '_addItem',\n                removeItem: '_removeItem',\n                setImageType: '_setImageType',\n                setPosition: '_setPosition',\n                resort: '_resort',\n                'mouseup [data-role=delete-button]': function (event) {\n                    var $imageContainer;\n\n                    event.preventDefault();\n                    $imageContainer = $(event.currentTarget).closest(this.options.imageSelector);\n                    this.element.find('[data-role=dialog]').trigger('close');\n                    this.element.trigger('removeItem', $imageContainer.data('imageData'));\n                },\n                'mouseup [data-role=make-base-button]': function (event) {\n                    var $imageContainer,\n                        imageData;\n\n                    event.preventDefault();\n                    event.stopImmediatePropagation();\n                    $imageContainer = $(event.currentTarget).closest(this.options.imageSelector);\n                    imageData = $imageContainer.data('imageData');\n                    this.setBase(imageData);\n                }\n            };\n\n            this._on(events);\n            this.element.sortable({\n                distance: 8,\n                items: this.options.imageSelector,\n                tolerance: \"pointer\",\n                cancel: 'input, button, .uploader',\n                update: $.proxy(function () {\n                    this.element.trigger('resort');\n                }, this)\n            });\n        },\n\n        /**\n         * Set image as main\n         * @param {Object} imageData\n         * @private\n         */\n        setBase: function (imageData) {\n            var baseImage = this.options.types.image;\n            var sameImages = $.grep(\n                $.map(this.options.types, function (el) {\n                    return el;\n                }),\n                function (el) {\n                    return el.value === baseImage.value;\n                }\n            );\n            var isImageOpened = this.findElement(imageData).hasClass('active');\n\n            $.each(sameImages, $.proxy(function (index, image) {\n                this.element.trigger('setImageType', {\n                    type: image.code,\n                    imageData: imageData\n                });\n\n                if (isImageOpened) {\n                    this.element.find('.item').addClass('selected');\n                    this.element.find('[data-role=type-selector]').prop({\n                        'checked': true\n                    });\n                }\n            }, this));\n        },\n\n        /**\n         * Find element by fileName\n         * @param {Object} data\n         * @returns {Element}\n         */\n        findElement: function (data) {\n            return this.element.find(this.options.imageSelector).filter(function () {\n                return $(this).data('imageData').file === data.file;\n            }).first();\n        },\n\n        /**\n         * Add image\n         * @param event\n         * @param imageData\n         * @private\n         */\n        _addItem: function (event, imageData) {\n            var count = this.element.find(this.options.imageSelector).length,\n                element;\n\n            imageData = $.extend({\n                file_id: Math.random().toString(33).substr(2, 18),\n                disabled: imageData.disabled ? imageData.disabled : 0,\n                position: count + 1\n            }, imageData);\n\n            element = this.imgTmpl({\n                data: imageData\n            });\n\n            element = $(element).data('imageData', imageData);\n            if (count === 0) {\n                element.prependTo(this.element);\n            } else {\n                element.insertAfter(this.element.find(this.options.imageSelector + ':last'));\n            }\n\n            if (!this.options.initialized &&\n                this.options.images.length === 0 ||\n                this.options.initialized &&\n                this.element.find(this.options.imageSelector + ':not(.removed)').length === 1\n            ) {\n                this.setBase(imageData);\n            }\n\n            $.each(this.options.types, $.proxy(function (index, image) {\n                if (imageData.file === image.value) {\n                    this.element.trigger('setImageType', {\n                        type: image.code,\n                        imageData: imageData\n                    });\n                }\n            }, this));\n        },\n\n        /**\n         * Remove Image\n         * @param {jQuery.Event} event\n         * @param imageData\n         * @private\n         */\n        _removeItem: function (event, imageData) {\n            var $imageContainer = this.findElement(imageData);\n            imageData.isRemoved = true;\n            $imageContainer.addClass('removed').hide().find('.is-removed').val(1);\n        },\n\n        /**\n         * Set image type\n         * @param event\n         * @param data\n         * @private\n         */\n        _setImageType: function (event, data) {\n            if (data.type === 'image') {\n                this.element.find('.base-image').removeClass('base-image');\n            }\n\n            if (data.imageData) {\n                this.options.types[data.type].value = data.imageData.file;\n\n                if (data.type === 'image') {\n                    this.findElement(data.imageData).addClass('base-image');\n                }\n            } else {\n                this.options.types[data.type].value = 'no_selection';\n            }\n            this.element.find('.image-' + data.type).val(this.options.types[data.type].value || 'no_selection');\n        },\n\n        /**\n         * Resort images\n         * @private\n         */\n        _resort: function () {\n            this.element.find('.position').each($.proxy(function (index, element) {\n                var value = $(element).val();\n\n                if (value != index) {\n                    this.element.trigger('moveElement', {\n                        imageData: $(element).closest(this.options.imageSelector).data('imageData'),\n                        position: index\n                    });\n                    $(element).val(index);\n                }\n            }, this));\n        },\n\n        /**\n         * Set image position\n         * @param event\n         * @param data\n         * @private\n         */\n        _setPosition: function (event, data) {\n            var $element = this.findElement(data.imageData);\n            var curIndex = this.element.find(this.options.imageSelector).index($element);\n            var newPosition = data.position + (curIndex > data.position ? -1 : 0);\n\n            if (data.position != curIndex) {\n                if (data.position === 0) {\n                    this.element.prepend($element);\n                } else {\n                    $element.insertAfter(\n                        this.element.find(this.options.imageSelector).eq(newPosition)\n                    );\n                }\n                this.element.trigger('resort');\n            }\n        }\n    });\n\n    // Extension for mage.productGallery - Add advanced settings block\n    $.widget('mage.productGallery', $.mage.productGallery, {\n        options: {\n            dialogTemplate: '.dialog-template'\n        },\n\n        _create: function () {\n            this._super();\n            var template = this.element.find(this.options.dialogTemplate);\n            if (template.length) {\n                this.dialogTmpl = mageTemplate(template.html());\n            }\n        },\n\n        /**\n         * Bind handler to elements\n         * @protected\n         */\n        _bind: function () {\n            this._super();\n            var events = {};\n            events['click [data-role=close-panel]'] = $.proxy(function () {\n                this.element.find('[data-role=dialog]').trigger('close');\n            }, this);\n            events['mouseup ' + this.options.imageSelector] = function (event) {\n                if (!$(event.currentTarget).is('.ui-sortable-helper')) {\n                    $(event.currentTarget).addClass('active');\n                    var itemId = $(event.currentTarget).find('input')[0].name.match(/\\[([^\\]]*)\\]/g)[2];\n                    $('#item_id').val(itemId);\n                    var imageData = $(event.currentTarget).data('imageData');\n                    var $imageContainer = this.findElement(imageData);\n                    if ($imageContainer.is('.removed')) {\n                        return;\n                    }\n                    this.element.trigger('openDialog', [imageData]);\n                }\n            };\n            this._on(events);\n            this.element.on('sortstart', $.proxy(function () {\n                this.element.find('[data-role=dialog]').trigger('close');\n            }, this));\n        },\n\n        /**\n         *\n         * Click by image handler\n         *\n         * @param e\n         * @param imageData\n         * @private\n         */\n        _onOpenDialog: function (e, imageData) {\n            if (imageData.media_type && imageData.media_type != 'image') {\n                return;\n            }\n            this._showDialog(imageData);\n        },\n\n        /**\n         * Show dialog\n         * @param imageData\n         * @private\n         */\n        _showDialog: function (imageData) {\n            var $imageContainer = this.findElement(imageData);\n            var dialogElement = $imageContainer.data('dialog');\n            if (!this.dialogTmpl) {\n                alert('System problem!');\n                return;\n            }\n\n            var $template = this.dialogTmpl({ data: imageData });\n            dialogElement = $($template);\n            dialogElement.modal({\n                'type': 'slide',\n                title: $.mage.__('Image Detail'),\n                buttons: [],\n                opened: function () {\n                    dialogElement.trigger('open');\n                },\n                closed: function (e) {\n                    dialogElement.trigger('close');\n                }\n            });\n            dialogElement\n                .data('imageContainer', $imageContainer)\n                .on('open', $.proxy(function (event) {\n                    $(event.target)\n                        .find('[data-role=type-selector]')\n                        .each($.proxy(function (index, checkbox) {\n                            var $checkbox = $(checkbox),\n                                parent = $checkbox.closest('.item'),\n                                selectedClass = 'selected',\n                                isChecked = this.options.types[$checkbox.val()].value == imageData.file;\n                            $checkbox.prop(\n                                'checked',\n                                isChecked\n                            );\n                            parent.toggleClass(selectedClass, isChecked);\n                        }, this));\n\n                }, this))\n                .on('close', $.proxy(function (event) {\n                    $imageContainer.removeClass('active');\n                    $imageContainer.data('dialog', null);\n                }, this));\n\n            $imageContainer.data('dialog', dialogElement);\n\n\n            var _changeDescription = function (e) {\n                var target = jQuery(e.target);\n                var targetName = target.attr('name');\n                var desc = target.val();\n                jQuery('input[type=\"hidden\"][name=\"'+ targetName + '\"]').val(desc);\n                imageData.label = desc;\n                imageData.label_default = desc;\n            };\n\n            dialogElement.on('change', '[data-role=type-selector]', function () {\n                var parent = $(this).closest('.item'),\n                    selectedClass = 'selected';\n                parent.toggleClass(selectedClass, $(this).prop('checked'));\n            });\n            dialogElement.on('change', '[data-role=type-selector]', $.proxy(this._notifyType, this));\n            dialogElement.on('change', '[data-role=visibility-trigger]', $.proxy(function (e) {\n                this._changeVisibility(e, imageData);\n            }, this));\n            dialogElement.on('change', '#image-description', _changeDescription);\n            dialogElement.modal('openModal');\n        },\n\n        /**\n         * Change visibility\n         *\n         * @param event\n         * @private\n         */\n        _changeVisibility: function (event, imageData) {\n            var $checkbox = $(event.currentTarget);\n            var $imageContainer = $checkbox.closest('[data-role=dialog]').data('imageContainer');\n            $imageContainer.toggleClass('hidden-for-front', $checkbox.is(':checked'));\n            var checked = $checkbox.is(':checked') ? 1 : 0;\n            $imageContainer.find('[name*=\"disabled\"]').val(checked);\n            imageData.disabled = checked;\n        },\n\n        /**\n         * Set image\n         * @param event\n         * @private\n         */\n        _notifyType: function (event) {\n            var $checkbox = $(event.currentTarget);\n            var $imageContainer = $checkbox.closest('[data-role=dialog]').data('imageContainer');\n            this.element.trigger('setImageType', {\n                type: $checkbox.val(),\n                imageData: $checkbox.is(':checked') ? $imageContainer.data('imageData') : null\n            });\n        }\n    });\n\n    return $.mage.productGallery;\n});\n","Webkul_Marketplace/js/sellerNavigation.js":"/**\n * Webkul Software.\n *\n * @category  Webkul\n * @package   Webkul_Marketplace\n * @author    Webkul Software Private Limited\n * @copyright Webkul Software Private Limited (https://webkul.com)\n * @license   https://store.webkul.com/license.html\n */\ndefine('sellerNavigationScroll', [\n    'jquery'\n], function ($) {\n    'use strict';\n\n    var win = $(window),\n        subMenuClass = '.wk-mp-submenu',\n        fixedClassName = 'fixed',\n        menu = $('.wk-mp-menu-wrapper'),\n        content = $('.wk-mp-page-wrapper'),\n        menuItems = $('#wk-mp-nav').children('li'),\n        subMenus = menuItems.children(subMenuClass),\n        winHeight,\n        menuHeight = menu.height(),\n        menuHeightRest = 0,\n        menuScrollMax = 0,\n        submenuHeight = 0,\n        contentHeight,\n        winTop = 0,\n        winTopLast = 0,\n        scrollStep = 0,\n        nextTop = 0;\n\n    /**\n     * Check if menu is fixed\n     * @returns {boolean}\n     */\n    function isMenuFixed()\n    {\n        return (menuHeight < contentHeight) && (contentHeight > winHeight);\n    }\n\n    /**\n     * Check if class exist than add or do nothing\n     * @param {jQuery} el\n     * @param $class string\n     */\n    function checkAddClass(el, $class)\n    {\n        if (!el.hasClass($class)) {\n            el.addClass($class);\n        }\n    }\n\n    /**\n     * Check if class exist than remove or do nothing\n     * @param {jQuery} el\n     * @param $class string\n     */\n    function checkRemoveClass(el, $class)\n    {\n        if (el.hasClass($class)) {\n            el.removeClass($class);\n        }\n    }\n\n    /**\n     * Calculate and apply menu position\n     */\n    function positionMenu()\n    {\n        //  Spotting positions and heights\n        winHeight = win.height();\n        contentHeight = content.height();\n        winTop = win.scrollTop();\n        scrollStep = winTop - winTopLast;\n        menuHeightRest = menuHeight - winTop; // is a visible menu height\n\n        if (isMenuFixed()) { // fixed menu cases\n\n            checkAddClass(menu, fixedClassName);\n\n            if (menuHeight > winHeight) { // smart scroll cases\n\n                if (winTop > winTopLast) { //  scroll down\n\n                    menuScrollMax = menuHeight - winHeight;\n\n                    nextTop < (menuScrollMax - scrollStep) ?\n                        nextTop += scrollStep : nextTop = menuScrollMax;\n\n                    menu.css('top', -nextTop);\n                } else if (winTop <= winTopLast) { // scroll up\n\n                    nextTop > -scrollStep ?\n                        nextTop += scrollStep : nextTop = 0;\n\n                    menu.css('top', -nextTop);\n                }\n            }\n        } else { // static menu cases\n            checkRemoveClass(menu, fixedClassName);\n        }\n\n        //  Save previous window scrollTop\n        winTopLast = winTop;\n\n    }\n\n    positionMenu(); // page start calculation\n\n    //  Change position on scroll\n    win.on('scroll', function () {\n        positionMenu();\n    });\n\n    win.on('resize', function () {\n\n        winHeight = win.height();\n\n        //  Reset position if fixed and out of smart scroll\n        if ((menuHeight < contentHeight) && (menuHeight <= winHeight)) {\n            menu.removeAttr('style');\n            menuItems.off();\n        }\n\n    });\n\n    //  Add event to menuItems to check submenu overlap\n    menuItems.on('click', function (e) {\n\n        var submenu = $(this).children(subMenuClass),\n            delta,\n            logo = $('.wk-mp-logo')[0].offsetHeight;\n\n        submenuHeight = submenu.height();\n\n        if (submenuHeight > menuHeight && menuHeight + logo > winHeight) {\n            menu.height(submenuHeight - logo);\n            delta = -menu.position().top;\n            window.scrollTo(0, 0);\n            positionMenu();\n            window.scrollTo(0, delta);\n            positionMenu();\n            menuHeight = submenuHeight;\n        }\n    });\n\n});\n\ndefine([\n    'jquery',\n    'jquery/ui',\n    'sellerNavigationScroll'\n], function ($) {\n    'use strict';\n\n    $.widget('mage.sellerNavigation', {\n        options: {\n            selectors: {\n                menu: '#wk-mp-nav',\n                currentItem: '.current',\n                topLevelItem: '.level-0',\n                topLevelHref: '> a',\n                subMenu: '> .wk-mp-submenu',\n                closeSubmenuBtn: '[data-role=\"wk-mp-close-submenu\"]'\n            },\n            overlayTmpl: '<div class=\"wk-mp-menu-overlay\"></div>'\n        },\n\n        _create: function () {\n            var selectors = this.options.selectors;\n\n            this.menu = this.element;\n            this.menuLinks = $(selectors.topLevelHref, selectors.topLevelItem);\n            this.closeActions = $(selectors.closeSubmenuBtn);\n\n            this._initOverlay()\n                ._bind();\n        },\n\n        _initOverlay: function () {\n            this.overlay = $(this.options.overlayTmpl).appendTo('body').hide(0);\n\n            return this;\n        },\n\n        _bind: function () {\n            var focus = this._focus.bind(this),\n                open = this._open.bind(this),\n                blur = this._blur.bind(this),\n                keyboard = this._keyboard.bind(this);\n\n            this.menuLinks\n                .on('focus', focus)\n                .on('click', open);\n\n            this.menuLinks.last().on('blur', blur);\n\n            this.closeActions.on('keydown', keyboard);\n        },\n\n\n        /**\n         * Remove active class from current menu item\n         * Turn back active class to current page menu item\n         */\n        _blur: function (e) {\n            var selectors = this.options.selectors,\n                menuItem = $(e.target).closest(selectors.topLevelItem),\n                currentItem = $(selectors.menu).find(selectors.currentItem);\n\n            menuItem.removeClass('active');\n            currentItem.addClass('active');\n        },\n\n        /**\n         * Add focus to active menu item\n         */\n        _keyboard: function (e) {\n            var selectors = this.options.selectors,\n                menuItem = $(e.target).closest(selectors.topLevelItem);\n\n            if (e.which === 13) {\n                this._close(e);\n                $(selectors.topLevelHref, menuItem).focus();\n            }\n        },\n\n        /**\n         * Toggle active state on focus\n         */\n        _focus: function (e) {\n            var selectors = this.options.selectors,\n                menuItem = $(e.target).closest(selectors.topLevelItem);\n\n            menuItem.addClass('active')\n                .siblings(selectors.topLevelItem)\n                .removeClass('active');\n        },\n\n        _closeSubmenu: function (e) {\n            var selectors = this.options.selectors,\n                currentItem = $(selectors.menu).find(selectors.currentItem);\n\n            this._close(e);\n\n            currentItem.addClass('active');\n        },\n\n        _open: function (e) {\n            var selectors = this.options.selectors,\n                menuItemSelector = selectors.topLevelItem,\n                menuItem = $(e.target).closest(menuItemSelector),\n                subMenu = $(selectors.subMenu, menuItem),\n                close = this._closeSubmenu.bind(this),\n                closeBtn = subMenu.find(selectors.closeSubmenuBtn);\n\n\n            if (subMenu.length) {\n                e.preventDefault();\n            }\n\n            menuItem.addClass('show')\n                .siblings(menuItemSelector)\n                .removeClass('show');\n\n            subMenu.attr('aria-expanded', 'true');\n\n            //subMenu.css('height', subMenu.find('ul.menu')[0].height() + subMenu.find('strong.submenu-title').height());\n\n            closeBtn.on('click', close);\n\n            this.overlay.show(0).on('click', close);\n            this.menuLinks.last().off('blur');\n        },\n\n        _close: function (e) {\n            var selectors = this.options.selectors,\n                menuItem = this.menu.find(selectors.topLevelItem + '.show'),\n                subMenu = $(selectors.subMenu, menuItem),\n                closeBtn = subMenu.find(selectors.closeSubmenuBtn),\n                blur = this._blur.bind(this);\n\n            e.preventDefault();\n\n            this.overlay.hide(0).off('click');\n\n            this.menuLinks.last().on('blur', blur);\n\n            closeBtn.off('click');\n\n            subMenu.attr('aria-expanded', 'false');\n\n            menuItem.removeClass('show active');\n        }\n    });\n\n    return $.mage.sellerNavigation;\n});","Webkul_Marketplace/js/video-modal.js":"/**\n * Webkul Software.\n *\n * @category  Webkul\n * @package   Webkul_Marketplace\n * @author    Webkul Software Private Limited\n * @copyright Webkul Software Private Limited (https://webkul.com)\n * @license   https://store.webkul.com/license.html\n */\ndefine([\n    'jquery',\n    'productGallery',\n    'jquery/ui',\n    'Magento_Ui/js/modal/modal',\n    'mage/translate',\n    'mage/backend/tree-suggest',\n    'mage/backend/validation'\n], function ($, productGallery) {\n    'use strict';\n\n    $.widget('mage.productGallery', productGallery, {\n\n        /**\n         * * Fired when widget initialization start\n         * @private\n         */\n        _create: function () {\n            this._bind();\n        },\n\n        /**\n         * Bind events\n         * @private\n         */\n        _bind: function () {\n            $(this.element).on('click', this.showModal.bind(this));\n            $('.gallery.ui-sortable').on('openDialog', $.proxy(this._onOpenDialog, this));\n        },\n\n        /**\n         * Open dialog for external video\n         * @private\n         */\n        _onOpenDialog: function (e, imageData) {\n\n            if (imageData['media_type'] !== 'external-video') {\n                return;\n            }\n            this.showModal();\n        },\n\n        /**\n         * Fired on trigger \"openModal\"\n         */\n        showModal: function () {\n\n            $('#new-video').modal('openModal');\n        }\n    });\n\n    return $.mage.productGallery;\n});\n","Webkul_Marketplace/js/account/edit-seller-profile.js":"/**\n * Webkul Software.\n *\n * @category  Webkul\n * @package   Webkul_Marketplace\n * @author    Webkul Software Private Limited\n * @copyright Webkul Software Private Limited (https://webkul.com)\n * @license   https://store.webkul.com/license.html\n */\n/*jshint jquery:true*/\ndefine([\n    \"jquery\",\n    'mage/translate',\n    'Magento_Ui/js/modal/alert',\n    \"jquery/ui\"\n], function ($, $t, alert) {\n    'use strict';\n    $.widget('mage.editSellerProfile', {\n        options: {\n            backUrl: '',\n            errorMessageForAllowedExtensions: $t('Invalid Image Extension. Allowed extensions are jpg, jpef, png, gif'),\n            errorMessageForlogoAllowedExtensions: $t('Invalid Image Extension. Allowed extensions are jpg, jpef, png'),\n            confirmMessageForBannerDelete: $t('Are you sure you want to delete this banner?'),\n            confirmMessageForLogoDelete: $t('Are you sure you want to delete this logo?'),\n            errorMessage: $t('Invalid address.'),\n            ajaxErrorMessage: $t('There was error during fetching results.'),\n            logoImageDeleteMouseOverWidth: '22px',\n            logoImageDeleteMouseOutWidth: '20px',\n            opacity: '.7'\n        },\n        _create: function () {\n            var self = this;\n            $(self.options.countryPicSelector).on('change', function () {\n                self.callGoogleMapApiAjaxFunction(this);\n            });\n\n            $(self.options.bannerPicSelector).on('change', function () {\n                var imagename=$(this).val().toLowerCase();\n                var image=imagename.split(\".\");\n                var extIndex = image.length - 1;\n                image=image[extIndex];\n                if (image!='jpg' && image!='jpeg' && image!='png' && image!='gif') {\n                    alert({\n                        content: self.options.errorMessageForAllowedExtensions\n                    });\n                    $(this).val('');\n                }\n            });\n\n            $(self.options.logoPicSelector).on('change', function () {\n                var imagename=$(this).val().toLowerCase();\n                var image=imagename.split(\".\");\n                var extIndex = image.length - 1;\n                image=image[extIndex];\n                if (image!='jpg' && image!='jpeg' && image!='png') {\n                    alert({\n                        content: self.options.errorMessageForlogoAllowedExtensions\n                    });\n                    $(this).val('');\n                }\n            });\n\n            $(self.options.leftButtonSelector).insertAfter(self.options.buttonsSetLastSelector);\n            \n            $(self.options.inputTextSelector).on('change', function () {\n                var thisValue = $(this).val();\n                var regex = /(<([^>]+)>)/ig;\n                var result = thisValue.replace(regex,\"\");\n                $(this).val(result);\n            });\n            \n            $(self.options.profileimageSetSpanSelector).click(function (event) {\n                var dicisionapp = confirm(self.options.confirmMessageForBannerDelete);\n                if (dicisionapp) {\n                    var thisthis = $(this);\n                    $(self.options.bannerSelector).css('opacity', self.options.opacity);\n                    $.ajax({\n                        url: self.options.bannerDeleteAjaxUrl,\n                        type: \"POST\",\n                        data: {\n                            file:'banner'\n                        },\n                        dataType: 'html',\n                        success:function (response) {\n                            thisthis.parent(self.options.setimageSelector).remove();\n                        },\n                        error: function (response) {\n                            alert({\n                                content: self.options.ajaxErrorMessage\n                            });\n                        }\n                    });\n                }\n            });\n\n            $(self.options.profileImageDeleteSelector).mouseover(function (event) {\n                $(event.target).css('width', self.options.logoImageDeleteMouseOverWidth);\n            });\n\n            $(self.options.profileImageDeleteSelector).mouseout(function (event) {\n                $(event.target).css('width', self.options.logoImageDeleteMouseOutWidth);\n            });\n\n            $(self.options.logoImageSetSpanSelector).click(function (event) {\n                var dicisionapp = confirm(self.options.confirmMessageForLogoDelete);\n                if (dicisionapp) {\n                    var thisthis = $(this);\n                    $(self.options.logoSelector).css('opacity', self.options.opacity);\n                    $.ajax({\n                        url: self.options.logoDeleteAjaxUrl,\n                        type: \"POST\",\n                        data: {\n                            file:'logo'\n                        },\n                        dataType: 'html',\n                        success:function (response) {\n                            thisthis.parent(self.options.setimageSelector).remove();\n                        },\n                        error: function (response) {\n                            alert({\n                                content: self.options.ajaxErrorMessage\n                            });\n                        }\n                    });\n                }\n            });\n\n            $(self.options.logoImageDeleteSelector).mouseover(function (event) {\n                $(event.target).css('width', self.options.logoImageDeleteMouseOverWidth);\n            });\n\n            $(self.options.logoImageDeleteSelector).mouseout(function (event) {\n                $(event.target).css('width', self.options.logoImageDeleteMouseOutWidth);\n            });\n        },\n\n        callGoogleMapApiAjaxFunction: function (e) {\n            var self = this;\n            $(self.options.countryImgPrevSelector).attr(\n                'src',\n                self.options.countryImgPrev+'/'+$(e).val()+'.png'\n            );\n            //address which you want Longitude and Latitude\n            var address=$(e).find('option[value=\"'+$(e).val()+'\"]').text();\n            $.ajax({\n                type: \"GET\",\n                dataType: \"json\",\n                url: \"//maps.googleapis.com/maps/api/geocode/json\",\n                data: {\n                    'address': address,\n                    'sensor':false\n                },\n                success: function (response) {\n                    if (response.results.length) {\n                        $(self.options.countryLatitudeSelector).val(\n                            response.results[0].geometry.location.lat\n                        );\n                        $(self.options.countryLongitudeSelector).val(\n                            response.results[0].geometry.location.lng\n                        );\n                    } else {\n                        $(self.options.countryLatitudeSelector).val(\n                            self.options.errorMessage\n                        );\n                        $(self.options.countryLongitudeSelector).val(\n                            self.options.errorMessage\n                        );\n                   }\n                },\n                error: function (response) {\n                    alert({\n                        content: self.options.ajaxErrorMessage\n                    });\n                }\n            });\n        }\n    });\n    return $.mage.editSellerProfile;\n});\n","Webkul_Marketplace/js/account/notification-control.js":"/**\n * Webkul Software.\n *\n * @category  Webkul\n * @package   Webkul_Marketplace\n * @author    Webkul Software Private Limited\n * @copyright Webkul Software Private Limited (https://webkul.com)\n * @license   https://store.webkul.com/license.html\n */\ndefine([\n    'jquery',\n    'mage/storage',\n    'mage/template',\n    'uiComponent',\n    'ko',\n    'Magento_Ui/js/modal/alert'\n    ], function (\n        $,\n        storage,\n        mageTemplate,\n        Component,\n        ko,\n        alert\n    ) {\n        'use strict';\n        return Component.extend({\n            initialize: function () {\n                var self = this;\n                $('.notifications-action.marketplace-dropdown').on('click', function (event) {\n                    event.preventDefault();\n                    self._showNotificationBox($(this));\n                });\n                $('body').on('click', function (event) {\n                    self._closeNotifyWindow(event);\n                });\n            },\n            _showNotificationBox: function (element) {\n                \n                if ($(element).parent('.notification-block').length) {\n                    if ($(element).hasClass('active')) {\n                        $(element).removeClass('active');\n                        $(element).parent('.notification-block').removeClass('active');\n                        $(element).next('.marketplace-dropdown-menu').hide();\n                    } else {\n                        $('.marketplace-dropdown-menu').hide();\n                        $('.notifications-action.marketplace-dropdown').removeClass('active');\n                        $('.notification-block').removeClass('active');\n                        $(element).addClass('active');\n                        $(element).parent('.notification-block').addClass('active');\n                        $(element).next('.marketplace-dropdown-menu').show();\n                    }\n                }\n            },\n            _closeNotifyWindow: function (event) {\n                var className = event.target.className;\n                if (className !== 'notification-block' &&\n                    className !== 'notifications-action marketplace-dropdown' &&\n                    className !== 'notifications-action marketplace-dropdown' &&\n                    className !== 'notifications-img' &&\n                    className !== 'marketplace-dropdown-menu' &&\n                    className !== 'notifications-action marketplace-dropdown active' &&\n                    className !== 'notification-count'\n                ) {\n                    $('.notifications-action').removeClass('active');\n                    $('.notification-block').removeClass('active');\n                    $('.marketplace-dropdown-menu').hide();\n                }\n            }\n\n        });\n    });","Webkul_Marketplace/js/account/seller-dashboard.js":"/**\n * Webkul Software.\n *\n * @category  Webkul\n * @package   Webkul_Marketplace\n * @author    Webkul Software Private Limited\n * @copyright Webkul Software Private Limited (https://webkul.com)\n * @license   https://store.webkul.com/license.html\n */\n/*jshint jquery:true*/\ndefine([\n    \"jquery\",\n    'mage/translate',\n    'Magento_Ui/js/modal/alert',\n    'Magento_Ui/js/modal/modal',\n    \"jquery/ui\"\n], function ($, $t, alert, modal) {\n    'use strict';\n    $.widget('mage.sellerDashboard', {\n        options: {\n            backUrl: '',\n            opacityLow: '0.4',\n            opacityHigh: '1',\n            ajaxSuccessMessage: $t('Your mail has been sent.'),\n            ajaxErrorMessage: $t('There was error during fetching results.'),\n            wrongCaptchaErrorMessage: $t('Wrong verification number.')\n        },\n        _create: function () {\n            var self = this;\n            let categoryChartOptions = {\n                type: 'popup',\n                responsive: true,\n                innerScroll: true,\n                title: $t('Top Selling Category'),\n                buttons: [{\n                    text: $.mage.__('Close'),\n                    class: '',\n                    click: function () {\n                        this.closeModal();\n                    }\n                }]\n            };\n            let $categoryModal = $('#wk-category-view-modal');\n            let popup = modal(categoryChartOptions, $categoryModal);\n            $('body').append($(self.options.mpAskDataSelector));\n            $(\".wk-category-view\").on('click', function () {\n                $categoryModal.modal('openModal');\n            });\n            $(self.options.askQueSelector).on('click', function () {\n                $(self.options.askFormInputSelector, self.options.askFormTextareaSelector).removeClass(self.options.mageErrorClass);\n                $(self.options.pageWrapperSelector).css('opacity', self.options.opacityLow);\n                $(self.options.mpModelPopupSelector).addClass(self.options.showClass);\n                $(self.options.mpAskDataSelector).show();\n            });\n\n            $(self.options.wkCloseSelector).click(function () {\n                $('body').removeClass('_has-modal');\n                $('.modals-overlay').remove();\n                $(self.options.pageWrapperSelector).css('opacity', self.options.opacityHigh);\n                $(self.options.resetBtnSelector).trigger('click');\n                $(self.options.mpAskDataSelector).hide();\n                $(self.options.askFormValidationFailedSelector).each(function () {\n                    $(this).removeClass(self.options.validationFailedSelector);\n                });\n                $(self.options.askFormValidationAdviceSelector).each(function () {\n                    $(this).remove();\n                });\n            });\n\n            $(self.options.askBtnSelector).click(function () {\n                var askDataForm = $(self.options.askFormSelector);\n                askDataForm.mage('validation', {});\n                if (askDataForm.valid()!=false) {\n                    var thisthis = $(this);\n                    if (thisthis.hasClass(\"clickask\")) {\n                        if (parseInt(self.options.captchaEnableStatus)) {\n                            var total = parseInt($(self.options.mpCaptcha1Selector).text()) + parseInt($(self.options.mpCaptcha2Selector).text());\n                            var wkMpCaptcha = $(self.options.mpCaptchaSelector).val();\n                            if (total != wkMpCaptcha) {\n                                $(self.options.mpCaptcha1Selector).text(Math.floor((Math.random()*10)+1));\n                                $(self.options.mpCaptcha2Selector).text(Math.floor((Math.random()*100)+1));\n                                $(self.options.mpCaptchaSelector).val('');\n                                $(self.options.mpCaptchaSelector).addClass(self.options.mageErrorClass);\n                                $(this).addClass(self.options.mageErrorClass);\n                                $(self.options.askFormErrorMailSelector)\n                                    .text(self.options.wrongCaptchaErrorMessage)\n                                    .slideDown('slow')\n                                    .delay(2000)\n                                    .slideUp('slow');\n                                return false;\n                            }\n                        }\n                        self.callAjaxFunction(thisthis);\n                    }\n                    return false;\n                }\n            });\n\n            $(self.options.mpYearLocationChartSelector).on('click', function () {\n                var thisthis = $(this);\n                self.callChartAjaxFunction(thisthis, 'location', 'year');\n            });\n            \n            $('#wk-location-chart-month').on('click', function () {\n                var thisthis = $(this);\n                self.callChartAjaxFunction(thisthis, 'location', 'month');\n            });\n\n            $('#wk-location-chart-week').on('click', function () {\n                var thisthis = $(this);\n                self.callChartAjaxFunction(thisthis, 'location', 'week');\n            });\n\n            $('#wk-location-chart-day').on('click', function () {\n                var thisthis = $(this);\n                self.callChartAjaxFunction(thisthis, 'location', 'day');\n            });\n\n            $('#wk-diagram-chart-year').on('click', function () {\n                var thisthis = $(this);\n                self.callChartAjaxFunction(thisthis, 'diagram', 'year');\n            });\n\n            $('#wk-diagram-chart-month').on('click', function () {\n                var thisthis = $(this);\n                self.callChartAjaxFunction(thisthis, 'diagram', 'month');\n            });\n\n            $('#wk-diagram-chart-week').on('click', function () {\n                var thisthis = $(this);\n                self.callChartAjaxFunction(thisthis, 'diagram', 'week');\n            });\n\n            $('#wk-diagram-chart-day').on('click', function () {\n                var thisthis = $(this);\n                self.callChartAjaxFunction(thisthis, 'diagram', 'day');\n            });\n\n            $('#wk-mp-dashboard-chart-select').change(function () {\n                $(\"#wk-mp-dashboard-chart-select option:selected\").each(function () {\n                    if ($(this).val() == 'yearly') {\n                        var thisthis = $(this);\n                        self.callChartAjaxFunction(thisthis, 'location', 'year');\n                    } else if ($(this).val() == 'monthly') {\n                        var thisthis = $(this);\n                        self.callChartAjaxFunction(thisthis, 'location', 'month');\n                    } else if ($(this).val() == 'weekly') {\n                        var thisthis = $(this);\n                        self.callChartAjaxFunction(thisthis, 'location', 'week');\n                    } else if ($(this).val() == 'daily') {\n                        var thisthis = $(this);\n                        self.callChartAjaxFunction(thisthis, 'location', 'day');\n                    }\n                });\n            }).trigger(\"change\");\n        },\n\n        callAjaxFunction: function (thisthis) {\n            var self = this;\n            thisthis.removeClass('clickask');\n            $(self.options.mpAskDataSelector).addClass(self.options.mailProcssClass);\n            $.ajax({\n                url : self.options.ajaxMailSendUrl,\n                data : $(self.options.askFormSelector).serialize(),\n                type : 'post',\n                dataType : 'json',\n                success: function (d) {\n                    thisthis.addClass('clickask');\n                    $(self.options.mpAskDataSelector).removeClass(self.options.mailProcssClass);\n                    alert({\n                        title: $t('Response'),\n                        content: self.options.ajaxSuccessMessage,\n                        actions: {\n                            always: function () {\n                                $(self.options.wkCloseSelector).trigger('click');\n                            }\n                        }\n                    });\n                },\n                error: function (response) {\n                    alert({\n                        content: self.options.ajaxErrorMessage,\n                        actions: {\n                            always: function () {\n                                $(self.options.wkCloseSelector).trigger('click');\n                            }\n                        }\n                    });\n                }\n            });\n        },\n\n        callChartAjaxFunction: function (thisthis, chartType, type) {\n            var self = this;\n            $('#wk-'+chartType+'-chart').attr('src', self.options.loader);\n            $.ajax({\n                url : self.options.ajaxChartUrl,\n                data : {chartType: chartType, dateType: type},\n                type : 'post',\n                dataType : 'json',\n                success: function (d) {\n                    $('#wk-'+chartType+'-chart').attr('src', d);\n                },\n                error: function (response) {\n                    alert({\n                        content: self.options.ajaxErrorMessage\n                    });\n                }\n            });\n        }\n    });\n    return $.mage.sellerDashboard;\n});\n","Webkul_Marketplace/js/account/seller-layout-contact.js":"/**\n * Webkul Software.\n *\n * @category  Webkul\n * @package   Webkul_Marketplace\n * @author    Webkul Software Private Limited\n * @copyright Webkul Software Private Limited (https://webkul.com)\n * @license   https://store.webkul.com/license.html\n */\ndefine([\n    'jquery',\n    \"Magento_Ui/js/modal/alert\",\n    'jquery/ui'\n    ], function($, alert){\n        $.widget('mage.sellerLayoutContact', {\n            options: {\n            },\n            /**\n             * Widget initialization\n             * @private\n             */\n             _create: function() {\n                var self = this;\n                var askDataForm = $('#tab-ask-form');\n                askDataForm.mage('validation', {});\n                $('#askbtntab').click(function() {\n                    if (askDataForm.valid()!=false) {\n                        var thisthis = $(this);\n                        if (thisthis.hasClass(\"clickask\")) {\n                           \n                            thisthis.removeClass('clickask');\n                            $('body').trigger('processStart');\n                            $.ajax({\n                                url:self.options.sellerContactUrl,\n                                data:$('#tab-ask-form').serialize(),\n                                type:'post',\n                                dataType:'json',\n                                success:function(d) {\n                                    thisthis.addClass('clickask');\n                                    alert({\n                                        title: $.mage.__('Contact Seller'),\n                                        content: self.options.mailSent\n                                    });\n                                    $('body').trigger('processStop');\n                                }\n                            });\n                        }\n                        return false;\n                    }\n                });\n            }\n        });\n\n    return $.mage.sellerLayoutContact;\n});","Webkul_Marketplace/js/account/seller-profile-contact.js":"/**\n * Webkul Software.\n *\n * @category  Webkul\n * @package   Webkul_Marketplace\n * @author    Webkul Software Private Limited\n * @copyright Webkul Software Private Limited (https://webkul.com)\n * @license   https://store.webkul.com/license.html\n */\ndefine([\n    'jquery',\n    'jquery/ui'\n    ], function($){\n        $.widget('mage.sellerProfileContact', {\n            options: {\n            },\n            /**\n             * Widget initialization\n             * @private\n             */\n             _create: function() {\n                self = this;\n                var askDataForm = $('#ask-form');\n                askDataForm.mage('validation', {});\n\n                $('body').append($('#wk-mp-ask-data'));\n                $('.askque').click(function() {\n                    $('#ask-form input,#ask-form textarea').removeClass('mage-error');\n                    $('.page-wrapper').css('opacity','0.4');\n                    $('.wk-mp-model-popup').addClass('_show');\n                    $('#wk-mp-ask-data').show();\n                });\n                $(\".write-review\").click(function() {\n                    $('html,body').animate({\n                        scrollTop: $(\"#customer-reviews\").offset().top},\n                        'slow');\n                });\n                $('.wk-close').click(function() {\n                    $('.page-wrapper').css('opacity','1');\n                    $('#resetbtn').trigger('click');\n                    $('#wk-mp-ask-data').hide();\n                    $('#ask-form .validation-failed').each(function() {\n                        $(this).removeClass('validation-failed');\n                    });\n                    $('#ask-form .validation-advice').each(function() {\n                        $(this).remove();\n                    });\n                });\n                $('#askbtn').click(function() {\n                    if (askDataForm.valid()!=false) {\n                        var thisthis = $(this);\n                        if (thisthis.hasClass(\"clickask\")) {\n                            if (self.options.captchenable) {\n                                var total = parseInt($('#wk-mp-captchalable1').text()) + \n                                parseInt($('#wk-mp-captchalable2').text());\n                                var wk_mp_captcha = $('#wk-mp-captcha').val();\n                                if (total != wk_mp_captcha) {\n                                    $('#wk-mp-captchalable1').text(Math.floor((Math.random()*10)+1));\n                                    $('#wk-mp-captchalable2').text(Math.floor((Math.random()*100)+1));\n                                    $('#wk-mp-captcha').val('');\n                                    $('#wk-mp-captcha').addClass('mage-error');\n                                    $(this).addClass('mage-error');\n                                    $('#ask_form .errormail').text(self.options.wrongNumber)\n                                    .slideDown('slow').delay(2000).slideUp('slow');\n                                } else {\n                                    thisthis.removeClass('clickask');\n                                    $('#wk-mp-ask-data').addClass('mail-procss');\n                                    $.ajax({\n                                        url: self.options.mailUrl,\n                                        data:$('#ask-form').serialize(),\n                                        type:'post',\n                                        dataType:'json',\n                                        success:function(d) {\n                                            thisthis.addClass('clickask');\n                                            $('#wk-mp-ask-data').removeClass('mail-procss')\n                                            alert(self.options.mailSent);\n                                            $('.wk-close,#resetbtn').trigger('click');\n                                        }\n                                    });\n                                }\n                            } else {\n                                thisthis.removeClass('clickask');\n                                    $('#wk-mp-ask-data').addClass('mail-procss');\n                                    $.ajax({\n                                        url: self.options.mailUrl,\n                                        data:$('#ask-form').serialize(),\n                                        type:'post',\n                                        dataType:'json',\n                                        success:function(d) {\n                                            thisthis.addClass('clickask');\n                                            $('#wk-mp-ask-data').removeClass('mail-procss')\n                                            alert(self.options.mailSent);\n                                            $('.wk-close,#resetbtn').trigger('click');\n                                        }\n                                    });\n                                }\n                        }\n                        return false;\n                    }\n                });\n\n            }\n        });\n    return $.mage.sellerProfileContact;\n});","Webkul_Marketplace/js/account/seller-profile-report.js":"/**\n * Webkul Software.\n *\n * @category  Webkul\n * @package   Webkul_Marketplace\n * @author    Webkul Software Private Limited\n * @copyright Webkul Software Private Limited (https://webkul.com)\n * @license   https://store.webkul.com/license.html\n */\ndefine([\n    \"jquery\",\n    \"Magento_Ui/js/modal/alert\",\n    \"mage/mage\"\n    ], function($, alert){\n        $.widget('mage.sellerProfileReport', {\n            options: {\n            },\n            /**\n             * Widget initialization\n             * @private\n             */\n             _create: function() {\n                var self = this;\n                var flagDataForm = $('#flag-form');\n                flagDataForm.mage('validation', {});\n                $('body').append($('#wk-mp-flag-data'));\n                $('.read-more').click(function() {\n                    $(\"#tab-label-marketplace_sellerprofile_tab-title\").click();\n                });\n                $('#reportflag').click(function() {\n                    $('#flag-form input,#flag-form textarea').removeClass('mage-error');\n                    $('.page-wrapper').css('opacity','0.4');\n                    $('.wk-mp-model-flag-popup').addClass('_show');\n                    $('#wk-mp-flag-data').show();\n                });\n                $('.wk-seller-flag-close').click(function() {\n                    $('.page-wrapper').css('opacity','1');\n                    $('#resetflagbtn').trigger('click');\n                    $('#wk-mp-flag-data').hide();\n                    $('#flag-form .validation-failed').each(function() {\n                        $(this).removeClass('validation-failed');\n                    });\n                    $('#flag-form .validation-advice').each(function() {\n                        $(this).remove();\n                    });\n                });\n                $('.flag-reason').on('change',function(e) {\n                if($(this).val() == \"other_value\") {\n                    $('.wk-flag-other-reason').show();\n                    $('.wk-flag-other-reason').addClass('required-entry');\n                } else {\n                    $('.wk-flag-other-reason').hide();\n                    $('.wk-flag-other-reason').removeClass('required-entry');\n                }\n                });\n                $('#resetflagbtn').on('click', function(e) {\n                $('.wk-flag-other-reason').show();\n                $('.wk-flag-other-reason').addClass('required-entry');\n                });\n                $('#flagbtn').click(function() {\n                    if (flagDataForm.valid()!=false) {\n                        var thisthis = $(this);\n                        if (thisthis.hasClass(\"clickflag\")) {\n                            thisthis.removeClass('clickflag');\n                            $('#wk-mp-flag-data').addClass('mail-procss');\n                            $.ajax({\n                                url: self.options.sellerReportUrl,\n                                data:$('#flag-form').serialize(),\n                                type:'post',\n                                dataType:'json',\n                                success:function(content) {\n                                    var messageContent = $('.wk-alert-modal-content').html();\n                                    thisthis.addClass('clickflag');\n                                    $('#wk-mp-flag-data').removeClass('mail-procss')\n                                    alert({\n                                        title: $.mage.__('Report Seller'),\n                                        content: $('.wk-flag-status-content'),\n                                        actions: {\n                                            always: function(){\n                                                $('.wk-seller-flag-close,#resetflagbtn').trigger('click');\n                                                $('.wk-flag-other-reason').show();\n                                                $('.wk-flag-other-reason').addClass('required-entry');\n                                            }\n                                        },\n                                        buttons: [{\n                                            text: $.mage.__('Close'),\n                                            class: 'action primary close',\n                                            click: function () {\n                                                this.closeModal(true);\n                                            }\n                                        }]\n                                    });\n                                    $('.wk-alert-modal-content').append(messageContent);\n                                }\n                            });\n                        }\n                        return false;\n                    }\n                });\n\n            }\n        });\n\n    return $.mage.sellerProfileReport;\n});","Webkul_Marketplace/js/account/verify-seller-shop.js":"/**\n * Webkul Software.\n *\n * @category  Webkul\n * @package   Webkul_Marketplace\n * @author    Webkul Software Private Limited\n * @copyright Webkul Software Private Limited (https://webkul.com)\n * @license   https://store.webkul.com/license.html\n */\n/*jshint jquery:true*/\ndefine([\n    \"jquery\",\n    'mage/translate',\n    'mage/template',\n    'Magento_Ui/js/modal/alert',\n    \"jquery/ui\"\n], function ($, $t, mageTemplate, alert) {\n    'use strict';\n    $.widget('mage.verifySellerShop', {\n        options: {\n            backUrl: '',\n            shopUrl: '[data-role=\"shop-url\"]',\n            becomeSellerBoxWrapper: '[data-role=\"wk-mp-become-seller-box-wrapper\"]',\n            available: '.available',\n            unavailable: '.unavailable',\n            emailAddress: '#email_address',\n            wantSellerDiv: '#wantptr',\n            wantSellerTemplate: '#wantptr-template',\n            profileurlClass: '.profileurl',\n            wantpartnerClass: '.wantpartner',\n            pageLoader: '#wk-load',\n            shopLabel: $t('Shop URL'),\n            shopTitle: $t(' Shop URL For Your Marketplace Shop '),\n            shopText: $t(' (This will be used to display your public profile) ')\n        },\n        _create: function () {\n            var self = this;\n            $(self.options.emailAddress).parents('div.field').after($(self.options.wantSellerDiv));\n            $(self.options.wantSellerDiv).show();\n            $(self.options.wantpartnerClass).on('change', function () {\n                self.callAppendShopBlockFunction(this.element, $(this).val());\n            });\n            $(this.element).delegate(self.options.shopUrl, 'keyup', function () {\n                var shopUrlVal = $(this).val();\n                $(self.options.shopUrl).val(shopUrlVal.replace(/[^a-z^A-Z^0-9\\.\\-]/g,''));\n            });\n            $(this.element).delegate(self.options.shopUrl, 'change', function () {\n                self.callAjaxFunction();\n            });\n        },\n        callAppendShopBlockFunction: function (parentelem, elem) {\n            var self = this;\n            if (elem==1) {\n                $(self.options.pageLoader).parents(parentelem)\n                .find('button.submit').addClass('disabled');\n                var progressTmpl = mageTemplate(self.options.wantSellerTemplate),\n                          tmpl;\n                tmpl = progressTmpl({\n                    data: {\n                        label: self.options.shopLabel,\n                        src: self.options.loaderImage,\n                        title: self.options.shopTitle,\n                        text: self.options.shopText\n                    }\n                });\n                $(self.options.wantSellerDiv).after(tmpl);\n            } else {\n                $(self.options.pageLoader).parents(parentelem)\n                .find('button.submit').removeClass('disabled');\n                $(self.options.profileurlClass).remove();\n            }\n        },\n        callAjaxFunction: function () {\n            var self = this;\n            $(self.options.button).addClass('disabled');\n            var shopUrlVal = $(self.options.shopUrl).val();\n            $(self.options.available).remove();\n            $(self.options.unavailable).remove();\n            if (shopUrlVal) {\n                $(self.options.pageLoader).removeClass('no-display');\n                $.ajax({\n                    type: \"POST\",\n                    url: self.options.ajaxSaveUrl,\n                    data: {\n                        profileurl: shopUrlVal\n                    },\n                    success: function (response) {\n                        $(self.options.pageLoader).addClass('no-display');\n                        if (response===0) {\n                            $(self.options.button).removeClass('disabled');\n                            $(self.options.becomeSellerBoxWrapper).append(\n                                $('<div></div>').addClass('available message success')\n                                .text(self.options.successMessage)\n                            );\n                        } else {\n                            $(self.options.button).addClass('disabled');\n                            $(self.options.shopUrl).val('');\n                            $(self.options.becomeSellerBoxWrapper).append(\n                                $('<div></div>').addClass('available message error')\n                                .text(self.options.errorMessage)\n                            );\n                        }\n                    },\n                    error: function (response) {\n                        alert({\n                            content: $t('There was error during verifying seller shop data')\n                        });\n                    }\n                });\n            }\n        }\n    });\n    return $.mage.verifySellerShop;\n});\n","Webkul_Marketplace/js/components/associated-product-insert-listing.js":"/**\n * Webkul Software.\n *\n * @category  Webkul\n * @package   Webkul_Marketplace\n * @author    Webkul Software Private Limited\n * @copyright Webkul Software Private Limited (https://webkul.com)\n * @license   https://store.webkul.com/license.html\n */\ndefine([\n    'underscore',\n    'Magento_Ui/js/form/components/insert-listing'\n], function (_, insertListing) {\n    'use strict';\n\n    return insertListing.extend({\n        defaults: {\n            gridInitialized: false,\n            paramsUpdated: false,\n            showMassActionColumn: true,\n            currentProductId: 0,\n            dataScopeAssociatedProduct: 'data.associated_product_ids',\n            typeGrid: '',\n            product: {},\n            rowIndexForChange: undefined,\n            changeProductData: [],\n            modules: {\n                productsProvider: '${ $.productsProvider }',\n                productsColumns: '${ $.productsColumns }',\n                productsMassAction: '${ $.productsMassAction }',\n                modalWithGrid: '${ $.modalWithGrid }',\n                productsFilters: '${ $.productsFilters }'\n            },\n            exports: {\n                externalProviderParams: '${ $.externalProvider }:params'\n            },\n            links: {\n                changeProductData: '${ $.provider }:${ $.changeProductProvider }'\n            },\n            listens: {\n                '${ $.externalProvider }:params': '_setFilters _setVisibilityMassActionColumn',\n                '${ $.productsProvider }:data': '_handleManualGridOpening',\n                '${ $.productsMassAction }:selected': '_handleManualGridSelect'\n            }\n        },\n\n        /**\n         * Initialize observables.\n         *\n         * @returns {Object} Chainable.\n         */\n        initObservable: function () {\n            this._super().observe(\n                'changeProductData'\n            );\n\n            return this;\n        },\n\n        /**\n         * Get ids of used products.\n         *\n         * @returns {Array}\n         */\n        getUsedProductIds: function () {\n            var usedProductsIds = this.source.get(this.dataScopeAssociatedProduct);\n\n            return usedProductsIds.slice();\n        },\n\n        /**\n         * Request for render content.\n         *\n         * @returns {Object}\n         */\n        doRender: function (showMassActionColumn, typeGrid) {\n            this.typeGrid = typeGrid;\n            this.showMassActionColumn = showMassActionColumn;\n\n            if (this.gridInitialized) {\n                this.paramsUpdated = false;\n                this.productsFilters().clear();\n                this._setFilters(this.externalProviderParams);\n                this._setVisibilityMassActionColumn();\n            }\n\n            return this.render();\n        },\n\n        /**\n         * Show grid with assigned product.\n         *\n         * @returns {Object}\n         */\n        showGridAssignProduct: function () {\n            this.product = {};\n            this.rowIndexForChange = undefined;\n\n            return this.doRender(true, 'assignProduct');\n        },\n\n        /**\n         * Show grid with changed product.\n         *\n         * @param {String} rowIndex\n         * @param {String} product\n         */\n        showGridChangeProduct: function (rowIndex, product) {\n            this.rowIndexForChange = rowIndex;\n            this.product = product;\n            this.doRender(false, 'changeProduct');\n        },\n\n        /**\n         * Select product.\n         *\n         * @param {String} rowIndex\n         */\n        selectProduct: function (rowIndex) {\n            this.changeProductData({\n                rowIndex: this.rowIndexForChange,\n                product: this.productsProvider().data.items[rowIndex]\n            });\n            this.modalWithGrid().closeModal();\n        },\n\n        /**\n         * Set visibility state for mass action column\n         *\n         * @private\n         */\n        _setVisibilityMassActionColumn: function () {\n            this.productsMassAction(function (massActionComponent) {\n                this.productsColumns().elems().each(function (rowElement) {\n                    rowElement.disableAction = this.showMassActionColumn;\n                }, this);\n                massActionComponent.visible = this.showMassActionColumn;\n            }.bind(this));\n        },\n\n        /**\n         * Set filters.\n         *\n         * @param {Object} params\n         * @private\n         */\n        _setFilters: function (params) {\n            var filterModifier = {},\n                attrCodes,\n                usedProductIds,\n                attributes;\n\n            params = _.omit(params);\n\n            if (!this.paramsUpdated) {\n                this.gridInitialized = true;\n                this.paramsUpdated = true;\n\n                attrCodes = this._getAttributesCodes();\n                usedProductIds = this.getUsedProductIds();\n\n                if (this.currentProductId) {\n                    usedProductIds.push(this.currentProductId);\n                }\n\n                filterModifier['entity_id'] = {\n                    'condition_type': 'nin', value: usedProductIds\n                };\n                attrCodes.each(function (code) {\n                    filterModifier[code] = {\n                        'condition_type': 'notnull'\n                    };\n                });\n\n                if (this.typeGrid === 'changeProduct') {\n                    attributes = JSON.parse(this.product.attributes);\n\n                    filterModifier = _.extend(filterModifier, _.mapObject(attributes, function (value) {\n                        return {\n                            'condition_type': 'eq',\n                            'value': value\n                        };\n                    }));\n\n                    params.filters = attributes;\n                } else {\n                    params.filters = {};\n                }\n\n                params['attributes_codes'] = attrCodes;\n\n                this.set('externalProviderParams', params);\n                this.set('externalFiltersModifier', filterModifier);\n            }\n        },\n\n        /**\n         * Get attribute codes.\n         *\n         * @returns {Array}\n         * @private\n         */\n        _getAttributesCodes: function () {\n            var attrCodes = this.source.get('data.attribute_codes');\n\n            return attrCodes ? attrCodes : [];\n        },\n\n        /**\n         * Get product variations.\n         *\n         * @returns {Array}\n         * @private\n         */\n        _getProductVariations: function () {\n            var matrix = this.source.get('data.configurable-matrix');\n\n            return matrix ? matrix : [];\n        },\n\n        /**\n         * Handle manual grid after opening\n         * @private\n         */\n        _handleManualGridOpening: function (data) {\n            if (data.items.length && this.typeGrid === 'assignProduct') {\n                this.productsColumns().elems().each(function (rowElement) {\n                    rowElement.disableAction = true;\n                });\n\n                this._disableRows(data.items);\n            }\n        },\n\n        /**\n         * Handle manual selection.\n         *\n         * @param {Array} selected\n         * @private\n         */\n        _handleManualGridSelect: function (selected) {\n            var selectedRows,\n                selectedVariationKeys;\n\n            if (this.typeGrid === 'assignProduct') {\n                selectedRows = _.filter(this.productsProvider().data.items, function (row) {\n                    return selected.indexOf(row['entity_id']) !== -1;\n                });\n                selectedVariationKeys = _.values(this._getVariationKeyMap(selectedRows));\n                this._disableRows(this.productsProvider().data.items, selectedVariationKeys, selected);\n            }\n        },\n\n        /**\n         * Disable rows in grid for products with the same variation key\n         *\n         * @param {Array} items\n         * @param {Array} selectedVariationKeys\n         * @param {Array} selected\n         * @private\n         */\n        _disableRows: function (items, selectedVariationKeys, selected) {\n            selectedVariationKeys = selectedVariationKeys === undefined ? [] : selectedVariationKeys;\n            selected = selected === undefined ? [] : selected;\n            this.productsMassAction(function (massaction) {\n                var configurableVariationKeys = _.union(\n                    selectedVariationKeys,\n                    _.pluck(this._getProductVariations(), 'variationKey')\n                ),\n                    variationKeyMap = this._getVariationKeyMap(items),\n                    rowsForDisable = _.keys(_.pick(\n                        variationKeyMap,\n                        function (variationKey) {\n                            return configurableVariationKeys.indexOf(variationKey) !== -1;\n                        }\n                    ));\n\n                massaction.disabled(_.difference(rowsForDisable, selected));\n            }.bind(this));\n        },\n\n        /**\n         * Get variation key map used in manual grid.\n         *\n         * @param {Array} items\n         * @returns {Array} [{entity_id: variation-key}, ...]\n         * @private\n         */\n        _getVariationKeyMap: function (items) {\n            var variationKeyMap = {};\n\n            _.each(items, function (row) {\n                variationKeyMap[row['entity_id']] = _.values(\n                    _.pick(row, this._getAttributesCodes())\n                ).sort().join('-');\n\n            }, this);\n\n            return variationKeyMap;\n        }\n    });\n});\n","Webkul_Marketplace/js/components/container-configurable-handler.js":"/**\n * Webkul Software.\n *\n * @category  Webkul\n * @package   Webkul_Marketplace\n * @author    Webkul Software Private Limited\n * @copyright Webkul Software Private Limited (https://webkul.com)\n * @license   https://store.webkul.com/license.html\n */\ndefine([\n    'uiComponent'\n], function (Element) {\n    'use strict';\n\n    return Element.extend({\n        defaults: {\n            listens: {\n                '${ $.provider }:data.is_downloadable': 'handleProductType'\n            },\n            links: {\n                isDownloadable: '${ $.provider }:data.is_downloadable'\n            },\n            modules: {\n                createConfigurableButton: '${$.createConfigurableButton}'\n            }\n        },\n\n        /**\n         * Invokes initialize method of parent class,\n         * contains initialization logic\n         */\n        initialize: function () {\n            this._super();\n            this.handleProductType(this.isDownloadable);\n\n            return this;\n        },\n\n        /**\n         * Calls 'initObservable' of parent\n         *\n         * @returns {Object} Chainable.\n         */\n        initObservable: function () {\n            this._super()\n                .observe(['content']);\n\n            return this;\n        },\n\n        /**\n         * Change content for container and visibility for button\n         *\n         * @param {String} isDownloadable\n         */\n        handleProductType: function (isDownloadable) {\n            if (isDownloadable === '1') {\n                this.content(this.content2);\n\n                if (this.createConfigurableButton()) {\n                    this.createConfigurableButton().visible(false);\n                }\n            } else {\n                this.content(this.content1);\n\n                if (this.createConfigurableButton()) {\n                    this.createConfigurableButton().visible(true);\n                }\n            }\n        }\n    });\n});\n","Webkul_Marketplace/js/components/custom-options-price-type.js":"/**\n * Webkul Software.\n *\n * @category  Webkul\n * @package   Webkul_Marketplace\n * @author    Webkul Software Private Limited\n * @copyright Webkul Software Private Limited (https://webkul.com)\n * @license   https://store.webkul.com/license.html\n */\ndefine([\n    'underscore',\n    'Magento_Ui/js/form/element/select'\n], function (_, Select) {\n    'use strict';\n\n    return Select.extend({\n        defaults: {\n            isConfigurable: false,\n            isFiltered: null,\n            defaultOptions: null,\n            filteredOptions: null,\n            bannedOptions: []\n        },\n\n        /**\n         * Updates options.\n         *\n         * @param {Boolean} variationsEmpty\n         * @returns {Boolean}\n         */\n        updateOptions: function (variationsEmpty) {\n            var isFiltered = this.isConfigurable || !variationsEmpty,\n                value;\n\n            if (this.isFiltered !== isFiltered) {\n                value = this.value();\n\n                this.options(isFiltered ? this.getFilteredOptions() : this.getDefaultOptions());\n                this.value(value);\n            }\n\n            return isFiltered;\n        },\n\n        /**\n         * Get default list of options.\n         *\n         * @returns {Array}\n         */\n        getDefaultOptions: function () {\n            if (this.defaultOptions === null) {\n                this.defaultOptions = this.options();\n            }\n\n            return this.defaultOptions;\n        },\n\n        /**\n         * Get filtered list of options.\n         *\n         * @returns {Array}\n         */\n        getFilteredOptions: function () {\n            var defaultOptions;\n\n            if (this.filteredOptions === null) {\n                defaultOptions = this.getDefaultOptions();\n                this.filteredOptions = [];\n\n                _.each(defaultOptions, function (option) {\n                    if (this.bannedOptions.indexOf(option.value) === -1) {\n                        this.filteredOptions.push(option);\n                    }\n                }, this);\n            }\n\n            return this.filteredOptions;\n        }\n    });\n});\n","Webkul_Marketplace/js/components/custom-options-warning.js":"/**\n * Webkul Software.\n *\n * @category  Webkul\n * @package   Webkul_Marketplace\n * @author    Webkul Software Private Limited\n * @copyright Webkul Software Private Limited (https://webkul.com)\n * @license   https://store.webkul.com/license.html\n */\ndefine([\n    'Magento_Ui/js/form/components/html'\n], function (Html) {\n    'use strict';\n\n    return Html.extend({\n        defaults: {\n            isConfigurable: false\n        },\n\n        /**\n         * Updates component visibility state.\n         *\n         * @param {Boolean} variationsEmpty\n         * @returns {Boolean}\n         */\n        updateVisibility: function (variationsEmpty) {\n            var isVisible = this.isConfigurable || !variationsEmpty;\n\n            this.visible(isVisible);\n\n            return isVisible;\n        }\n    });\n});\n","Webkul_Marketplace/js/components/dynamic-rows-configurable.js":"/**\n * Webkul Software.\n *\n * @category  Webkul\n * @package   Webkul_Marketplace\n * @author    Webkul Software Private Limited\n * @copyright Webkul Software Private Limited (https://webkul.com)\n * @license   https://store.webkul.com/license.html\n */\ndefine([\n    'underscore',\n    'uiRegistry',\n    'Magento_Ui/js/dynamic-rows/dynamic-rows'\n], function (_, registry, dynamicRows) {\n    'use strict';\n\n    return dynamicRows.extend({\n        defaults: {\n            actionsListOpened: false,\n            canEditField: 'canEdit',\n            newProductField: 'newProduct',\n            dataScopeAssociatedProduct: 'data.associated_product_ids',\n            dataProviderFromGrid: '',\n            dataProviderChangeFromGrid: '',\n            insertDataFromGrid: [],\n            changeDataFromGrid: [],\n            dataProviderFromWizard: '',\n            insertDataFromWizard: [],\n            map: null,\n            isEmpty: true,\n            isShowAddProductButton: false,\n            cacheGridData: [],\n            unionInsertData: [],\n            deleteProperty: false,\n            dataLength: 0,\n            identificationProperty: 'id',\n            'attribute_set_id': '',\n            attributesTmp: [],\n            listens: {\n                'insertDataFromGrid': 'processingInsertDataFromGrid',\n                'insertDataFromWizard': 'processingInsertDataFromWizard',\n                'unionInsertData': 'processingUnionInsertData',\n                'changeDataFromGrid': 'processingChangeDataFromGrid',\n                'isEmpty': 'changeVisibility'\n            },\n            imports: {\n                'attribute_set_id': '${$.provider}:data.product.attribute_set_id'\n            },\n            'exports': {\n                'attribute_set_id': '${$.provider}:data.new-variations-attribute-set-id'\n            },\n            modules: {\n                modalWithGrid: '${ $.modalWithGrid }',\n                gridWithProducts: '${ $.gridWithProducts}'\n            }\n        },\n\n        /**\n         * Invokes initialize method of parent class,\n         * contains initialization logic\n         */\n        initialize: function () {\n            this._super()\n                .changeVisibility(this.isEmpty());\n\n            return this;\n        },\n\n        /**\n         * Change visibility\n         *\n         * When isEmpty = true, then visbible = false\n         *\n         * @param {Boolean} isEmpty\n         */\n        changeVisibility: function (isEmpty) {\n            this.visible(!isEmpty);\n        },\n\n        /**\n         * Open modal with grid.\n         *\n         * @param {String} rowIndex\n         */\n        openModalWithGrid: function (rowIndex) {\n            var productSource = this.source.get(this.dataScope + '.' + this.index + '.' + rowIndex),\n                product = {\n                    'id': productSource.id,\n                    'attributes': productSource['configurable_attribute']\n                };\n\n            this.modalWithGrid().openModal();\n            this.gridWithProducts().showGridChangeProduct(rowIndex, product);\n        },\n\n        /**\n         * Initialize children\n         *\n         * @returns {Object} Chainable.\n         */\n        initChildren: function () {\n            var tmpArray = [];\n\n            this.recordData.each(function (recordData) {\n                tmpArray.push(recordData);\n            }, this);\n\n            this.unionInsertData(tmpArray);\n\n            return this;\n        },\n\n        /**\n         * Delete record\n         *\n         * @param {Number} index - row index\n         */\n        deleteRecord: function (index) {\n            var tmpArray,\n                lastRecord;\n\n            this.reRender = false;\n            tmpArray = this.getUnionInsertData();\n            tmpArray.splice(index, 1);\n\n            if (!tmpArray.length) {\n                this.attributesTmp = this.source.get('data.attributes');\n                this.source.set('data.attributes', []);\n                this.cacheGridData = [];\n            }\n\n            if (parseInt(this.currentPage(), 10) === this.pages()) {\n                lastRecord =\n                    _.findWhere(this.elems(), {\n                        index: this.startIndex + this.getChildItems().length - 1\n                    }) ||\n                    _.findWhere(this.elems(), {\n                        index: (this.startIndex + this.getChildItems().length - 1).toString()\n                    });\n\n                lastRecord.destroy();\n            }\n\n            this.unionInsertData(tmpArray);\n\n            if (this.pages() < parseInt(this.currentPage(), 10)) {\n                this.currentPage(this.pages());\n            }\n\n            this.reRender = true;\n            this.showSpinner(false);\n        },\n\n        /**\n         * Generate associated products\n         */\n        generateAssociatedProducts: function () {\n            var productsIds = [];\n\n            this.getUnionInsertData().forEach(function (data) {\n                if (data.id !== null) {\n                    productsIds.push(data.id);\n                }\n            });\n\n            this.source.set(this.dataScopeAssociatedProduct, productsIds);\n        },\n\n        /**\n         * Calls 'initObservable' of parent\n         *\n         * @returns {Object} Chainable.\n         */\n        initObservable: function () {\n            this._super()\n                .observe([\n                    'insertDataFromGrid', 'unionInsertData', 'isEmpty', 'isShowAddProductButton', 'actionsListOpened'\n                ]);\n\n            return this;\n        },\n\n        /**\n         * Get union insert data from source\n         *\n         * @returns {Array}\n         */\n        getUnionInsertData: function () {\n            var source = this.source.get(this.dataScope + '.' + this.index),\n                result = [];\n\n            _.each(source, function (data) {\n                result.push(data);\n            });\n\n            return result;\n        },\n\n        /**\n         * Process union insert data.\n         *\n         * @param {Array} data\n         */\n        processingUnionInsertData: function (data) {\n            var dataCount,\n                elemsCount,\n                tmpData,\n                path,\n                attributeCodes = this.source.get('data.attribute_codes');\n\n            this.isEmpty(data.length === 0);\n            this.isShowAddProductButton(\n                (!attributeCodes || data.length > 0 ? data.length : attributeCodes.length) > 0\n            );\n\n            tmpData = data.slice(\n                this.pageSize * (this.currentPage() - 1),\n                this.pageSize * (this.currentPage() - 1) + this.pageSize\n            );\n\n            this.source.set(this.dataScope + '.' + this.index, []);\n\n            _.each(tmpData, function (row, index) {\n                path = this.dataScope + '.' + this.index + '.' + (this.startIndex + index);\n                this.source.set(path, row);\n            }, this);\n\n            this.source.set(this.dataScope + '.' + this.index, data);\n            this.parsePagesData(data);\n\n            // Render\n            dataCount = data.length;\n            elemsCount = this.elems().length;\n\n            if (dataCount > elemsCount) {\n                this.getChildItems().each(function (elemData, index) {\n                    this.addChild(elemData, this.startIndex + index);\n                }, this);\n            } else {\n                for (elemsCount; elemsCount > dataCount; elemsCount--) {\n                    this.elems()[elemsCount - 1].destroy();\n                }\n            }\n\n            this.generateAssociatedProducts();\n        },\n\n        /**\n         * Parsed data\n         *\n         * @param {Array} data - array with data\n         * about selected records\n         */\n        processingInsertDataFromGrid: function (data) {\n            var changes,\n                tmpArray;\n\n            if (!data.length) {\n                return;\n            }\n\n            tmpArray = this.getUnionInsertData();\n\n            changes = this._checkGridData(data);\n            this.cacheGridData = data;\n\n            changes.each(function (changedObject) {\n                var mappedData = this.mappingValue(changedObject);\n\n                mappedData[this.canEditField] = 0;\n                mappedData[this.newProductField] = 0;\n                mappedData.variationKey = this._getVariationKey(changedObject);\n                mappedData['configurable_attribute'] = this._getConfigurableAttribute(changedObject);\n                tmpArray.push(mappedData);\n            }, this);\n\n            // Attributes cannot be changed before regeneration thought wizard\n            if (!this.source.get('data.attributes').length) {\n                this.source.set('data.attributes', this.attributesTmp);\n            }\n            this.unionInsertData(tmpArray);\n        },\n\n        /**\n         * Process changes from grid.\n         *\n         * @param {Object} data\n         */\n        processingChangeDataFromGrid: function (data) {\n            var tmpArray = this.getUnionInsertData(),\n                mappedData = this.mappingValue(data.product);\n\n            mappedData[this.canEditField] = 0;\n            mappedData[this.newProductField] = 0;\n            mappedData.variationKey = this._getVariationKey(data.product);\n            mappedData['configurable_attribute'] = this._getConfigurableAttribute(data.product);\n            tmpArray[data.rowIndex] = mappedData;\n\n            this.unionInsertData(tmpArray);\n        },\n\n        /**\n         * Get variation key.\n         *\n         * @param {Object} data\n         * @returns {String}\n         * @private\n         */\n        _getVariationKey: function (data) {\n            var attrCodes = this.source.get('data.attribute_codes'),\n                key = [];\n\n            attrCodes.each(function (code) {\n                key.push(data[code]);\n            });\n\n            return key.sort().join('-');\n        },\n\n        /**\n         * Get configurable attribute.\n         *\n         * @param {Object} data\n         * @returns {String}\n         * @private\n         */\n        _getConfigurableAttribute: function (data) {\n            var attrCodes = this.source.get('data.attribute_codes'),\n                confAttrs = {};\n\n            attrCodes.each(function (code) {\n                confAttrs[code] = data[code];\n            });\n\n            return JSON.stringify(confAttrs);\n        },\n\n        /**\n         * Process data insertion from wizard\n         *\n         * @param {Object} data\n         */\n        processingInsertDataFromWizard: function (data) {\n            var tmpArray = this.getUnionInsertData(),\n                productIdsToDelete = this.source.get(this.dataScopeAssociatedProduct),\n                index,\n                product = {};\n\n            tmpArray = this.unsetArrayItem(\n                tmpArray,\n                {\n                    id: null\n                }\n            );\n\n            _.each(data, function (row) {\n                var attributesText;\n\n                if (row.productId) {\n                    index = _.indexOf(productIdsToDelete, row.productId);\n\n                    if (index > -1) {\n                        productIdsToDelete.splice(index, 1);\n                        tmpArray = this.unsetArrayItem(\n                            tmpArray,\n                            {\n                                id: row.productId\n                            }\n                        );\n                    }\n                }\n\n                attributesText = '';\n                _.each(row.options, function (attribute) {\n                    if (attributesText) {\n                        attributesText += ', ';\n                    }\n                    attributesText += attribute['attribute_label'] + ': ' + attribute.label;\n                }, this);\n\n                product = {\n                    'id': row.productId,\n                    'product_link': row.productUrl,\n                    'name': row.name,\n                    'sku': row.sku,\n                    'status': row.status,\n                    'price': row.price,\n                    'price_currency': row.priceCurrency,\n                    'price_string': row.priceCurrency + row.price,\n                    'weight': row.weight,\n                    'qty': row.quantity,\n                    'variationKey': row.variationKey,\n                    'configurable_attribute': row.attribute,\n                    'thumbnail_image': row.images.preview,\n                    'media_gallery': row['media_gallery'],\n                    'swatch_image': row['swatch_image'],\n                    'small_image': row['small_image'],\n                    image: row.image,\n                    'thumbnail': row.thumbnail,\n                    'attributes': attributesText\n                };\n                product[this.canEditField] = row.editable;\n                product[this.newProductField] = row.newProduct;\n\n                tmpArray.push(product);\n            }, this);\n\n            _.each(productIdsToDelete, function (id) {\n                tmpArray = this.unsetArrayItem(\n                    tmpArray,\n                    {\n                        id: id\n                    }\n                );\n            }, this);\n\n            this.unionInsertData(tmpArray);\n        },\n\n        /**\n         * Remove array items matching condition.\n         *\n         * @param {Array} data\n         * @param {Object} condition\n         * @returns {Array}\n         */\n        unsetArrayItem: function (data, condition) {\n            var objs = _.where(data, condition);\n\n            _.each(objs, function (obj) {\n                var index = _.indexOf(data, obj);\n\n                if (index > -1) {\n                    data.splice(index, 1);\n                }\n            });\n\n            return data;\n        },\n\n        /**\n         * Check changed records\n         *\n         * @param {Array} data - array with records data\n         * @returns {Array} Changed records\n         */\n        _checkGridData: function (data) {\n            var cacheLength = this.cacheGridData.length,\n                curData = data.length,\n                max = cacheLength > curData ? this.cacheGridData : data,\n                changes = [],\n                obj = {};\n\n            max.each(function (record, index) {\n                obj[this.map.id] = record[this.map.id];\n\n                if (!_.where(this.cacheGridData, obj).length) {\n                    changes.push(data[index]);\n                }\n            }, this);\n\n            return changes;\n        },\n\n        /**\n         * Mapped value\n         */\n        mappingValue: function (data) {\n            var result = {};\n\n            _.each(this.map, function (prop, index) {\n                result[index] = data[prop];\n            });\n\n            return result;\n        },\n\n        /**\n         * Toggle actions list.\n         *\n         * @param {Number} rowIndex\n         * @returns {Object} Chainable.\n         */\n        toggleActionsList: function (rowIndex) {\n            var state = false;\n\n            if (rowIndex !== this.actionsListOpened()) {\n                state = rowIndex;\n            }\n            this.actionsListOpened(state);\n\n            return this;\n        },\n\n        /**\n         * Close action list.\n         *\n         * @param {Number} rowIndex\n         * @returns {Object} Chainable\n         */\n        closeList: function (rowIndex) {\n            if (this.actionsListOpened() === rowIndex) {\n                this.actionsListOpened(false);\n            }\n\n            return this;\n        },\n\n        /**\n         * Toggle product status.\n         *\n         * @param {Number} rowIndex\n         */\n        toggleStatusProduct: function (rowIndex) {\n            var tmpArray = this.getUnionInsertData(),\n                status = parseInt(tmpArray[rowIndex].status, 10);\n\n            if (status === 1) {\n                tmpArray[rowIndex].status = 2;\n            } else {\n                tmpArray[rowIndex].status = 1;\n            }\n\n            this.unionInsertData(tmpArray);\n        }\n    });\n});\n","Webkul_Marketplace/js/components/file-uploader.js":"/**\n * Webkul Software.\n *\n * @category  Webkul\n * @package   Webkul_Marketplace\n * @author    Webkul Software Private Limited\n * @copyright Webkul Software Private Limited (https://webkul.com)\n * @license   https://store.webkul.com/license.html\n */\ndefine([\n    'Magento_Ui/js/form/element/file-uploader',\n    'underscore'\n], function (Element, _) {\n    'use strict';\n\n    return Element.extend({\n        processedFile: {},\n        actionsListOpened: false,\n        thumbnailUrl: '',\n        thumbnail: null,\n        smallImage: null,\n        defaults: {\n            fileInputName: ''\n        },\n\n        /**\n         * Initialize observables.\n         *\n         * @returns {Object} Chainable.\n         */\n        initObservable: function () {\n            this._super().observe(['processedFile', 'actionsListOpened', 'thumbnailUrl', 'thumbnail', 'smallImage']);\n\n            return this;\n        },\n\n        /** @inheritdoc */\n        setInitialValue: function () {\n            var value = this.getInitialValue();\n\n            if (!_.isString(value)) {\n                this._super();\n            }\n\n            return this;\n        },\n\n        /**\n         * Adds provided file to the files list.\n         *\n         * @param {Object} file\n         * @returns {Object} Chainable.\n         */\n        addFile: function (file) {\n            this.processedFile(this.processFile(file));\n\n            this.value(this.processedFile().file);\n\n            return this;\n        },\n\n        /**\n         * Toggle actions list.\n         *\n         * @returns {Object} Chainable.\n         */\n        toggleActionsList: function () {\n            if (this.actionsListOpened()) {\n                this.actionsListOpened(false);\n            } else {\n                this.actionsListOpened(true);\n            }\n\n            return this;\n        },\n\n        /**\n         * Close action list.\n         *\n         * @returns {Object} Chainable\n         */\n        closeList: function () {\n            if (this.actionsListOpened()) {\n                this.actionsListOpened(false);\n            }\n\n            return this;\n        },\n\n        /**\n         * Delete Image\n         *\n         * @returns {Object} Chainable\n         */\n        deleteImage: function () {\n            this.processedFile({});\n            this.value(null);\n            this.thumbnail(null);\n            this.thumbnailUrl(null);\n            this.smallImage(null);\n\n            return this;\n        }\n    });\n});\n","Webkul_Marketplace/js/components/modal-configurable.js":"/**\n * Webkul Software.\n *\n * @category  Webkul\n * @package   Webkul_Marketplace\n * @author    Webkul Software Private Limited\n * @copyright Webkul Software Private Limited (https://webkul.com)\n * @license   https://store.webkul.com/license.html\n */\ndefine([\n    'Magento_Ui/js/modal/modal-component',\n    'uiRegistry',\n    'underscore'\n], function (Modal, registry, _) {\n    'use strict';\n\n    return Modal.extend({\n        defaults: {\n            stepWizard: '',\n            modules: {\n                form: '${ $.formName }'\n            }\n        },\n\n        /**\n         * Open modal\n         */\n        openModal: function () {\n            var stepWizard = {};\n\n            this.form().validate();\n\n            if (this.form().source.get('params.invalid') === false) {\n                stepWizard = registry.get('index = ' + this.stepWizard);\n\n                if (!_.isUndefined(stepWizard)) {\n                    stepWizard.open();\n                }\n\n                this._super();\n            }\n        }\n    });\n});\n","Webkul_Marketplace/js/earning/Chart.bundle.js":"/**\n * Webkul Software.\n *\n * @category  Webkul\n * @package   Webkul_Marketplace\n * @author    Webkul Software Private Limited\n * @copyright Webkul Software Private Limited (https://webkul.com)\n * @license   https://store.webkul.com/license.html\n */\n\n(function (f) {\nif (typeof exports===\"object\" && typeof module!==\"undefined\") {\nmodule.exports=f()} else if (typeof define===\"function\" && define.amd) {\ndefine([],f)} else {\nvar g;if (typeof window!==\"undefined\") {\ng=window} else if (typeof global!==\"undefined\") {\ng=global} else if (typeof self!==\"undefined\") {\ng=self} else {\ng=this}g.Chart = f()}})(function () {\nvar define,module,exports;return (function () {\nfunction e(t,n,r)\n{\nfunction s(o,u)\n{\nif (!n[o]) {\nif (!t[o]) {\nvar a=typeof require==\"function\" && require;if (!u && a) {\nreturn a(o,!0);\n}if (i) {\nreturn i(o,!0);\n}var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function (e) {\nvar n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\" && require;for (var o=0; o<r.length; o++) {\ns(r[o]);\n}return s}return e})()({1:[function (require,module,exports) {\n\nvar colorNames = require(5);\n\nmodule.exports = {\n   getRgba: getRgba,\n   getHsla: getHsla,\n   getRgb: getRgb,\n   getHsl: getHsl,\n   getHwb: getHwb,\n   getAlpha: getAlpha,\n\n   hexString: hexString,\n   rgbString: rgbString,\n   rgbaString: rgbaString,\n   percentString: percentString,\n   percentaString: percentaString,\n   hslString: hslString,\n   hslaString: hslaString,\n   hwbString: hwbString,\n   keyword: keyword\n}\n\nfunction getRgba(string)\n{\n   if (!string) {\n      return;\n   }\n   var abbr =  /^#([a-fA-F0-9]{3})$/i,\n       hex =  /^#([a-fA-F0-9]{6})$/i,\n       rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n       per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n       keyword = /(\\w+)/;\n\n   var rgb = [0, 0, 0],\n       a = 1,\n       match = string.match(abbr);\n   if (match) {\n      match = match[1];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n   } else if (match = string.match(hex)) {\n      match = match[1];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n   } else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i + 1]);\n      }\n      a = parseFloat(match[4]);\n   } else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n      a = parseFloat(match[4]);\n   } else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n         return [0, 0, 0, 0];\n      }\n      rgb = colorNames[match[1]];\n      if (!rgb) {\n         return;\n      }\n   }\n\n   for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n   }\n   if (!a && a != 0) {\n      a = 1;\n   } else {\n      a = scale(a, 0, 1);\n   }\n   rgb[3] = a;\n   return rgb;\n}\n\nfunction getHsla(string)\n{\n   if (!string) {\n      return;\n   }\n   var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hsl);\n   if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n   }\n}\n\nfunction getHwb(string)\n{\n   if (!string) {\n      return;\n   }\n   var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hwb);\n   if (match) {\n    var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n   }\n}\n\nfunction getRgb(string)\n{\n   var rgba = getRgba(string);\n   return rgba && rgba.slice(0, 3);\n}\n\nfunction getHsl(string)\n{\n  var hsla = getHsla(string);\n  return hsla && hsla.slice(0, 3);\n}\n\nfunction getAlpha(string)\n{\n   var vals = getRgba(string);\n   if (vals) {\n      return vals[3];\n   } else if (vals = getHsla(string)) {\n      return vals[3];\n   } else if (vals = getHwb(string)) {\n      return vals[3];\n   }\n}\n\n// generators\nfunction hexString(rgb)\n{\n   return \"#\" + hexDouble(rgb[0]) + hexDouble(rgb[1])\n              + hexDouble(rgb[2]);\n}\n\nfunction rgbString(rgba, alpha)\n{\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return rgbaString(rgba, alpha);\n   }\n   return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n}\n\nfunction rgbaString(rgba, alpha)\n{\n   if (alpha === undefined) {\n      alpha = (rgba[3] !== undefined ? rgba[3] : 1);\n   }\n   return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2]\n           + \", \" + alpha + \")\";\n}\n\nfunction percentString(rgba, alpha)\n{\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return percentaString(rgba, alpha);\n   }\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n\n   return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n}\n\nfunction percentaString(rgba, alpha)\n{\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n   return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n}\n\nfunction hslString(hsla, alpha)\n{\n   if (alpha < 1 || (hsla[3] && hsla[3] < 1)) {\n      return hslaString(hsla, alpha);\n   }\n   return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n}\n\nfunction hslaString(hsla, alpha)\n{\n   if (alpha === undefined) {\n      alpha = (hsla[3] !== undefined ? hsla[3] : 1);\n   }\n   return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \"\n           + alpha + \")\";\n}\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\nfunction hwbString(hwb, alpha)\n{\n   if (alpha === undefined) {\n      alpha = (hwb[3] !== undefined ? hwb[3] : 1);\n   }\n   return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\"\n           + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n}\n\nfunction keyword(rgb)\n{\n  return reverseNames[rgb.slice(0, 3)];\n}\n\n// helpers\nfunction scale(num, min, max)\n{\n   return Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num)\n{\n  var str = num.toString(16).toUpperCase();\n  return (str.length < 2) ? \"0\" + str : str;\n}\n\n\n//create a list of reverse color names\nvar reverseNames = {};\nfor (var name in colorNames) {\n   reverseNames[colorNames[name]] = name;\n}\n\n},{\"5\":5}],2:[function (require,module,exports) {\n\nvar convert = require(4);\nvar string = require(1);\n\nvar Color = function (obj) {\n    if (obj instanceof Color) {\n        return obj;\n    }\n    if (!(this instanceof Color)) {\n        return new Color(obj);\n    }\n\n    this.valid = false;\n    this.values = {\n        rgb: [0, 0, 0],\n        hsl: [0, 0, 0],\n        hsv: [0, 0, 0],\n        hwb: [0, 0, 0],\n        cmyk: [0, 0, 0, 0],\n        alpha: 1\n    };\n\n    // parse Color() argument\n    var vals;\n    if (typeof obj === 'string') {\n        vals = string.getRgba(obj);\n        if (vals) {\n            this.setValues('rgb', vals);\n        } else if (vals = string.getHsla(obj)) {\n            this.setValues('hsl', vals);\n        } else if (vals = string.getHwb(obj)) {\n            this.setValues('hwb', vals);\n        }\n    } else if (typeof obj === 'object') {\n        vals = obj;\n        if (vals.r !== undefined || vals.red !== undefined) {\n            this.setValues('rgb', vals);\n        } else if (vals.l !== undefined || vals.lightness !== undefined) {\n            this.setValues('hsl', vals);\n        } else if (vals.v !== undefined || vals.value !== undefined) {\n            this.setValues('hsv', vals);\n        } else if (vals.w !== undefined || vals.whiteness !== undefined) {\n            this.setValues('hwb', vals);\n        } else if (vals.c !== undefined || vals.cyan !== undefined) {\n            this.setValues('cmyk', vals);\n        }\n    }\n};\n\nColor.prototype = {\n    isValid: function () {\n        return this.valid;\n    },\n    rgb: function () {\n        return this.setSpace('rgb', arguments);\n    },\n    hsl: function () {\n        return this.setSpace('hsl', arguments);\n    },\n    hsv: function () {\n        return this.setSpace('hsv', arguments);\n    },\n    hwb: function () {\n        return this.setSpace('hwb', arguments);\n    },\n    cmyk: function () {\n        return this.setSpace('cmyk', arguments);\n    },\n\n    rgbArray: function () {\n        return this.values.rgb;\n    },\n    hslArray: function () {\n        return this.values.hsl;\n    },\n    hsvArray: function () {\n        return this.values.hsv;\n    },\n    hwbArray: function () {\n        var values = this.values;\n        if (values.alpha !== 1) {\n            return values.hwb.concat([values.alpha]);\n        }\n        return values.hwb;\n    },\n    cmykArray: function () {\n        return this.values.cmyk;\n    },\n    rgbaArray: function () {\n        var values = this.values;\n        return values.rgb.concat([values.alpha]);\n    },\n    hslaArray: function () {\n        var values = this.values;\n        return values.hsl.concat([values.alpha]);\n    },\n    alpha: function (val) {\n        if (val === undefined) {\n            return this.values.alpha;\n        }\n        this.setValues('alpha', val);\n        return this;\n    },\n\n    red: function (val) {\n        return this.setChannel('rgb', 0, val);\n    },\n    green: function (val) {\n        return this.setChannel('rgb', 1, val);\n    },\n    blue: function (val) {\n        return this.setChannel('rgb', 2, val);\n    },\n    hue: function (val) {\n        if (val) {\n            val %= 360;\n            val = val < 0 ? 360 + val : val;\n        }\n        return this.setChannel('hsl', 0, val);\n    },\n    saturation: function (val) {\n        return this.setChannel('hsl', 1, val);\n    },\n    lightness: function (val) {\n        return this.setChannel('hsl', 2, val);\n    },\n    saturationv: function (val) {\n        return this.setChannel('hsv', 1, val);\n    },\n    whiteness: function (val) {\n        return this.setChannel('hwb', 1, val);\n    },\n    blackness: function (val) {\n        return this.setChannel('hwb', 2, val);\n    },\n    value: function (val) {\n        return this.setChannel('hsv', 2, val);\n    },\n    cyan: function (val) {\n        return this.setChannel('cmyk', 0, val);\n    },\n    magenta: function (val) {\n        return this.setChannel('cmyk', 1, val);\n    },\n    yellow: function (val) {\n        return this.setChannel('cmyk', 2, val);\n    },\n    black: function (val) {\n        return this.setChannel('cmyk', 3, val);\n    },\n\n    hexString: function () {\n        return string.hexString(this.values.rgb);\n    },\n    rgbString: function () {\n        return string.rgbString(this.values.rgb, this.values.alpha);\n    },\n    rgbaString: function () {\n        return string.rgbaString(this.values.rgb, this.values.alpha);\n    },\n    percentString: function () {\n        return string.percentString(this.values.rgb, this.values.alpha);\n    },\n    hslString: function () {\n        return string.hslString(this.values.hsl, this.values.alpha);\n    },\n    hslaString: function () {\n        return string.hslaString(this.values.hsl, this.values.alpha);\n    },\n    hwbString: function () {\n        return string.hwbString(this.values.hwb, this.values.alpha);\n    },\n    keyword: function () {\n        return string.keyword(this.values.rgb, this.values.alpha);\n    },\n\n    rgbNumber: function () {\n        var rgb = this.values.rgb;\n        return (rgb[0] << 16) | (rgb[1] << 8) | rgb[2];\n    },\n\n    luminosity: function () {\n        // http://www.w3.org/TR/WCAG20/#relativeluminancedef\n        var rgb = this.values.rgb;\n        var lum = [];\n        for (var i = 0; i < rgb.length; i++) {\n            var chan = rgb[i] / 255;\n            lum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\n        }\n        return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n    },\n\n    contrast: function (color2) {\n        // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n        var lum1 = this.luminosity();\n        var lum2 = color2.luminosity();\n        if (lum1 > lum2) {\n            return (lum1 + 0.05) / (lum2 + 0.05);\n        }\n        return (lum2 + 0.05) / (lum1 + 0.05);\n    },\n\n    level: function (color2) {\n        var contrastRatio = this.contrast(color2);\n        if (contrastRatio >= 7.1) {\n            return 'AAA';\n        }\n\n        return (contrastRatio >= 4.5) ? 'AA' : '';\n    },\n\n    dark: function () {\n        // YIQ equation from http://24ways.org/2010/calculating-color-contrast\n        var rgb = this.values.rgb;\n        var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n        return yiq < 128;\n    },\n\n    light: function () {\n        return !this.dark();\n    },\n\n    negate: function () {\n        var rgb = [];\n        for (var i = 0; i < 3; i++) {\n            rgb[i] = 255 - this.values.rgb[i];\n        }\n        this.setValues('rgb', rgb);\n        return this;\n    },\n\n    lighten: function (ratio) {\n        var hsl = this.values.hsl;\n        hsl[2] += hsl[2] * ratio;\n        this.setValues('hsl', hsl);\n        return this;\n    },\n\n    darken: function (ratio) {\n        var hsl = this.values.hsl;\n        hsl[2] -= hsl[2] * ratio;\n        this.setValues('hsl', hsl);\n        return this;\n    },\n\n    saturate: function (ratio) {\n        var hsl = this.values.hsl;\n        hsl[1] += hsl[1] * ratio;\n        this.setValues('hsl', hsl);\n        return this;\n    },\n\n    desaturate: function (ratio) {\n        var hsl = this.values.hsl;\n        hsl[1] -= hsl[1] * ratio;\n        this.setValues('hsl', hsl);\n        return this;\n    },\n\n    whiten: function (ratio) {\n        var hwb = this.values.hwb;\n        hwb[1] += hwb[1] * ratio;\n        this.setValues('hwb', hwb);\n        return this;\n    },\n\n    blacken: function (ratio) {\n        var hwb = this.values.hwb;\n        hwb[2] += hwb[2] * ratio;\n        this.setValues('hwb', hwb);\n        return this;\n    },\n\n    greyscale: function () {\n        var rgb = this.values.rgb;\n        // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n        var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n        this.setValues('rgb', [val, val, val]);\n        return this;\n    },\n\n    clearer: function (ratio) {\n        var alpha = this.values.alpha;\n        this.setValues('alpha', alpha - (alpha * ratio));\n        return this;\n    },\n\n    opaquer: function (ratio) {\n        var alpha = this.values.alpha;\n        this.setValues('alpha', alpha + (alpha * ratio));\n        return this;\n    },\n\n    rotate: function (degrees) {\n        var hsl = this.values.hsl;\n        var hue = (hsl[0] + degrees) % 360;\n        hsl[0] = hue < 0 ? 360 + hue : hue;\n        this.setValues('hsl', hsl);\n        return this;\n    },\n\n    /**\n     * Ported from sass implementation in C\n     * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n     */\n    mix: function (mixinColor, weight) {\n        var color1 = this;\n        var color2 = mixinColor;\n        var p = weight === undefined ? 0.5 : weight;\n\n        var w = 2 * p - 1;\n        var a = color1.alpha() - color2.alpha();\n\n        var w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n        var w2 = 1 - w1;\n\n        return this\n            .rgb(\n                w1 * color1.red() + w2 * color2.red(),\n                w1 * color1.green() + w2 * color2.green(),\n                w1 * color1.blue() + w2 * color2.blue()\n            )\n            .alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n    },\n\n    toJSON: function () {\n        return this.rgb();\n    },\n\n    clone: function () {\n        // NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n        // making the final build way to big to embed in Chart.js. So let's do it manually,\n        // assuming that values to clone are 1 dimension arrays containing only numbers,\n        // except 'alpha' which is a number.\n        var result = new Color();\n        var source = this.values;\n        var target = result.values;\n        var value, type;\n\n        for (var prop in source) {\n            if (source.hasOwnProperty(prop)) {\n                value = source[prop];\n                type = ({}).toString.call(value);\n                if (type === '[object Array]') {\n                    target[prop] = value.slice(0);\n                } else if (type === '[object Number]') {\n                    target[prop] = value;\n                } else {\n                    console.error('unexpected color value:', value);\n                }\n            }\n        }\n\n        return result;\n    }\n};\n\nColor.prototype.spaces = {\n    rgb: ['red', 'green', 'blue'],\n    hsl: ['hue', 'saturation', 'lightness'],\n    hsv: ['hue', 'saturation', 'value'],\n    hwb: ['hue', 'whiteness', 'blackness'],\n    cmyk: ['cyan', 'magenta', 'yellow', 'black']\n};\n\nColor.prototype.maxes = {\n    rgb: [255, 255, 255],\n    hsl: [360, 100, 100],\n    hsv: [360, 100, 100],\n    hwb: [360, 100, 100],\n    cmyk: [100, 100, 100, 100]\n};\n\nColor.prototype.getValues = function (space) {\n    var values = this.values;\n    var vals = {};\n\n    for (var i = 0; i < space.length; i++) {\n        vals[space.charAt(i)] = values[space][i];\n    }\n\n    if (values.alpha !== 1) {\n        vals.a = values.alpha;\n    }\n\n    // {r: 255, g: 255, b: 255, a: 0.4}\n    return vals;\n};\n\nColor.prototype.setValues = function (space, vals) {\n    var values = this.values;\n    var spaces = this.spaces;\n    var maxes = this.maxes;\n    var alpha = 1;\n    var i;\n\n    this.valid = true;\n\n    if (space === 'alpha') {\n        alpha = vals;\n    } else if (vals.length) {\n        // [10, 10, 10]\n        values[space] = vals.slice(0, space.length);\n        alpha = vals[space.length];\n    } else if (vals[space.charAt(0)] !== undefined) {\n        // {r: 10, g: 10, b: 10}\n        for (i = 0; i < space.length; i++) {\n            values[space][i] = vals[space.charAt(i)];\n        }\n\n        alpha = vals.a;\n    } else if (vals[spaces[space][0]] !== undefined) {\n        // {red: 10, green: 10, blue: 10}\n        var chans = spaces[space];\n\n        for (i = 0; i < space.length; i++) {\n            values[space][i] = vals[chans[i]];\n        }\n\n        alpha = vals.alpha;\n    }\n\n    values.alpha = Math.max(0, Math.min(1, (alpha === undefined ? values.alpha : alpha)));\n\n    if (space === 'alpha') {\n        return false;\n    }\n\n    var capped;\n\n    // cap values of the space prior converting all values\n    for (i = 0; i < space.length; i++) {\n        capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n        values[space][i] = Math.round(capped);\n    }\n\n    // convert to all the other color spaces\n    for (var sname in spaces) {\n        if (sname !== space) {\n            values[sname] = convert[space][sname](values[space]);\n        }\n    }\n\n    return true;\n};\n\nColor.prototype.setSpace = function (space, args) {\n    var vals = args[0];\n\n    if (vals === undefined) {\n        // color.rgb()\n        return this.getValues(space);\n    }\n\n    // color.rgb(10, 10, 10)\n    if (typeof vals === 'number') {\n        vals = Array.prototype.slice.call(args);\n    }\n\n    this.setValues(space, vals);\n    return this;\n};\n\nColor.prototype.setChannel = function (space, index, val) {\n    var svalues = this.values[space];\n    if (val === undefined) {\n        // color.red()\n        return svalues[index];\n    } else if (val === svalues[index]) {\n        // color.red(color.red())\n        return this;\n    }\n\n    // color.red(100)\n    svalues[index] = val;\n    this.setValues(space, svalues);\n\n    return this;\n};\n\nif (typeof window !== 'undefined') {\n    window.Color = Color;\n}\n\nmodule.exports = Color;\n\n},{\"1\":1,\"4\":4}],3:[function (require,module,exports) {\n\nmodule.exports = {\n  rgb2hsl: rgb2hsl,\n  rgb2hsv: rgb2hsv,\n  rgb2hwb: rgb2hwb,\n  rgb2cmyk: rgb2cmyk,\n  rgb2keyword: rgb2keyword,\n  rgb2xyz: rgb2xyz,\n  rgb2lab: rgb2lab,\n  rgb2lch: rgb2lch,\n\n  hsl2rgb: hsl2rgb,\n  hsl2hsv: hsl2hsv,\n  hsl2hwb: hsl2hwb,\n  hsl2cmyk: hsl2cmyk,\n  hsl2keyword: hsl2keyword,\n\n  hsv2rgb: hsv2rgb,\n  hsv2hsl: hsv2hsl,\n  hsv2hwb: hsv2hwb,\n  hsv2cmyk: hsv2cmyk,\n  hsv2keyword: hsv2keyword,\n\n  hwb2rgb: hwb2rgb,\n  hwb2hsl: hwb2hsl,\n  hwb2hsv: hwb2hsv,\n  hwb2cmyk: hwb2cmyk,\n  hwb2keyword: hwb2keyword,\n\n  cmyk2rgb: cmyk2rgb,\n  cmyk2hsl: cmyk2hsl,\n  cmyk2hsv: cmyk2hsv,\n  cmyk2hwb: cmyk2hwb,\n  cmyk2keyword: cmyk2keyword,\n\n  keyword2rgb: keyword2rgb,\n  keyword2hsl: keyword2hsl,\n  keyword2hsv: keyword2hsv,\n  keyword2hwb: keyword2hwb,\n  keyword2cmyk: keyword2cmyk,\n  keyword2lab: keyword2lab,\n  keyword2xyz: keyword2xyz,\n\n  xyz2rgb: xyz2rgb,\n  xyz2lab: xyz2lab,\n  xyz2lch: xyz2lch,\n\n  lab2xyz: lab2xyz,\n  lab2rgb: lab2rgb,\n  lab2lch: lab2lch,\n\n  lch2lab: lch2lab,\n  lch2xyz: lch2xyz,\n  lch2rgb: lch2rgb\n}\n\n\nfunction rgb2hsl(rgb)\n{\n  var r = rgb[0]/255,\n      g = rgb[1]/255,\n      b = rgb[2]/255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, l;\n\n  if (max == min) {\n    h = 0;\n  } else if (r == max) {\n    h = (g - b) / delta;\n  } else if (g == max) {\n    h = 2 + (b - r) / delta;\n  } else if (b == max) {\n    h = 4 + (r - g)/ delta;\n  }\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0) {\n    h += 360;\n  }\n\n  l = (min + max) / 2;\n\n  if (max == min) {\n    s = 0;\n  } else if (l <= 0.5) {\n    s = delta / (max + min);\n  } else {\ns = delta / (2 - max - min);\n  }\n\n  return [h, s * 100, l * 100];\n}\n\nfunction rgb2hsv(rgb)\n{\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, v;\n\n  if (max == 0) {\n    s = 0;\n  } else {\ns = (delta/max * 1000)/10;\n  }\n\n  if (max == min) {\n    h = 0;\n  } else if (r == max) {\n    h = (g - b) / delta;\n  } else if (g == max) {\n    h = 2 + (b - r) / delta;\n  } else if (b == max) {\n    h = 4 + (r - g) / delta;\n  }\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0) {\n    h += 360;\n  }\n\n  v = ((max / 255) * 1000) / 10;\n\n  return [h, s, v];\n}\n\nfunction rgb2hwb(rgb)\n{\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      h = rgb2hsl(rgb)[0],\n      w = 1/255 * Math.min(r, Math.min(g, b)),\n      b = 1 - 1/255 * Math.max(r, Math.max(g, b));\n\n  return [h, w * 100, b * 100];\n}\n\nfunction rgb2cmyk(rgb)\n{\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      c, m, y, k;\n\n  k = Math.min(1 - r, 1 - g, 1 - b);\n  c = (1 - r - k) / (1 - k) || 0;\n  m = (1 - g - k) / (1 - k) || 0;\n  y = (1 - b - k) / (1 - k) || 0;\n  return [c * 100, m * 100, y * 100, k * 100];\n}\n\nfunction rgb2keyword(rgb)\n{\n  return reverseKeywords[JSON.stringify(rgb)];\n}\n\nfunction rgb2xyz(rgb)\n{\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255;\n\n  // assume sRGB\n  r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n  g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n  b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n  var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n  var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n  var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n  return [x * 100, y *100, z * 100];\n}\n\nfunction rgb2lab(rgb)\n{\n  var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction rgb2lch(args)\n{\n  return lab2lch(rgb2lab(args));\n}\n\nfunction hsl2rgb(hsl)\n{\n  var h = hsl[0] / 360,\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      t1, t2, t3, rgb, val;\n\n  if (s == 0) {\n    val = l * 255;\n    return [val, val, val];\n  }\n\n  if (l < 0.5) {\n    t2 = l * (1 + s);\n  } else {\nt2 = l + s - l * s;\n  }\n  t1 = 2 * l - t2;\n\n  rgb = [0, 0, 0];\n  for (var i = 0; i < 3; i++) {\n    t3 = h + 1 / 3 * - (i - 1);\n    t3 < 0 && t3++;\n    t3 > 1 && t3--;\n\n    if (6 * t3 < 1) {\n      val = t1 + (t2 - t1) * 6 * t3;\n    } else if (2 * t3 < 1) {\n      val = t2;\n    } else if (3 * t3 < 2) {\n      val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n    } else {\nval = t1;\n    }\n\n    rgb[i] = val * 255;\n  }\n\n  return rgb;\n}\n\nfunction hsl2hsv(hsl)\n{\n  var h = hsl[0],\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      sv, v;\n\n  if (l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n  }\n\n  l *= 2;\n  s *= (l <= 1) ? l : 2 - l;\n  v = (l + s) / 2;\n  sv = (2 * s) / (l + s);\n  return [h, sv * 100, v * 100];\n}\n\nfunction hsl2hwb(args)\n{\n  return rgb2hwb(hsl2rgb(args));\n}\n\nfunction hsl2cmyk(args)\n{\n  return rgb2cmyk(hsl2rgb(args));\n}\n\nfunction hsl2keyword(args)\n{\n  return rgb2keyword(hsl2rgb(args));\n}\n\n\nfunction hsv2rgb(hsv)\n{\n  var h = hsv[0] / 60,\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      hi = Math.floor(h) % 6;\n\n  var f = h - Math.floor(h),\n      p = 255 * v * (1 - s),\n      q = 255 * v * (1 - (s * f)),\n      t = 255 * v * (1 - (s * (1 - f))),\n      v = 255 * v;\n\n  switch (hi) {\n    case 0:\n      return [v, t, p];\n    case 1:\n      return [q, v, p];\n    case 2:\n      return [p, v, t];\n    case 3:\n      return [p, q, v];\n    case 4:\n      return [t, p, v];\n    case 5:\n      return [v, p, q];\n  }\n}\n\nfunction hsv2hsl(hsv)\n{\n  var h = hsv[0],\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      sl, l;\n\n  l = (2 - s) * v;\n  sl = s * v;\n  sl /= (l <= 1) ? l : 2 - l;\n  sl = sl || 0;\n  l /= 2;\n  return [h, sl * 100, l * 100];\n}\n\nfunction hsv2hwb(args)\n{\n  return rgb2hwb(hsv2rgb(args))\n}\n\nfunction hsv2cmyk(args)\n{\n  return rgb2cmyk(hsv2rgb(args));\n}\n\nfunction hsv2keyword(args)\n{\n  return rgb2keyword(hsv2rgb(args));\n}\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nfunction hwb2rgb(hwb)\n{\n  var h = hwb[0] / 360,\n      wh = hwb[1] / 100,\n      bl = hwb[2] / 100,\n      ratio = wh + bl,\n      i, v, f, n;\n\n  // wh + bl cant be > 1\n  if (ratio > 1) {\n    wh /= ratio;\n    bl /= ratio;\n  }\n\n  i = Math.floor(6 * h);\n  v = 1 - bl;\n  f = 6 * h - i;\n  if ((i & 0x01) != 0) {\n    f = 1 - f;\n  }\n  n = wh + f * (v - wh);  // linear interpolation\n\n  switch (i) {\n    default:\n    case 6:\n    case 0: r = v; g = n; b = wh; break;\n    case 1: r = n; g = v; b = wh; break;\n    case 2: r = wh; g = v; b = n; break;\n    case 3: r = wh; g = n; b = v; break;\n    case 4: r = n; g = wh; b = v; break;\n    case 5: r = v; g = wh; b = n; break;\n  }\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction hwb2hsl(args)\n{\n  return rgb2hsl(hwb2rgb(args));\n}\n\nfunction hwb2hsv(args)\n{\n  return rgb2hsv(hwb2rgb(args));\n}\n\nfunction hwb2cmyk(args)\n{\n  return rgb2cmyk(hwb2rgb(args));\n}\n\nfunction hwb2keyword(args)\n{\n  return rgb2keyword(hwb2rgb(args));\n}\n\nfunction cmyk2rgb(cmyk)\n{\n  var c = cmyk[0] / 100,\n      m = cmyk[1] / 100,\n      y = cmyk[2] / 100,\n      k = cmyk[3] / 100,\n      r, g, b;\n\n  r = 1 - Math.min(1, c * (1 - k) + k);\n  g = 1 - Math.min(1, m * (1 - k) + k);\n  b = 1 - Math.min(1, y * (1 - k) + k);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction cmyk2hsl(args)\n{\n  return rgb2hsl(cmyk2rgb(args));\n}\n\nfunction cmyk2hsv(args)\n{\n  return rgb2hsv(cmyk2rgb(args));\n}\n\nfunction cmyk2hwb(args)\n{\n  return rgb2hwb(cmyk2rgb(args));\n}\n\nfunction cmyk2keyword(args)\n{\n  return rgb2keyword(cmyk2rgb(args));\n}\n\n\nfunction xyz2rgb(xyz)\n{\n  var x = xyz[0] / 100,\n      y = xyz[1] / 100,\n      z = xyz[2] / 100,\n      r, g, b;\n\n  r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n  g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n  b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n  // assume sRGB\n  r = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n    : r = (r * 12.92);\n\n  g = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n    : g = (g * 12.92);\n\n  b = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n    : b = (b * 12.92);\n\n  r = Math.min(Math.max(0, r), 1);\n  g = Math.min(Math.max(0, g), 1);\n  b = Math.min(Math.max(0, b), 1);\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction xyz2lab(xyz)\n{\n  var x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction xyz2lch(args)\n{\n  return lab2lch(xyz2lab(args));\n}\n\nfunction lab2xyz(lab)\n{\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      x, y, z, y2;\n\n  if (l <= 8) {\n    y = (l * 100) / 903.3;\n    y2 = (7.787 * (y / 100)) + (16 / 116);\n  } else {\n    y = 100 * Math.pow((l + 16) / 116, 3);\n    y2 = Math.pow(y / 100, 1/3);\n  }\n\n  x = x / 95.047 <= 0.008856 ? x = (95.047 * ((a / 500) + y2 - (16 / 116))) / 7.787 : 95.047 * Math.pow((a / 500) + y2, 3);\n\n  z = z / 108.883 <= 0.008859 ? z = (108.883 * (y2 - (b / 200) - (16 / 116))) / 7.787 : 108.883 * Math.pow(y2 - (b / 200), 3);\n\n  return [x, y, z];\n}\n\nfunction lab2lch(lab)\n{\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      hr, h, c;\n\n  hr = Math.atan2(b, a);\n  h = hr * 360 / 2 / Math.PI;\n  if (h < 0) {\n    h += 360;\n  }\n  c = Math.sqrt(a * a + b * b);\n  return [l, c, h];\n}\n\nfunction lab2rgb(args)\n{\n  return xyz2rgb(lab2xyz(args));\n}\n\nfunction lch2lab(lch)\n{\n  var l = lch[0],\n      c = lch[1],\n      h = lch[2],\n      a, b, hr;\n\n  hr = h / 360 * 2 * Math.PI;\n  a = c * Math.cos(hr);\n  b = c * Math.sin(hr);\n  return [l, a, b];\n}\n\nfunction lch2xyz(args)\n{\n  return lab2xyz(lch2lab(args));\n}\n\nfunction lch2rgb(args)\n{\n  return lab2rgb(lch2lab(args));\n}\n\nfunction keyword2rgb(keyword)\n{\n  return cssKeywords[keyword];\n}\n\nfunction keyword2hsl(args)\n{\n  return rgb2hsl(keyword2rgb(args));\n}\n\nfunction keyword2hsv(args)\n{\n  return rgb2hsv(keyword2rgb(args));\n}\n\nfunction keyword2hwb(args)\n{\n  return rgb2hwb(keyword2rgb(args));\n}\n\nfunction keyword2cmyk(args)\n{\n  return rgb2cmyk(keyword2rgb(args));\n}\n\nfunction keyword2lab(args)\n{\n  return rgb2lab(keyword2rgb(args));\n}\n\nfunction keyword2xyz(args)\n{\n  return rgb2xyz(keyword2rgb(args));\n}\n\nvar cssKeywords = {\n  aliceblue:  [240,248,255],\n  antiquewhite: [250,235,215],\n  aqua: [0,255,255],\n  aquamarine: [127,255,212],\n  azure:  [240,255,255],\n  beige:  [245,245,220],\n  bisque: [255,228,196],\n  black:  [0,0,0],\n  blanchedalmond: [255,235,205],\n  blue: [0,0,255],\n  blueviolet: [138,43,226],\n  brown:  [165,42,42],\n  burlywood:  [222,184,135],\n  cadetblue:  [95,158,160],\n  chartreuse: [127,255,0],\n  chocolate:  [210,105,30],\n  coral:  [255,127,80],\n  cornflowerblue: [100,149,237],\n  cornsilk: [255,248,220],\n  crimson:  [220,20,60],\n  cyan: [0,255,255],\n  darkblue: [0,0,139],\n  darkcyan: [0,139,139],\n  darkgoldenrod:  [184,134,11],\n  darkgray: [169,169,169],\n  darkgreen:  [0,100,0],\n  darkgrey: [169,169,169],\n  darkkhaki:  [189,183,107],\n  darkmagenta:  [139,0,139],\n  darkolivegreen: [85,107,47],\n  darkorange: [255,140,0],\n  darkorchid: [153,50,204],\n  darkred:  [139,0,0],\n  darksalmon: [233,150,122],\n  darkseagreen: [143,188,143],\n  darkslateblue:  [72,61,139],\n  darkslategray:  [47,79,79],\n  darkslategrey:  [47,79,79],\n  darkturquoise:  [0,206,209],\n  darkviolet: [148,0,211],\n  deeppink: [255,20,147],\n  deepskyblue:  [0,191,255],\n  dimgray:  [105,105,105],\n  dimgrey:  [105,105,105],\n  dodgerblue: [30,144,255],\n  firebrick:  [178,34,34],\n  floralwhite:  [255,250,240],\n  forestgreen:  [34,139,34],\n  fuchsia:  [255,0,255],\n  gainsboro:  [220,220,220],\n  ghostwhite: [248,248,255],\n  gold: [255,215,0],\n  goldenrod:  [218,165,32],\n  gray: [128,128,128],\n  green:  [0,128,0],\n  greenyellow:  [173,255,47],\n  grey: [128,128,128],\n  honeydew: [240,255,240],\n  hotpink:  [255,105,180],\n  indianred:  [205,92,92],\n  indigo: [75,0,130],\n  ivory:  [255,255,240],\n  khaki:  [240,230,140],\n  lavender: [230,230,250],\n  lavenderblush:  [255,240,245],\n  lawngreen:  [124,252,0],\n  lemonchiffon: [255,250,205],\n  lightblue:  [173,216,230],\n  lightcoral: [240,128,128],\n  lightcyan:  [224,255,255],\n  lightgoldenrodyellow: [250,250,210],\n  lightgray:  [211,211,211],\n  lightgreen: [144,238,144],\n  lightgrey:  [211,211,211],\n  lightpink:  [255,182,193],\n  lightsalmon:  [255,160,122],\n  lightseagreen:  [32,178,170],\n  lightskyblue: [135,206,250],\n  lightslategray: [119,136,153],\n  lightslategrey: [119,136,153],\n  lightsteelblue: [176,196,222],\n  lightyellow:  [255,255,224],\n  lime: [0,255,0],\n  limegreen:  [50,205,50],\n  linen:  [250,240,230],\n  magenta:  [255,0,255],\n  maroon: [128,0,0],\n  mediumaquamarine: [102,205,170],\n  mediumblue: [0,0,205],\n  mediumorchid: [186,85,211],\n  mediumpurple: [147,112,219],\n  mediumseagreen: [60,179,113],\n  mediumslateblue:  [123,104,238],\n  mediumspringgreen:  [0,250,154],\n  mediumturquoise:  [72,209,204],\n  mediumvioletred:  [199,21,133],\n  midnightblue: [25,25,112],\n  mintcream:  [245,255,250],\n  mistyrose:  [255,228,225],\n  moccasin: [255,228,181],\n  navajowhite:  [255,222,173],\n  navy: [0,0,128],\n  oldlace:  [253,245,230],\n  olive:  [128,128,0],\n  olivedrab:  [107,142,35],\n  orange: [255,165,0],\n  orangered:  [255,69,0],\n  orchid: [218,112,214],\n  palegoldenrod:  [238,232,170],\n  palegreen:  [152,251,152],\n  paleturquoise:  [175,238,238],\n  palevioletred:  [219,112,147],\n  papayawhip: [255,239,213],\n  peachpuff:  [255,218,185],\n  peru: [205,133,63],\n  pink: [255,192,203],\n  plum: [221,160,221],\n  powderblue: [176,224,230],\n  purple: [128,0,128],\n  rebeccapurple: [102, 51, 153],\n  red:  [255,0,0],\n  rosybrown:  [188,143,143],\n  royalblue:  [65,105,225],\n  saddlebrown:  [139,69,19],\n  salmon: [250,128,114],\n  sandybrown: [244,164,96],\n  seagreen: [46,139,87],\n  seashell: [255,245,238],\n  sienna: [160,82,45],\n  silver: [192,192,192],\n  skyblue:  [135,206,235],\n  slateblue:  [106,90,205],\n  slategray:  [112,128,144],\n  slategrey:  [112,128,144],\n  snow: [255,250,250],\n  springgreen:  [0,255,127],\n  steelblue:  [70,130,180],\n  tan:  [210,180,140],\n  teal: [0,128,128],\n  thistle:  [216,191,216],\n  tomato: [255,99,71],\n  turquoise:  [64,224,208],\n  violet: [238,130,238],\n  wheat:  [245,222,179],\n  white:  [255,255,255],\n  whitesmoke: [245,245,245],\n  yellow: [255,255,0],\n  yellowgreen:  [154,205,50]\n};\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n  reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n}\n\n},{}],4:[function (require,module,exports) {\nvar conversions = require(3);\n\nvar convert = function () {\n   return new Converter();\n}\n\nfor (var func in conversions) {\n  // export Raw versions\n  convert[func + \"Raw\"] =  (function (func) {\n    // accept array or plain args\n    return function (arg) {\n      if (typeof arg == \"number\") {\n        arg = Array.prototype.slice.call(arguments);\n      }\n      return conversions[func](arg);\n    }\n  })(func);\n\n  var pair = /(\\w+)2(\\w+)/.exec(func),\n      from = pair[1],\n      to = pair[2];\n\n  // export rgb2hsl and [\"rgb\"][\"hsl\"]\n  convert[from] = convert[from] || {};\n\n  convert[from][to] = convert[func] = (function (func) {\n    return function (arg) {\n      if (typeof arg == \"number\") {\n        arg = Array.prototype.slice.call(arguments);\n      }\n      \n      var val = conversions[func](arg);\n      if (typeof val == \"string\" || val === undefined) {\n        return val; // keyword\n      }\n\n      for (var i = 0; i < val.length; i++) {\n        val[i] = Math.round(val[i]);\n      }\n      return val;\n    }\n  })(func);\n}\n\n\n/* Converter does lazy conversion and caching */\nvar Converter = function () {\n   this.convs = {};\n};\n\n/* Either get the values for a space or\n  set the values for a space, depending on args */\nConverter.prototype.routeSpace = function (space, args) {\n   var values = args[0];\n   if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n   }\n   // color.rgb(10, 10, 10)\n   if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);\n   }\n\n   return this.setValues(space, values);\n};\n  \n/* Set the values for a space, invalidating cache */\nConverter.prototype.setValues = function (space, values) {\n   this.space = space;\n   this.convs = {};\n   this.convs[space] = values;\n   return this;\n};\n\n/* Get the values for a space. If there's already\n  a conversion for the space, fetch it, otherwise\n  compute it */\nConverter.prototype.getValues = function (space) {\n   var vals = this.convs[space];\n   if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n\n      this.convs[space] = vals;\n   }\n  return vals;\n};\n\n[\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function (space) {\n   Converter.prototype[space] = function (vals) {\n      return this.routeSpace(space, arguments);\n   }\n});\n\nmodule.exports = convert;\n},{\"3\":3}],5:[function (require,module,exports) {\n'use strict'\n\nmodule.exports = {\n    \"aliceblue\": [240, 248, 255],\n    \"antiquewhite\": [250, 235, 215],\n    \"aqua\": [0, 255, 255],\n    \"aquamarine\": [127, 255, 212],\n    \"azure\": [240, 255, 255],\n    \"beige\": [245, 245, 220],\n    \"bisque\": [255, 228, 196],\n    \"black\": [0, 0, 0],\n    \"blanchedalmond\": [255, 235, 205],\n    \"blue\": [0, 0, 255],\n    \"blueviolet\": [138, 43, 226],\n    \"brown\": [165, 42, 42],\n    \"burlywood\": [222, 184, 135],\n    \"cadetblue\": [95, 158, 160],\n    \"chartreuse\": [127, 255, 0],\n    \"chocolate\": [210, 105, 30],\n    \"coral\": [255, 127, 80],\n    \"cornflowerblue\": [100, 149, 237],\n    \"cornsilk\": [255, 248, 220],\n    \"crimson\": [220, 20, 60],\n    \"cyan\": [0, 255, 255],\n    \"darkblue\": [0, 0, 139],\n    \"darkcyan\": [0, 139, 139],\n    \"darkgoldenrod\": [184, 134, 11],\n    \"darkgray\": [169, 169, 169],\n    \"darkgreen\": [0, 100, 0],\n    \"darkgrey\": [169, 169, 169],\n    \"darkkhaki\": [189, 183, 107],\n    \"darkmagenta\": [139, 0, 139],\n    \"darkolivegreen\": [85, 107, 47],\n    \"darkorange\": [255, 140, 0],\n    \"darkorchid\": [153, 50, 204],\n    \"darkred\": [139, 0, 0],\n    \"darksalmon\": [233, 150, 122],\n    \"darkseagreen\": [143, 188, 143],\n    \"darkslateblue\": [72, 61, 139],\n    \"darkslategray\": [47, 79, 79],\n    \"darkslategrey\": [47, 79, 79],\n    \"darkturquoise\": [0, 206, 209],\n    \"darkviolet\": [148, 0, 211],\n    \"deeppink\": [255, 20, 147],\n    \"deepskyblue\": [0, 191, 255],\n    \"dimgray\": [105, 105, 105],\n    \"dimgrey\": [105, 105, 105],\n    \"dodgerblue\": [30, 144, 255],\n    \"firebrick\": [178, 34, 34],\n    \"floralwhite\": [255, 250, 240],\n    \"forestgreen\": [34, 139, 34],\n    \"fuchsia\": [255, 0, 255],\n    \"gainsboro\": [220, 220, 220],\n    \"ghostwhite\": [248, 248, 255],\n    \"gold\": [255, 215, 0],\n    \"goldenrod\": [218, 165, 32],\n    \"gray\": [128, 128, 128],\n    \"green\": [0, 128, 0],\n    \"greenyellow\": [173, 255, 47],\n    \"grey\": [128, 128, 128],\n    \"honeydew\": [240, 255, 240],\n    \"hotpink\": [255, 105, 180],\n    \"indianred\": [205, 92, 92],\n    \"indigo\": [75, 0, 130],\n    \"ivory\": [255, 255, 240],\n    \"khaki\": [240, 230, 140],\n    \"lavender\": [230, 230, 250],\n    \"lavenderblush\": [255, 240, 245],\n    \"lawngreen\": [124, 252, 0],\n    \"lemonchiffon\": [255, 250, 205],\n    \"lightblue\": [173, 216, 230],\n    \"lightcoral\": [240, 128, 128],\n    \"lightcyan\": [224, 255, 255],\n    \"lightgoldenrodyellow\": [250, 250, 210],\n    \"lightgray\": [211, 211, 211],\n    \"lightgreen\": [144, 238, 144],\n    \"lightgrey\": [211, 211, 211],\n    \"lightpink\": [255, 182, 193],\n    \"lightsalmon\": [255, 160, 122],\n    \"lightseagreen\": [32, 178, 170],\n    \"lightskyblue\": [135, 206, 250],\n    \"lightslategray\": [119, 136, 153],\n    \"lightslategrey\": [119, 136, 153],\n    \"lightsteelblue\": [176, 196, 222],\n    \"lightyellow\": [255, 255, 224],\n    \"lime\": [0, 255, 0],\n    \"limegreen\": [50, 205, 50],\n    \"linen\": [250, 240, 230],\n    \"magenta\": [255, 0, 255],\n    \"maroon\": [128, 0, 0],\n    \"mediumaquamarine\": [102, 205, 170],\n    \"mediumblue\": [0, 0, 205],\n    \"mediumorchid\": [186, 85, 211],\n    \"mediumpurple\": [147, 112, 219],\n    \"mediumseagreen\": [60, 179, 113],\n    \"mediumslateblue\": [123, 104, 238],\n    \"mediumspringgreen\": [0, 250, 154],\n    \"mediumturquoise\": [72, 209, 204],\n    \"mediumvioletred\": [199, 21, 133],\n    \"midnightblue\": [25, 25, 112],\n    \"mintcream\": [245, 255, 250],\n    \"mistyrose\": [255, 228, 225],\n    \"moccasin\": [255, 228, 181],\n    \"navajowhite\": [255, 222, 173],\n    \"navy\": [0, 0, 128],\n    \"oldlace\": [253, 245, 230],\n    \"olive\": [128, 128, 0],\n    \"olivedrab\": [107, 142, 35],\n    \"orange\": [255, 165, 0],\n    \"orangered\": [255, 69, 0],\n    \"orchid\": [218, 112, 214],\n    \"palegoldenrod\": [238, 232, 170],\n    \"palegreen\": [152, 251, 152],\n    \"paleturquoise\": [175, 238, 238],\n    \"palevioletred\": [219, 112, 147],\n    \"papayawhip\": [255, 239, 213],\n    \"peachpuff\": [255, 218, 185],\n    \"peru\": [205, 133, 63],\n    \"pink\": [255, 192, 203],\n    \"plum\": [221, 160, 221],\n    \"powderblue\": [176, 224, 230],\n    \"purple\": [128, 0, 128],\n    \"rebeccapurple\": [102, 51, 153],\n    \"red\": [255, 0, 0],\n    \"rosybrown\": [188, 143, 143],\n    \"royalblue\": [65, 105, 225],\n    \"saddlebrown\": [139, 69, 19],\n    \"salmon\": [250, 128, 114],\n    \"sandybrown\": [244, 164, 96],\n    \"seagreen\": [46, 139, 87],\n    \"seashell\": [255, 245, 238],\n    \"sienna\": [160, 82, 45],\n    \"silver\": [192, 192, 192],\n    \"skyblue\": [135, 206, 235],\n    \"slateblue\": [106, 90, 205],\n    \"slategray\": [112, 128, 144],\n    \"slategrey\": [112, 128, 144],\n    \"snow\": [255, 250, 250],\n    \"springgreen\": [0, 255, 127],\n    \"steelblue\": [70, 130, 180],\n    \"tan\": [210, 180, 140],\n    \"teal\": [0, 128, 128],\n    \"thistle\": [216, 191, 216],\n    \"tomato\": [255, 99, 71],\n    \"turquoise\": [64, 224, 208],\n    \"violet\": [238, 130, 238],\n    \"wheat\": [245, 222, 179],\n    \"white\": [255, 255, 255],\n    \"whitesmoke\": [245, 245, 245],\n    \"yellow\": [255, 255, 0],\n    \"yellowgreen\": [154, 205, 50]\n};\n\n},{}],6:[function (require,module,exports) {\n//! moment.js\n//! version : 2.20.1\n//! authors : Tim Wood, Iskren Chernev, Moment.js contributors\n//! license : MIT\n//! momentjs.com\n\n;(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    global.moment = factory()\n}(this, (function () {\n 'use strict';\n\nvar hookCallback;\n\nfunction hooks()\n{\n    return hookCallback.apply(null, arguments);\n}\n\n// This is done to register the method called with moment()\n// without creating circular dependencies.\nfunction setHookCallback(callback)\n{\n    hookCallback = callback;\n}\n\nfunction isArray(input)\n{\n    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n}\n\nfunction isObject(input)\n{\n    // IE8 will treat undefined and null as object if it wasn't for\n    // input != null\n    return input != null && Object.prototype.toString.call(input) === '[object Object]';\n}\n\nfunction isObjectEmpty(obj)\n{\n    if (Object.getOwnPropertyNames) {\n        return (Object.getOwnPropertyNames(obj).length === 0);\n    } else {\n        var k;\n        for (k in obj) {\n            if (obj.hasOwnProperty(k)) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\n\nfunction isUndefined(input)\n{\n    return input === void 0;\n}\n\nfunction isNumber(input)\n{\n    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n}\n\nfunction isDate(input)\n{\n    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n}\n\nfunction map(arr, fn)\n{\n    var res = [], i;\n    for (i = 0; i < arr.length; ++i) {\n        res.push(fn(arr[i], i));\n    }\n    return res;\n}\n\nfunction hasOwnProp(a, b)\n{\n    return Object.prototype.hasOwnProperty.call(a, b);\n}\n\nfunction extend(a, b)\n{\n    for (var i in b) {\n        if (hasOwnProp(b, i)) {\n            a[i] = b[i];\n        }\n    }\n\n    if (hasOwnProp(b, 'toString')) {\n        a.toString = b.toString;\n    }\n\n    if (hasOwnProp(b, 'valueOf')) {\n        a.valueOf = b.valueOf;\n    }\n\n    return a;\n}\n\nfunction createUTC(input, format, locale, strict)\n{\n    return createLocalOrUTC(input, format, locale, strict, true).utc();\n}\n\nfunction defaultParsingFlags()\n{\n    // We need to deep clone this object.\n    return {\n        empty           : false,\n        unusedTokens    : [],\n        unusedInput     : [],\n        overflow        : -2,\n        charsLeftOver   : 0,\n        nullInput       : false,\n        invalidMonth    : null,\n        invalidFormat   : false,\n        userInvalidated : false,\n        iso             : false,\n        parsedDateParts : [],\n        meridiem        : null,\n        rfc2822         : false,\n        weekdayMismatch : false\n    };\n}\n\nfunction getParsingFlags(m)\n{\n    if (m._pf == null) {\n        m._pf = defaultParsingFlags();\n    }\n    return m._pf;\n}\n\nvar some;\nif (Array.prototype.some) {\n    some = Array.prototype.some;\n} else {\n    some = function (fun) {\n        var t = Object(this);\n        var len = t.length >>> 0;\n\n        for (var i = 0; i < len; i++) {\n            if (i in t && fun.call(this, t[i], i, t)) {\n                return true;\n            }\n        }\n\n        return false;\n    };\n}\n\nfunction isValid(m)\n{\n    if (m._isValid == null) {\n        var flags = getParsingFlags(m);\n        var parsedParts = some.call(flags.parsedDateParts, function (i) {\n            return i != null;\n        });\n        var isNowValid = !isNaN(m._d.getTime()) &&\n            flags.overflow < 0 &&\n            !flags.empty &&\n            !flags.invalidMonth &&\n            !flags.invalidWeekday &&\n            !flags.weekdayMismatch &&\n            !flags.nullInput &&\n            !flags.invalidFormat &&\n            !flags.userInvalidated &&\n            (!flags.meridiem || (flags.meridiem && parsedParts));\n\n        if (m._strict) {\n            isNowValid = isNowValid &&\n                flags.charsLeftOver === 0 &&\n                flags.unusedTokens.length === 0 &&\n                flags.bigHour === undefined;\n        }\n\n        if (Object.isFrozen == null || !Object.isFrozen(m)) {\n            m._isValid = isNowValid;\n        } else {\n            return isNowValid;\n        }\n    }\n    return m._isValid;\n}\n\nfunction createInvalid(flags)\n{\n    var m = createUTC(NaN);\n    if (flags != null) {\n        extend(getParsingFlags(m), flags);\n    } else {\n        getParsingFlags(m).userInvalidated = true;\n    }\n\n    return m;\n}\n\n// Plugins that add properties should also add the key here (null value),\n// so we can properly clone ourselves.\nvar momentProperties = hooks.momentProperties = [];\n\nfunction copyConfig(to, from)\n{\n    var i, prop, val;\n\n    if (!isUndefined(from._isAMomentObject)) {\n        to._isAMomentObject = from._isAMomentObject;\n    }\n    if (!isUndefined(from._i)) {\n        to._i = from._i;\n    }\n    if (!isUndefined(from._f)) {\n        to._f = from._f;\n    }\n    if (!isUndefined(from._l)) {\n        to._l = from._l;\n    }\n    if (!isUndefined(from._strict)) {\n        to._strict = from._strict;\n    }\n    if (!isUndefined(from._tzm)) {\n        to._tzm = from._tzm;\n    }\n    if (!isUndefined(from._isUTC)) {\n        to._isUTC = from._isUTC;\n    }\n    if (!isUndefined(from._offset)) {\n        to._offset = from._offset;\n    }\n    if (!isUndefined(from._pf)) {\n        to._pf = getParsingFlags(from);\n    }\n    if (!isUndefined(from._locale)) {\n        to._locale = from._locale;\n    }\n\n    if (momentProperties.length > 0) {\n        for (i = 0; i < momentProperties.length; i++) {\n            prop = momentProperties[i];\n            val = from[prop];\n            if (!isUndefined(val)) {\n                to[prop] = val;\n            }\n        }\n    }\n\n    return to;\n}\n\nvar updateInProgress = false;\n\n// Moment prototype object\nfunction Moment(config)\n{\n    copyConfig(this, config);\n    this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n    if (!this.isValid()) {\n        this._d = new Date(NaN);\n    }\n    // Prevent infinite loop in case updateOffset creates new moment\n    // objects.\n    if (updateInProgress === false) {\n        updateInProgress = true;\n        hooks.updateOffset(this);\n        updateInProgress = false;\n    }\n}\n\nfunction isMoment(obj)\n{\n    return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);\n}\n\nfunction absFloor(number)\n{\n    if (number < 0) {\n        // -0 -> 0\n        return Math.ceil(number) || 0;\n    } else {\n        return Math.floor(number);\n    }\n}\n\nfunction toInt(argumentForCoercion)\n{\n    var coercedNumber = +argumentForCoercion,\n        value = 0;\n\n    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n        value = absFloor(coercedNumber);\n    }\n\n    return value;\n}\n\n// compare two arrays, return the number of differences\nfunction compareArrays(array1, array2, dontConvert)\n{\n    var len = Math.min(array1.length, array2.length),\n        lengthDiff = Math.abs(array1.length - array2.length),\n        diffs = 0,\n        i;\n    for (i = 0; i < len; i++) {\n        if ((dontConvert && array1[i] !== array2[i]) ||\n            (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n            diffs++;\n        }\n    }\n    return diffs + lengthDiff;\n}\n\nfunction warn(msg)\n{\n    if (hooks.suppressDeprecationWarnings === false &&\n            (typeof console !==  'undefined') && console.warn) {\n        console.warn('Deprecation warning: ' + msg);\n    }\n}\n\nfunction deprecate(msg, fn)\n{\n    var firstTime = true;\n\n    return extend(function () {\n        if (hooks.deprecationHandler != null) {\n            hooks.deprecationHandler(null, msg);\n        }\n        if (firstTime) {\n            var args = [];\n            var arg;\n            for (var i = 0; i < arguments.length; i++) {\n                arg = '';\n                if (typeof arguments[i] === 'object') {\n                    arg += '\\n[' + i + '] ';\n                    for (var key in arguments[0]) {\n                        arg += key + ': ' + arguments[0][key] + ', ';\n                    }\n                    arg = arg.slice(0, -2); // Remove trailing comma and space\n                } else {\n                    arg = arguments[i];\n                }\n                args.push(arg);\n            }\n            warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + (new Error()).stack);\n            firstTime = false;\n        }\n        return fn.apply(this, arguments);\n    }, fn);\n}\n\nvar deprecations = {};\n\nfunction deprecateSimple(name, msg)\n{\n    if (hooks.deprecationHandler != null) {\n        hooks.deprecationHandler(name, msg);\n    }\n    if (!deprecations[name]) {\n        warn(msg);\n        deprecations[name] = true;\n    }\n}\n\nhooks.suppressDeprecationWarnings = false;\nhooks.deprecationHandler = null;\n\nfunction isFunction(input)\n{\n    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n}\n\nfunction set(config)\n{\n    var prop, i;\n    for (i in config) {\n        prop = config[i];\n        if (isFunction(prop)) {\n            this[i] = prop;\n        } else {\n            this['_' + i] = prop;\n        }\n    }\n    this._config = config;\n    // Lenient ordinal parsing accepts just a number in addition to\n    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n    this._dayOfMonthOrdinalParseLenient = new RegExp(\n        (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +\n        '|' + (/\\d{1,2}/).source\n    );\n}\n\nfunction mergeConfigs(parentConfig, childConfig)\n{\n    var res = extend({}, parentConfig), prop;\n    for (prop in childConfig) {\n        if (hasOwnProp(childConfig, prop)) {\n            if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n                res[prop] = {};\n                extend(res[prop], parentConfig[prop]);\n                extend(res[prop], childConfig[prop]);\n            } else if (childConfig[prop] != null) {\n                res[prop] = childConfig[prop];\n            } else {\n                delete res[prop];\n            }\n        }\n    }\n    for (prop in parentConfig) {\n        if (hasOwnProp(parentConfig, prop) &&\n                !hasOwnProp(childConfig, prop) &&\n                isObject(parentConfig[prop])) {\n            // make sure changes to properties don't modify parent config\n            res[prop] = extend({}, res[prop]);\n        }\n    }\n    return res;\n}\n\nfunction Locale(config)\n{\n    if (config != null) {\n        this.set(config);\n    }\n}\n\nvar keys;\n\nif (Object.keys) {\n    keys = Object.keys;\n} else {\n    keys = function (obj) {\n        var i, res = [];\n        for (i in obj) {\n            if (hasOwnProp(obj, i)) {\n                res.push(i);\n            }\n        }\n        return res;\n    };\n}\n\nvar defaultCalendar = {\n    sameDay : '[Today at] LT',\n    nextDay : '[Tomorrow at] LT',\n    nextWeek : 'dddd [at] LT',\n    lastDay : '[Yesterday at] LT',\n    lastWeek : '[Last] dddd [at] LT',\n    sameElse : 'L'\n};\n\nfunction calendar(key, mom, now)\n{\n    var output = this._calendar[key] || this._calendar['sameElse'];\n    return isFunction(output) ? output.call(mom, now) : output;\n}\n\nvar defaultLongDateFormat = {\n    LTS  : 'h:mm:ss A',\n    LT   : 'h:mm A',\n    L    : 'MM/DD/YYYY',\n    LL   : 'MMMM D, YYYY',\n    LLL  : 'MMMM D, YYYY h:mm A',\n    LLLL : 'dddd, MMMM D, YYYY h:mm A'\n};\n\nfunction longDateFormat(key)\n{\n    var format = this._longDateFormat[key],\n        formatUpper = this._longDateFormat[key.toUpperCase()];\n\n    if (format || !formatUpper) {\n        return format;\n    }\n\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n        return val.slice(1);\n    });\n\n    return this._longDateFormat[key];\n}\n\nvar defaultInvalidDate = 'Invalid date';\n\nfunction invalidDate()\n{\n    return this._invalidDate;\n}\n\nvar defaultOrdinal = '%d';\nvar defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\nfunction ordinal(number)\n{\n    return this._ordinal.replace('%d', number);\n}\n\nvar defaultRelativeTime = {\n    future : 'in %s',\n    past   : '%s ago',\n    s  : 'a few seconds',\n    ss : '%d seconds',\n    m  : 'a minute',\n    mm : '%d minutes',\n    h  : 'an hour',\n    hh : '%d hours',\n    d  : 'a day',\n    dd : '%d days',\n    M  : 'a month',\n    MM : '%d months',\n    y  : 'a year',\n    yy : '%d years'\n};\n\nfunction relativeTime(number, withoutSuffix, string, isFuture)\n{\n    var output = this._relativeTime[string];\n    return (isFunction(output)) ?\n        output(number, withoutSuffix, string, isFuture) :\n        output.replace(/%d/i, number);\n}\n\nfunction pastFuture(diff, output)\n{\n    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n}\n\nvar aliases = {};\n\nfunction addUnitAlias(unit, shorthand)\n{\n    var lowerCase = unit.toLowerCase();\n    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n}\n\nfunction normalizeUnits(units)\n{\n    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n}\n\nfunction normalizeObjectUnits(inputObject)\n{\n    var normalizedInput = {},\n        normalizedProp,\n        prop;\n\n    for (prop in inputObject) {\n        if (hasOwnProp(inputObject, prop)) {\n            normalizedProp = normalizeUnits(prop);\n            if (normalizedProp) {\n                normalizedInput[normalizedProp] = inputObject[prop];\n            }\n        }\n    }\n\n    return normalizedInput;\n}\n\nvar priorities = {};\n\nfunction addUnitPriority(unit, priority)\n{\n    priorities[unit] = priority;\n}\n\nfunction getPrioritizedUnits(unitsObj)\n{\n    var units = [];\n    for (var u in unitsObj) {\n        units.push({unit: u, priority: priorities[u]});\n    }\n    units.sort(function (a, b) {\n        return a.priority - b.priority;\n    });\n    return units;\n}\n\nfunction zeroFill(number, targetLength, forceSign)\n{\n    var absNumber = '' + Math.abs(number),\n        zerosToFill = targetLength - absNumber.length,\n        sign = number >= 0;\n    return (sign ? (forceSign ? '+' : '') : '-') +\n        Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n}\n\nvar formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n\nvar localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n\nvar formatFunctions = {};\n\nvar formatTokenFunctions = {};\n\n// token:    'M'\n// padded:   ['MM', 2]\n// ordinal:  'Mo'\n// callback: function () { this.month() + 1 }\nfunction addFormatToken(token, padded, ordinal, callback)\n{\n    var func = callback;\n    if (typeof callback === 'string') {\n        func = function () {\n            return this[callback]();\n        };\n    }\n    if (token) {\n        formatTokenFunctions[token] = func;\n    }\n    if (padded) {\n        formatTokenFunctions[padded[0]] = function () {\n            return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n        };\n    }\n    if (ordinal) {\n        formatTokenFunctions[ordinal] = function () {\n            return this.localeData().ordinal(func.apply(this, arguments), token);\n        };\n    }\n}\n\nfunction removeFormattingTokens(input)\n{\n    if (input.match(/\\[[\\s\\S]/)) {\n        return input.replace(/^\\[|\\]$/g, '');\n    }\n    return input.replace(/\\\\/g, '');\n}\n\nfunction makeFormatFunction(format)\n{\n    var array = format.match(formattingTokens), i, length;\n\n    for (i = 0, length = array.length; i < length; i++) {\n        if (formatTokenFunctions[array[i]]) {\n            array[i] = formatTokenFunctions[array[i]];\n        } else {\n            array[i] = removeFormattingTokens(array[i]);\n        }\n    }\n\n    return function (mom) {\n        var output = '', i;\n        for (i = 0; i < length; i++) {\n            output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n        }\n        return output;\n    };\n}\n\n// format date using native date object\nfunction formatMoment(m, format)\n{\n    if (!m.isValid()) {\n        return m.localeData().invalidDate();\n    }\n\n    format = expandFormat(format, m.localeData());\n    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n\n    return formatFunctions[format](m);\n}\n\nfunction expandFormat(format, locale)\n{\n    var i = 5;\n\n    function replaceLongDateFormatTokens(input)\n    {\n        return locale.longDateFormat(input) || input;\n    }\n\n    localFormattingTokens.lastIndex = 0;\n    while (i >= 0 && localFormattingTokens.test(format)) {\n        format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n        localFormattingTokens.lastIndex = 0;\n        i -= 1;\n    }\n\n    return format;\n}\n\nvar match1         = /\\d/;            //       0 - 9\nvar match2         = /\\d\\d/;          //      00 - 99\nvar match3         = /\\d{3}/;         //     000 - 999\nvar match4         = /\\d{4}/;         //    0000 - 9999\nvar match6         = /[+-]?\\d{6}/;    // -999999 - 999999\nvar match1to2      = /\\d\\d?/;         //       0 - 99\nvar match3to4      = /\\d\\d\\d\\d?/;     //     999 - 9999\nvar match5to6      = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\nvar match1to3      = /\\d{1,3}/;       //       0 - 999\nvar match1to4      = /\\d{1,4}/;       //       0 - 9999\nvar match1to6      = /[+-]?\\d{1,6}/;  // -999999 - 999999\n\nvar matchUnsigned  = /\\d+/;           //       0 - inf\nvar matchSigned    = /[+-]?\\d+/;      //    -inf - inf\n\nvar matchOffset    = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\nvar matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\nvar matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n\n// any word (or two) characters or numbers including two/three word month in arabic.\n// includes scottish gaelic two word and hyphenated months\nvar matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n\n\nvar regexes = {};\n\nfunction addRegexToken(token, regex, strictRegex)\n{\n    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n        return (isStrict && strictRegex) ? strictRegex : regex;\n    };\n}\n\nfunction getParseRegexForToken(token, config)\n{\n    if (!hasOwnProp(regexes, token)) {\n        return new RegExp(unescapeFormat(token));\n    }\n\n    return regexes[token](config._strict, config._locale);\n}\n\n// Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\nfunction unescapeFormat(s)\n{\n    return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n        return p1 || p2 || p3 || p4;\n    }));\n}\n\nfunction regexEscape(s)\n{\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n}\n\nvar tokens = {};\n\nfunction addParseToken(token, callback)\n{\n    var i, func = callback;\n    if (typeof token === 'string') {\n        token = [token];\n    }\n    if (isNumber(callback)) {\n        func = function (input, array) {\n            array[callback] = toInt(input);\n        };\n    }\n    for (i = 0; i < token.length; i++) {\n        tokens[token[i]] = func;\n    }\n}\n\nfunction addWeekParseToken(token, callback)\n{\n    addParseToken(token, function (input, array, config, token) {\n        config._w = config._w || {};\n        callback(input, config._w, config, token);\n    });\n}\n\nfunction addTimeToArrayFromToken(token, input, config)\n{\n    if (input != null && hasOwnProp(tokens, token)) {\n        tokens[token](input, config._a, config, token);\n    }\n}\n\nvar YEAR = 0;\nvar MONTH = 1;\nvar DATE = 2;\nvar HOUR = 3;\nvar MINUTE = 4;\nvar SECOND = 5;\nvar MILLISECOND = 6;\nvar WEEK = 7;\nvar WEEKDAY = 8;\n\n// FORMATTING\n\naddFormatToken('Y', 0, 0, function () {\n    var y = this.year();\n    return y <= 9999 ? '' + y : '+' + y;\n});\n\naddFormatToken(0, ['YY', 2], 0, function () {\n    return this.year() % 100;\n});\n\naddFormatToken(0, ['YYYY',   4],       0, 'year');\naddFormatToken(0, ['YYYYY',  5],       0, 'year');\naddFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n// ALIASES\n\naddUnitAlias('year', 'y');\n\n// PRIORITIES\n\naddUnitPriority('year', 1);\n\n// PARSING\n\naddRegexToken('Y',      matchSigned);\naddRegexToken('YY',     match1to2, match2);\naddRegexToken('YYYY',   match1to4, match4);\naddRegexToken('YYYYY',  match1to6, match6);\naddRegexToken('YYYYYY', match1to6, match6);\n\naddParseToken(['YYYYY', 'YYYYYY'], YEAR);\naddParseToken('YYYY', function (input, array) {\n    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n});\naddParseToken('YY', function (input, array) {\n    array[YEAR] = hooks.parseTwoDigitYear(input);\n});\naddParseToken('Y', function (input, array) {\n    array[YEAR] = parseInt(input, 10);\n});\n\n// HELPERS\n\nfunction daysInYear(year)\n{\n    return isLeapYear(year) ? 366 : 365;\n}\n\nfunction isLeapYear(year)\n{\n    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n}\n\n// HOOKS\n\nhooks.parseTwoDigitYear = function (input) {\n    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n};\n\n// MOMENTS\n\nvar getSetYear = makeGetSet('FullYear', true);\n\nfunction getIsLeapYear()\n{\n    return isLeapYear(this.year());\n}\n\nfunction makeGetSet(unit, keepTime)\n{\n    return function (value) {\n        if (value != null) {\n            set$1(this, unit, value);\n            hooks.updateOffset(this, keepTime);\n            return this;\n        } else {\n            return get(this, unit);\n        }\n    };\n}\n\nfunction get(mom, unit)\n{\n    return mom.isValid() ?\n        mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n}\n\nfunction set$1(mom, unit, value)\n{\n    if (mom.isValid() && !isNaN(value)) {\n        if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n            mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n        } else {\n            mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n        }\n    }\n}\n\n// MOMENTS\n\nfunction stringGet(units)\n{\n    units = normalizeUnits(units);\n    if (isFunction(this[units])) {\n        return this[units]();\n    }\n    return this;\n}\n\n\nfunction stringSet(units, value)\n{\n    if (typeof units === 'object') {\n        units = normalizeObjectUnits(units);\n        var prioritized = getPrioritizedUnits(units);\n        for (var i = 0; i < prioritized.length; i++) {\n            this[prioritized[i].unit](units[prioritized[i].unit]);\n        }\n    } else {\n        units = normalizeUnits(units);\n        if (isFunction(this[units])) {\n            return this[units](value);\n        }\n    }\n    return this;\n}\n\nfunction mod(n, x)\n{\n    return ((n % x) + x) % x;\n}\n\nvar indexOf;\n\nif (Array.prototype.indexOf) {\n    indexOf = Array.prototype.indexOf;\n} else {\n    indexOf = function (o) {\n        // I know\n        var i;\n        for (i = 0; i < this.length; ++i) {\n            if (this[i] === o) {\n                return i;\n            }\n        }\n        return -1;\n    };\n}\n\nfunction daysInMonth(year, month)\n{\n    if (isNaN(year) || isNaN(month)) {\n        return NaN;\n    }\n    var modMonth = mod(month, 12);\n    year += (month - modMonth) / 12;\n    return modMonth === 1 ? (isLeapYear(year) ? 29 : 28) : (31 - modMonth % 7 % 2);\n}\n\n// FORMATTING\n\naddFormatToken('M', ['MM', 2], 'Mo', function () {\n    return this.month() + 1;\n});\n\naddFormatToken('MMM', 0, 0, function (format) {\n    return this.localeData().monthsShort(this, format);\n});\n\naddFormatToken('MMMM', 0, 0, function (format) {\n    return this.localeData().months(this, format);\n});\n\n// ALIASES\n\naddUnitAlias('month', 'M');\n\n// PRIORITY\n\naddUnitPriority('month', 8);\n\n// PARSING\n\naddRegexToken('M',    match1to2);\naddRegexToken('MM',   match1to2, match2);\naddRegexToken('MMM',  function (isStrict, locale) {\n    return locale.monthsShortRegex(isStrict);\n});\naddRegexToken('MMMM', function (isStrict, locale) {\n    return locale.monthsRegex(isStrict);\n});\n\naddParseToken(['M', 'MM'], function (input, array) {\n    array[MONTH] = toInt(input) - 1;\n});\n\naddParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n    var month = config._locale.monthsParse(input, token, config._strict);\n    // if we didn't find a month name, mark the date as invalid.\n    if (month != null) {\n        array[MONTH] = month;\n    } else {\n        getParsingFlags(config).invalidMonth = input;\n    }\n});\n\n// LOCALES\n\nvar MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\nvar defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\nfunction localeMonths(m, format)\n{\n    if (!m) {\n        return isArray(this._months) ? this._months :\n            this._months['standalone'];\n    }\n    return isArray(this._months) ? this._months[m.month()] :\n        this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n}\n\nvar defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\nfunction localeMonthsShort(m, format)\n{\n    if (!m) {\n        return isArray(this._monthsShort) ? this._monthsShort :\n            this._monthsShort['standalone'];\n    }\n    return isArray(this._monthsShort) ? this._monthsShort[m.month()] :\n        this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n}\n\nfunction handleStrictParse(monthName, format, strict)\n{\n    var i, ii, mom, llc = monthName.toLocaleLowerCase();\n    if (!this._monthsParse) {\n        // this is not used\n        this._monthsParse = [];\n        this._longMonthsParse = [];\n        this._shortMonthsParse = [];\n        for (i = 0; i < 12; ++i) {\n            mom = createUTC([2000, i]);\n            this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n            this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n        }\n    }\n\n    if (strict) {\n        if (format === 'MMM') {\n            ii = indexOf.call(this._shortMonthsParse, llc);\n            return ii !== -1 ? ii : null;\n        } else {\n            ii = indexOf.call(this._longMonthsParse, llc);\n            return ii !== -1 ? ii : null;\n        }\n    } else {\n        if (format === 'MMM') {\n            ii = indexOf.call(this._shortMonthsParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf.call(this._longMonthsParse, llc);\n            return ii !== -1 ? ii : null;\n        } else {\n            ii = indexOf.call(this._longMonthsParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf.call(this._shortMonthsParse, llc);\n            return ii !== -1 ? ii : null;\n        }\n    }\n}\n\nfunction localeMonthsParse(monthName, format, strict)\n{\n    var i, mom, regex;\n\n    if (this._monthsParseExact) {\n        return handleStrictParse.call(this, monthName, format, strict);\n    }\n\n    if (!this._monthsParse) {\n        this._monthsParse = [];\n        this._longMonthsParse = [];\n        this._shortMonthsParse = [];\n    }\n\n    for (i = 0; i < 12; i++) {\n        // make the regex if we don't have it already\n        mom = createUTC([2000, i]);\n        if (strict && !this._longMonthsParse[i]) {\n            this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n            this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n        }\n        if (!strict && !this._monthsParse[i]) {\n            regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n            this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n        }\n        // test the regex\n        if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n            return i;\n        } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n            return i;\n        } else if (!strict && this._monthsParse[i].test(monthName)) {\n            return i;\n        }\n    }\n}\n\n// MOMENTS\n\nfunction setMonth(mom, value)\n{\n    var dayOfMonth;\n\n    if (!mom.isValid()) {\n        // No op\n        return mom;\n    }\n\n    if (typeof value === 'string') {\n        if (/^\\d+$/.test(value)) {\n            value = toInt(value);\n        } else {\n            value = mom.localeData().monthsParse(value);\n            if (!isNumber(value)) {\n                return mom;\n            }\n        }\n    }\n\n    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n    return mom;\n}\n\nfunction getSetMonth(value)\n{\n    if (value != null) {\n        setMonth(this, value);\n        hooks.updateOffset(this, true);\n        return this;\n    } else {\n        return get(this, 'Month');\n    }\n}\n\nfunction getDaysInMonth()\n{\n    return daysInMonth(this.year(), this.month());\n}\n\nvar defaultMonthsShortRegex = matchWord;\nfunction monthsShortRegex(isStrict)\n{\n    if (this._monthsParseExact) {\n        if (!hasOwnProp(this, '_monthsRegex')) {\n            computeMonthsParse.call(this);\n        }\n        if (isStrict) {\n            return this._monthsShortStrictRegex;\n        } else {\n            return this._monthsShortRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_monthsShortRegex')) {\n            this._monthsShortRegex = defaultMonthsShortRegex;\n        }\n        return this._monthsShortStrictRegex && isStrict ?\n            this._monthsShortStrictRegex : this._monthsShortRegex;\n    }\n}\n\nvar defaultMonthsRegex = matchWord;\nfunction monthsRegex(isStrict)\n{\n    if (this._monthsParseExact) {\n        if (!hasOwnProp(this, '_monthsRegex')) {\n            computeMonthsParse.call(this);\n        }\n        if (isStrict) {\n            return this._monthsStrictRegex;\n        } else {\n            return this._monthsRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_monthsRegex')) {\n            this._monthsRegex = defaultMonthsRegex;\n        }\n        return this._monthsStrictRegex && isStrict ?\n            this._monthsStrictRegex : this._monthsRegex;\n    }\n}\n\nfunction computeMonthsParse()\n{\n    function cmpLenRev(a, b)\n    {\n        return b.length - a.length;\n    }\n\n    var shortPieces = [], longPieces = [], mixedPieces = [],\n        i, mom;\n    for (i = 0; i < 12; i++) {\n        // make the regex if we don't have it already\n        mom = createUTC([2000, i]);\n        shortPieces.push(this.monthsShort(mom, ''));\n        longPieces.push(this.months(mom, ''));\n        mixedPieces.push(this.months(mom, ''));\n        mixedPieces.push(this.monthsShort(mom, ''));\n    }\n    // Sorting makes sure if one month (or abbr) is a prefix of another it\n    // will match the longer piece.\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n    for (i = 0; i < 12; i++) {\n        shortPieces[i] = regexEscape(shortPieces[i]);\n        longPieces[i] = regexEscape(longPieces[i]);\n    }\n    for (i = 0; i < 24; i++) {\n        mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._monthsShortRegex = this._monthsRegex;\n    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n}\n\nfunction createDate(y, m, d, h, M, s, ms)\n{\n    // can't just apply() to create a date:\n    // https://stackoverflow.com/q/181348\n    var date = new Date(y, m, d, h, M, s, ms);\n\n    // the date constructor remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {\n        date.setFullYear(y);\n    }\n    return date;\n}\n\nfunction createUTCDate(y)\n{\n    var date = new Date(Date.UTC.apply(null, arguments));\n\n    // the Date.UTC function remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {\n        date.setUTCFullYear(y);\n    }\n    return date;\n}\n\n// start-of-first-week - start-of-year\nfunction firstWeekOffset(year, dow, doy)\n{\n    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n        fwd = 7 + dow - doy,\n        // first-week day local weekday -- which local weekday is fwd\n        fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\n    return -fwdlw + fwd - 1;\n}\n\n// https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\nfunction dayOfYearFromWeeks(year, week, weekday, dow, doy)\n{\n    var localWeekday = (7 + weekday - dow) % 7,\n        weekOffset = firstWeekOffset(year, dow, doy),\n        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n        resYear, resDayOfYear;\n\n    if (dayOfYear <= 0) {\n        resYear = year - 1;\n        resDayOfYear = daysInYear(resYear) + dayOfYear;\n    } else if (dayOfYear > daysInYear(year)) {\n        resYear = year + 1;\n        resDayOfYear = dayOfYear - daysInYear(year);\n    } else {\n        resYear = year;\n        resDayOfYear = dayOfYear;\n    }\n\n    return {\n        year: resYear,\n        dayOfYear: resDayOfYear\n    };\n}\n\nfunction weekOfYear(mom, dow, doy)\n{\n    var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n        resWeek, resYear;\n\n    if (week < 1) {\n        resYear = mom.year() - 1;\n        resWeek = week + weeksInYear(resYear, dow, doy);\n    } else if (week > weeksInYear(mom.year(), dow, doy)) {\n        resWeek = week - weeksInYear(mom.year(), dow, doy);\n        resYear = mom.year() + 1;\n    } else {\n        resYear = mom.year();\n        resWeek = week;\n    }\n\n    return {\n        week: resWeek,\n        year: resYear\n    };\n}\n\nfunction weeksInYear(year, dow, doy)\n{\n    var weekOffset = firstWeekOffset(year, dow, doy),\n        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n}\n\n// FORMATTING\n\naddFormatToken('w', ['ww', 2], 'wo', 'week');\naddFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n// ALIASES\n\naddUnitAlias('week', 'w');\naddUnitAlias('isoWeek', 'W');\n\n// PRIORITIES\n\naddUnitPriority('week', 5);\naddUnitPriority('isoWeek', 5);\n\n// PARSING\n\naddRegexToken('w',  match1to2);\naddRegexToken('ww', match1to2, match2);\naddRegexToken('W',  match1to2);\naddRegexToken('WW', match1to2, match2);\n\naddWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n    week[token.substr(0, 1)] = toInt(input);\n});\n\n// HELPERS\n\n// LOCALES\n\nfunction localeWeek(mom)\n{\n    return weekOfYear(mom, this._week.dow, this._week.doy).week;\n}\n\nvar defaultLocaleWeek = {\n    dow : 0, // Sunday is the first day of the week.\n    doy : 6  // The week that contains Jan 1st is the first week of the year.\n};\n\nfunction localeFirstDayOfWeek()\n{\n    return this._week.dow;\n}\n\nfunction localeFirstDayOfYear()\n{\n    return this._week.doy;\n}\n\n// MOMENTS\n\nfunction getSetWeek(input)\n{\n    var week = this.localeData().week(this);\n    return input == null ? week : this.add((input - week) * 7, 'd');\n}\n\nfunction getSetISOWeek(input)\n{\n    var week = weekOfYear(this, 1, 4).week;\n    return input == null ? week : this.add((input - week) * 7, 'd');\n}\n\n// FORMATTING\n\naddFormatToken('d', 0, 'do', 'day');\n\naddFormatToken('dd', 0, 0, function (format) {\n    return this.localeData().weekdaysMin(this, format);\n});\n\naddFormatToken('ddd', 0, 0, function (format) {\n    return this.localeData().weekdaysShort(this, format);\n});\n\naddFormatToken('dddd', 0, 0, function (format) {\n    return this.localeData().weekdays(this, format);\n});\n\naddFormatToken('e', 0, 0, 'weekday');\naddFormatToken('E', 0, 0, 'isoWeekday');\n\n// ALIASES\n\naddUnitAlias('day', 'd');\naddUnitAlias('weekday', 'e');\naddUnitAlias('isoWeekday', 'E');\n\n// PRIORITY\naddUnitPriority('day', 11);\naddUnitPriority('weekday', 11);\naddUnitPriority('isoWeekday', 11);\n\n// PARSING\n\naddRegexToken('d',    match1to2);\naddRegexToken('e',    match1to2);\naddRegexToken('E',    match1to2);\naddRegexToken('dd',   function (isStrict, locale) {\n    return locale.weekdaysMinRegex(isStrict);\n});\naddRegexToken('ddd',   function (isStrict, locale) {\n    return locale.weekdaysShortRegex(isStrict);\n});\naddRegexToken('dddd',   function (isStrict, locale) {\n    return locale.weekdaysRegex(isStrict);\n});\n\naddWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n    var weekday = config._locale.weekdaysParse(input, token, config._strict);\n    // if we didn't get a weekday name, mark the date as invalid\n    if (weekday != null) {\n        week.d = weekday;\n    } else {\n        getParsingFlags(config).invalidWeekday = input;\n    }\n});\n\naddWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n    week[token] = toInt(input);\n});\n\n// HELPERS\n\nfunction parseWeekday(input, locale)\n{\n    if (typeof input !== 'string') {\n        return input;\n    }\n\n    if (!isNaN(input)) {\n        return parseInt(input, 10);\n    }\n\n    input = locale.weekdaysParse(input);\n    if (typeof input === 'number') {\n        return input;\n    }\n\n    return null;\n}\n\nfunction parseIsoWeekday(input, locale)\n{\n    if (typeof input === 'string') {\n        return locale.weekdaysParse(input) % 7 || 7;\n    }\n    return isNaN(input) ? null : input;\n}\n\n// LOCALES\n\nvar defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\nfunction localeWeekdays(m, format)\n{\n    if (!m) {\n        return isArray(this._weekdays) ? this._weekdays :\n            this._weekdays['standalone'];\n    }\n    return isArray(this._weekdays) ? this._weekdays[m.day()] :\n        this._weekdays[this._weekdays.isFormat.test(format) ? 'format' : 'standalone'][m.day()];\n}\n\nvar defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\nfunction localeWeekdaysShort(m)\n{\n    return (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n}\n\nvar defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\nfunction localeWeekdaysMin(m)\n{\n    return (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n}\n\nfunction handleStrictParse$1(weekdayName, format, strict)\n{\n    var i, ii, mom, llc = weekdayName.toLocaleLowerCase();\n    if (!this._weekdaysParse) {\n        this._weekdaysParse = [];\n        this._shortWeekdaysParse = [];\n        this._minWeekdaysParse = [];\n\n        for (i = 0; i < 7; ++i) {\n            mom = createUTC([2000, 1]).day(i);\n            this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n            this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n            this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n        }\n    }\n\n    if (strict) {\n        if (format === 'dddd') {\n            ii = indexOf.call(this._weekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        } else if (format === 'ddd') {\n            ii = indexOf.call(this._shortWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        } else {\n            ii = indexOf.call(this._minWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        }\n    } else {\n        if (format === 'dddd') {\n            ii = indexOf.call(this._weekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf.call(this._shortWeekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf.call(this._minWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        } else if (format === 'ddd') {\n            ii = indexOf.call(this._shortWeekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf.call(this._weekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf.call(this._minWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        } else {\n            ii = indexOf.call(this._minWeekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf.call(this._weekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf.call(this._shortWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        }\n    }\n}\n\nfunction localeWeekdaysParse(weekdayName, format, strict)\n{\n    var i, mom, regex;\n\n    if (this._weekdaysParseExact) {\n        return handleStrictParse$1.call(this, weekdayName, format, strict);\n    }\n\n    if (!this._weekdaysParse) {\n        this._weekdaysParse = [];\n        this._minWeekdaysParse = [];\n        this._shortWeekdaysParse = [];\n        this._fullWeekdaysParse = [];\n    }\n\n    for (i = 0; i < 7; i++) {\n        // make the regex if we don't have it already\n\n        mom = createUTC([2000, 1]).day(i);\n        if (strict && !this._fullWeekdaysParse[i]) {\n            this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\.?') + '$', 'i');\n            this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\.?') + '$', 'i');\n            this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\.?') + '$', 'i');\n        }\n        if (!this._weekdaysParse[i]) {\n            regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n            this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n        }\n        // test the regex\n        if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n            return i;\n        } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n            return i;\n        } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n            return i;\n        } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n            return i;\n        }\n    }\n}\n\n// MOMENTS\n\nfunction getSetDayOfWeek(input)\n{\n    if (!this.isValid()) {\n        return input != null ? this : NaN;\n    }\n    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n    if (input != null) {\n        input = parseWeekday(input, this.localeData());\n        return this.add(input - day, 'd');\n    } else {\n        return day;\n    }\n}\n\nfunction getSetLocaleDayOfWeek(input)\n{\n    if (!this.isValid()) {\n        return input != null ? this : NaN;\n    }\n    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n    return input == null ? weekday : this.add(input - weekday, 'd');\n}\n\nfunction getSetISODayOfWeek(input)\n{\n    if (!this.isValid()) {\n        return input != null ? this : NaN;\n    }\n\n    // behaves the same as moment#day except\n    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n    // as a setter, sunday should belong to the previous week.\n\n    if (input != null) {\n        var weekday = parseIsoWeekday(input, this.localeData());\n        return this.day(this.day() % 7 ? weekday : weekday - 7);\n    } else {\n        return this.day() || 7;\n    }\n}\n\nvar defaultWeekdaysRegex = matchWord;\nfunction weekdaysRegex(isStrict)\n{\n    if (this._weekdaysParseExact) {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n            computeWeekdaysParse.call(this);\n        }\n        if (isStrict) {\n            return this._weekdaysStrictRegex;\n        } else {\n            return this._weekdaysRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n            this._weekdaysRegex = defaultWeekdaysRegex;\n        }\n        return this._weekdaysStrictRegex && isStrict ?\n            this._weekdaysStrictRegex : this._weekdaysRegex;\n    }\n}\n\nvar defaultWeekdaysShortRegex = matchWord;\nfunction weekdaysShortRegex(isStrict)\n{\n    if (this._weekdaysParseExact) {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n            computeWeekdaysParse.call(this);\n        }\n        if (isStrict) {\n            return this._weekdaysShortStrictRegex;\n        } else {\n            return this._weekdaysShortRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n            this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n        }\n        return this._weekdaysShortStrictRegex && isStrict ?\n            this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n    }\n}\n\nvar defaultWeekdaysMinRegex = matchWord;\nfunction weekdaysMinRegex(isStrict)\n{\n    if (this._weekdaysParseExact) {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n            computeWeekdaysParse.call(this);\n        }\n        if (isStrict) {\n            return this._weekdaysMinStrictRegex;\n        } else {\n            return this._weekdaysMinRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n            this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n        }\n        return this._weekdaysMinStrictRegex && isStrict ?\n            this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n    }\n}\n\n\nfunction computeWeekdaysParse()\n{\n    function cmpLenRev(a, b)\n    {\n        return b.length - a.length;\n    }\n\n    var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],\n        i, mom, minp, shortp, longp;\n    for (i = 0; i < 7; i++) {\n        // make the regex if we don't have it already\n        mom = createUTC([2000, 1]).day(i);\n        minp = this.weekdaysMin(mom, '');\n        shortp = this.weekdaysShort(mom, '');\n        longp = this.weekdays(mom, '');\n        minPieces.push(minp);\n        shortPieces.push(shortp);\n        longPieces.push(longp);\n        mixedPieces.push(minp);\n        mixedPieces.push(shortp);\n        mixedPieces.push(longp);\n    }\n    // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n    // will match the longer piece.\n    minPieces.sort(cmpLenRev);\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n    for (i = 0; i < 7; i++) {\n        shortPieces[i] = regexEscape(shortPieces[i]);\n        longPieces[i] = regexEscape(longPieces[i]);\n        mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._weekdaysShortRegex = this._weekdaysRegex;\n    this._weekdaysMinRegex = this._weekdaysRegex;\n\n    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n}\n\n// FORMATTING\n\nfunction hFormat()\n{\n    return this.hours() % 12 || 12;\n}\n\nfunction kFormat()\n{\n    return this.hours() || 24;\n}\n\naddFormatToken('H', ['HH', 2], 0, 'hour');\naddFormatToken('h', ['hh', 2], 0, hFormat);\naddFormatToken('k', ['kk', 2], 0, kFormat);\n\naddFormatToken('hmm', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n});\n\naddFormatToken('hmmss', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +\n        zeroFill(this.seconds(), 2);\n});\n\naddFormatToken('Hmm', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2);\n});\n\naddFormatToken('Hmmss', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2) +\n        zeroFill(this.seconds(), 2);\n});\n\nfunction meridiem(token, lowercase)\n{\n    addFormatToken(token, 0, 0, function () {\n        return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n    });\n}\n\nmeridiem('a', true);\nmeridiem('A', false);\n\n// ALIASES\n\naddUnitAlias('hour', 'h');\n\n// PRIORITY\naddUnitPriority('hour', 13);\n\n// PARSING\n\nfunction matchMeridiem(isStrict, locale)\n{\n    return locale._meridiemParse;\n}\n\naddRegexToken('a',  matchMeridiem);\naddRegexToken('A',  matchMeridiem);\naddRegexToken('H',  match1to2);\naddRegexToken('h',  match1to2);\naddRegexToken('k',  match1to2);\naddRegexToken('HH', match1to2, match2);\naddRegexToken('hh', match1to2, match2);\naddRegexToken('kk', match1to2, match2);\n\naddRegexToken('hmm', match3to4);\naddRegexToken('hmmss', match5to6);\naddRegexToken('Hmm', match3to4);\naddRegexToken('Hmmss', match5to6);\n\naddParseToken(['H', 'HH'], HOUR);\naddParseToken(['k', 'kk'], function (input, array, config) {\n    var kInput = toInt(input);\n    array[HOUR] = kInput === 24 ? 0 : kInput;\n});\naddParseToken(['a', 'A'], function (input, array, config) {\n    config._isPm = config._locale.isPM(input);\n    config._meridiem = input;\n});\naddParseToken(['h', 'hh'], function (input, array, config) {\n    array[HOUR] = toInt(input);\n    getParsingFlags(config).bigHour = true;\n});\naddParseToken('hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    getParsingFlags(config).bigHour = true;\n});\naddParseToken('hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    getParsingFlags(config).bigHour = true;\n});\naddParseToken('Hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n});\naddParseToken('Hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n});\n\n// LOCALES\n\nfunction localeIsPM(input)\n{\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n    // Using charAt should be more compatible.\n    return ((input + '').toLowerCase().charAt(0) === 'p');\n}\n\nvar defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\nfunction localeMeridiem(hours, minutes, isLower)\n{\n    if (hours > 11) {\n        return isLower ? 'pm' : 'PM';\n    } else {\n        return isLower ? 'am' : 'AM';\n    }\n}\n\n\n// MOMENTS\n\n// Setting the hour should keep the time, because the user explicitly\n// specified which hour he wants. So trying to maintain the same hour (in\n// a new timezone) makes sense. Adding/subtracting hours does not follow\n// this rule.\nvar getSetHour = makeGetSet('Hours', true);\n\n// months\n// week\n// weekdays\n// meridiem\nvar baseConfig = {\n    calendar: defaultCalendar,\n    longDateFormat: defaultLongDateFormat,\n    invalidDate: defaultInvalidDate,\n    ordinal: defaultOrdinal,\n    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n    relativeTime: defaultRelativeTime,\n\n    months: defaultLocaleMonths,\n    monthsShort: defaultLocaleMonthsShort,\n\n    week: defaultLocaleWeek,\n\n    weekdays: defaultLocaleWeekdays,\n    weekdaysMin: defaultLocaleWeekdaysMin,\n    weekdaysShort: defaultLocaleWeekdaysShort,\n\n    meridiemParse: defaultLocaleMeridiemParse\n};\n\n// internal storage for locale config files\nvar locales = {};\nvar localeFamilies = {};\nvar globalLocale;\n\nfunction normalizeLocale(key)\n{\n    return key ? key.toLowerCase().replace('_', '-') : key;\n}\n\n// pick the locale from the array\n// try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n// substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\nfunction chooseLocale(names)\n{\n    var i = 0, j, next, locale, split;\n\n    while (i < names.length) {\n        split = normalizeLocale(names[i]).split('-');\n        j = split.length;\n        next = normalizeLocale(names[i + 1]);\n        next = next ? next.split('-') : null;\n        while (j > 0) {\n            locale = loadLocale(split.slice(0, j).join('-'));\n            if (locale) {\n                return locale;\n            }\n            if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n                //the next array item is better than a shallower substring of this one\n                break;\n            }\n            j--;\n        }\n        i++;\n    }\n    return null;\n}\n\nfunction loadLocale(name)\n{\n    var oldLocale = null;\n    if (!locales[name] && (typeof module !== 'undefined') &&\n            module && module.exports) {\n        try {\n            oldLocale = globalLocale._abbr;\n            var aliasedRequire = require;\n            aliasedRequire('./locale/' + name);\n            getSetGlobalLocale(oldLocale);\n        } catch (e) {\n}\n    }\n    return locales[name];\n}\n\n// This function will load locale and then set the global locale.  If\n// no arguments are passed in, it will simply return the current global\n// locale key.\nfunction getSetGlobalLocale(key, values)\n{\n    var data;\n    if (key) {\n        if (isUndefined(values)) {\n            data = getLocale(key);\n        } else {\n            data = defineLocale(key, values);\n        }\n\n        if (data) {\n            // moment.duration._locale = moment._locale = data;\n            globalLocale = data;\n        }\n    }\n\n    return globalLocale._abbr;\n}\n\nfunction defineLocale(name, config)\n{\n    if (config !== null) {\n        var parentConfig = baseConfig;\n        config.abbr = name;\n        if (locales[name] != null) {\n            deprecateSimple(\n                'defineLocaleOverride',\n                'use moment.updateLocale(localeName, config) to change ' +\n                    'an existing locale. moment.defineLocale(localeName, ' +\n                    'config) should only be used for creating a new locale ' +\n                'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.'\n            );\n            parentConfig = locales[name]._config;\n        } else if (config.parentLocale != null) {\n            if (locales[config.parentLocale] != null) {\n                parentConfig = locales[config.parentLocale]._config;\n            } else {\n                if (!localeFamilies[config.parentLocale]) {\n                    localeFamilies[config.parentLocale] = [];\n                }\n                localeFamilies[config.parentLocale].push({\n                    name: name,\n                    config: config\n                });\n                return null;\n            }\n        }\n        locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n        if (localeFamilies[name]) {\n            localeFamilies[name].forEach(function (x) {\n                defineLocale(x.name, x.config);\n            });\n        }\n\n        // backwards compat for now: also set the locale\n        // make sure we set the locale AFTER all child locales have been\n        // created, so we won't end up with the child locale set.\n        getSetGlobalLocale(name);\n\n\n        return locales[name];\n    } else {\n        // useful for testing\n        delete locales[name];\n        return null;\n    }\n}\n\nfunction updateLocale(name, config)\n{\n    if (config != null) {\n        var locale, tmpLocale, parentConfig = baseConfig;\n        // MERGE\n        tmpLocale = loadLocale(name);\n        if (tmpLocale != null) {\n            parentConfig = tmpLocale._config;\n        }\n        config = mergeConfigs(parentConfig, config);\n        locale = new Locale(config);\n        locale.parentLocale = locales[name];\n        locales[name] = locale;\n\n        // backwards compat for now: also set the locale\n        getSetGlobalLocale(name);\n    } else {\n        // pass null for config to unupdate, useful for tests\n        if (locales[name] != null) {\n            if (locales[name].parentLocale != null) {\n                locales[name] = locales[name].parentLocale;\n            } else if (locales[name] != null) {\n                delete locales[name];\n            }\n        }\n    }\n    return locales[name];\n}\n\n// returns locale data\nfunction getLocale(key)\n{\n    var locale;\n\n    if (key && key._locale && key._locale._abbr) {\n        key = key._locale._abbr;\n    }\n\n    if (!key) {\n        return globalLocale;\n    }\n\n    if (!isArray(key)) {\n        //short-circuit everything else\n        locale = loadLocale(key);\n        if (locale) {\n            return locale;\n        }\n        key = [key];\n    }\n\n    return chooseLocale(key);\n}\n\nfunction listLocales()\n{\n    return keys(locales);\n}\n\nfunction checkOverflow(m)\n{\n    var overflow;\n    var a = m._a;\n\n    if (a && getParsingFlags(m).overflow === -2) {\n        overflow =\n            a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :\n            a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :\n            a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\n            a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :\n            a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :\n            a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\n            -1;\n\n        if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n            overflow = DATE;\n        }\n        if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n            overflow = WEEK;\n        }\n        if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n            overflow = WEEKDAY;\n        }\n\n        getParsingFlags(m).overflow = overflow;\n    }\n\n    return m;\n}\n\n// Pick the first defined of two or three arguments.\nfunction defaults(a, b, c)\n{\n    if (a != null) {\n        return a;\n    }\n    if (b != null) {\n        return b;\n    }\n    return c;\n}\n\nfunction currentDateArray(config)\n{\n    // hooks is actually the exported moment object\n    var nowValue = new Date(hooks.now());\n    if (config._useUTC) {\n        return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n    }\n    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n}\n\n// convert an array to a date.\n// the array should mirror the parameters below\n// note: all values past the year are optional and will default to the lowest possible value.\n// [year, month, day , hour, minute, second, millisecond]\nfunction configFromArray(config)\n{\n    var i, date, input = [], currentDate, expectedWeekday, yearToUse;\n\n    if (config._d) {\n        return;\n    }\n\n    currentDate = currentDateArray(config);\n\n    //compute day of the year from weeks and weekdays\n    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n        dayOfYearFromWeekInfo(config);\n    }\n\n    //if the day of the year is set, figure out what it is\n    if (config._dayOfYear != null) {\n        yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n        if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n            getParsingFlags(config)._overflowDayOfYear = true;\n        }\n\n        date = createUTCDate(yearToUse, 0, config._dayOfYear);\n        config._a[MONTH] = date.getUTCMonth();\n        config._a[DATE] = date.getUTCDate();\n    }\n\n    // Default to current date.\n    // * if no year, month, day of month are given, default to today\n    // * if day of month is given, default month and year\n    // * if month is given, default only year\n    // * if year is given, don't default anything\n    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n        config._a[i] = input[i] = currentDate[i];\n    }\n\n    // Zero out whatever was not defaulted, including time\n    for (; i < 7; i++) {\n        config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n    }\n\n    // Check for 24:00:00.000\n    if (config._a[HOUR] === 24 &&\n            config._a[MINUTE] === 0 &&\n            config._a[SECOND] === 0 &&\n            config._a[MILLISECOND] === 0) {\n        config._nextDay = true;\n        config._a[HOUR] = 0;\n    }\n\n    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n    expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay();\n\n    // Apply timezone offset from input. The actual utcOffset can be changed\n    // with parseZone.\n    if (config._tzm != null) {\n        config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n    }\n\n    if (config._nextDay) {\n        config._a[HOUR] = 24;\n    }\n\n    // check for mismatching day of week\n    if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n        getParsingFlags(config).weekdayMismatch = true;\n    }\n}\n\nfunction dayOfYearFromWeekInfo(config)\n{\n    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n\n    w = config._w;\n    if (w.GG != null || w.W != null || w.E != null) {\n        dow = 1;\n        doy = 4;\n\n        weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n        week = defaults(w.W, 1);\n        weekday = defaults(w.E, 1);\n        if (weekday < 1 || weekday > 7) {\n            weekdayOverflow = true;\n        }\n    } else {\n        dow = config._locale._week.dow;\n        doy = config._locale._week.doy;\n\n        var curWeek = weekOfYear(createLocal(), dow, doy);\n\n        weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\n        // Default to current week.\n        week = defaults(w.w, curWeek.week);\n\n        if (w.d != null) {\n            // weekday -- low day numbers are considered next week\n            weekday = w.d;\n            if (weekday < 0 || weekday > 6) {\n                weekdayOverflow = true;\n            }\n        } else if (w.e != null) {\n            // local weekday -- counting starts from begining of week\n            weekday = w.e + dow;\n            if (w.e < 0 || w.e > 6) {\n                weekdayOverflow = true;\n            }\n        } else {\n            // default to begining of week\n            weekday = dow;\n        }\n    }\n    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n        getParsingFlags(config)._overflowWeeks = true;\n    } else if (weekdayOverflow != null) {\n        getParsingFlags(config)._overflowWeekday = true;\n    } else {\n        temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n        config._a[YEAR] = temp.year;\n        config._dayOfYear = temp.dayOfYear;\n    }\n}\n\n// iso 8601 regex\n// 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\nvar extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\nvar basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n\nvar tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n\nvar isoDates = [\n    ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n    ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n    ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n    ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n    ['YYYY-DDD', /\\d{4}-\\d{3}/],\n    ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n    ['YYYYYYMMDD', /[+-]\\d{10}/],\n    ['YYYYMMDD', /\\d{8}/],\n    // YYYYMM is NOT allowed by the standard\n    ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n    ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n    ['YYYYDDD', /\\d{7}/]\n];\n\n// iso time formats and regexes\nvar isoTimes = [\n    ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n    ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n    ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n    ['HH:mm', /\\d\\d:\\d\\d/],\n    ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n    ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n    ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n    ['HHmm', /\\d\\d\\d\\d/],\n    ['HH', /\\d\\d/]\n];\n\nvar aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\n\n// date from iso format\nfunction configFromISO(config)\n{\n    var i, l,\n        string = config._i,\n        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n        allowTime, dateFormat, timeFormat, tzFormat;\n\n    if (match) {\n        getParsingFlags(config).iso = true;\n\n        for (i = 0, l = isoDates.length; i < l; i++) {\n            if (isoDates[i][1].exec(match[1])) {\n                dateFormat = isoDates[i][0];\n                allowTime = isoDates[i][2] !== false;\n                break;\n            }\n        }\n        if (dateFormat == null) {\n            config._isValid = false;\n            return;\n        }\n        if (match[3]) {\n            for (i = 0, l = isoTimes.length; i < l; i++) {\n                if (isoTimes[i][1].exec(match[3])) {\n                    // match[2] should be 'T' or space\n                    timeFormat = (match[2] || ' ') + isoTimes[i][0];\n                    break;\n                }\n            }\n            if (timeFormat == null) {\n                config._isValid = false;\n                return;\n            }\n        }\n        if (!allowTime && timeFormat != null) {\n            config._isValid = false;\n            return;\n        }\n        if (match[4]) {\n            if (tzRegex.exec(match[4])) {\n                tzFormat = 'Z';\n            } else {\n                config._isValid = false;\n                return;\n            }\n        }\n        config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n        configFromStringAndFormat(config);\n    } else {\n        config._isValid = false;\n    }\n}\n\n// RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\nvar rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n\nfunction extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr)\n{\n    var result = [\n        untruncateYear(yearStr),\n        defaultLocaleMonthsShort.indexOf(monthStr),\n        parseInt(dayStr, 10),\n        parseInt(hourStr, 10),\n        parseInt(minuteStr, 10)\n    ];\n\n    if (secondStr) {\n        result.push(parseInt(secondStr, 10));\n    }\n\n    return result;\n}\n\nfunction untruncateYear(yearStr)\n{\n    var year = parseInt(yearStr, 10);\n    if (year <= 49) {\n        return 2000 + year;\n    } else if (year <= 999) {\n        return 1900 + year;\n    }\n    return year;\n}\n\nfunction preprocessRFC2822(s)\n{\n    // Remove comments and folding whitespace and replace multiple-spaces with a single space\n    return s.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').trim();\n}\n\nfunction checkWeekday(weekdayStr, parsedInput, config)\n{\n    if (weekdayStr) {\n        var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n            weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n        if (weekdayProvided !== weekdayActual) {\n            getParsingFlags(config).weekdayMismatch = true;\n            config._isValid = false;\n            return false;\n        }\n    }\n    return true;\n}\n\nvar obsOffsets = {\n    UT: 0,\n    GMT: 0,\n    EDT: -4 * 60,\n    EST: -5 * 60,\n    CDT: -5 * 60,\n    CST: -6 * 60,\n    MDT: -6 * 60,\n    MST: -7 * 60,\n    PDT: -7 * 60,\n    PST: -8 * 60\n};\n\nfunction calculateOffset(obsOffset, militaryOffset, numOffset)\n{\n    if (obsOffset) {\n        return obsOffsets[obsOffset];\n    } else if (militaryOffset) {\n        // the only allowed military tz is Z\n        return 0;\n    } else {\n        var hm = parseInt(numOffset, 10);\n        var m = hm % 100, h = (hm - m) / 100;\n        return h * 60 + m;\n    }\n}\n\n// date and time from ref 2822 format\nfunction configFromRFC2822(config)\n{\n    var match = rfc2822.exec(preprocessRFC2822(config._i));\n    if (match) {\n        var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n        if (!checkWeekday(match[1], parsedArray, config)) {\n            return;\n        }\n\n        config._a = parsedArray;\n        config._tzm = calculateOffset(match[8], match[9], match[10]);\n\n        config._d = createUTCDate.apply(null, config._a);\n        config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n        getParsingFlags(config).rfc2822 = true;\n    } else {\n        config._isValid = false;\n    }\n}\n\n// date from iso format or fallback\nfunction configFromString(config)\n{\n    var matched = aspNetJsonRegex.exec(config._i);\n\n    if (matched !== null) {\n        config._d = new Date(+matched[1]);\n        return;\n    }\n\n    configFromISO(config);\n    if (config._isValid === false) {\n        delete config._isValid;\n    } else {\n        return;\n    }\n\n    configFromRFC2822(config);\n    if (config._isValid === false) {\n        delete config._isValid;\n    } else {\n        return;\n    }\n\n    // Final attempt, use Input Fallback\n    hooks.createFromInputFallback(config);\n}\n\nhooks.createFromInputFallback = deprecate(\n    'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n    'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n    'discouraged and will be removed in an upcoming major release. Please refer to ' +\n    'http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n    function (config) {\n        config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n    }\n);\n\n// constant that refers to the ISO standard\nhooks.ISO_8601 = function () {};\n\n// constant that refers to the RFC 2822 form\nhooks.RFC_2822 = function () {};\n\n// date from string and format string\nfunction configFromStringAndFormat(config)\n{\n    if (config._f === hooks.ISO_8601) {\n        configFromISO(config);\n        return;\n    }\n    if (config._f === hooks.RFC_2822) {\n        configFromRFC2822(config);\n        return;\n    }\n    config._a = [];\n    getParsingFlags(config).empty = true;\n\n    // This array is used to make a Date, either with `new Date` or `Date.UTC`\n    var string = '' + config._i,\n        i, parsedInput, tokens, token, skipped,\n        stringLength = string.length,\n        totalParsedInputLength = 0;\n\n    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n    for (i = 0; i < tokens.length; i++) {\n        token = tokens[i];\n        parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n        if (parsedInput) {\n            skipped = string.substr(0, string.indexOf(parsedInput));\n            if (skipped.length > 0) {\n                getParsingFlags(config).unusedInput.push(skipped);\n            }\n            string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n            totalParsedInputLength += parsedInput.length;\n        }\n        // don't parse if it's not a known token\n        if (formatTokenFunctions[token]) {\n            if (parsedInput) {\n                getParsingFlags(config).empty = false;\n            } else {\n                getParsingFlags(config).unusedTokens.push(token);\n            }\n            addTimeToArrayFromToken(token, parsedInput, config);\n        } else if (config._strict && !parsedInput) {\n            getParsingFlags(config).unusedTokens.push(token);\n        }\n    }\n\n    // add remaining unparsed input length to the string\n    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n    if (string.length > 0) {\n        getParsingFlags(config).unusedInput.push(string);\n    }\n\n    // clear _12h flag if hour is <= 12\n    if (config._a[HOUR] <= 12 &&\n        getParsingFlags(config).bigHour === true &&\n        config._a[HOUR] > 0) {\n        getParsingFlags(config).bigHour = undefined;\n    }\n\n    getParsingFlags(config).parsedDateParts = config._a.slice(0);\n    getParsingFlags(config).meridiem = config._meridiem;\n    // handle meridiem\n    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n\n    configFromArray(config);\n    checkOverflow(config);\n}\n\n\nfunction meridiemFixWrap(locale, hour, meridiem)\n{\n    var isPm;\n\n    if (meridiem == null) {\n        // nothing to do\n        return hour;\n    }\n    if (locale.meridiemHour != null) {\n        return locale.meridiemHour(hour, meridiem);\n    } else if (locale.isPM != null) {\n        // Fallback\n        isPm = locale.isPM(meridiem);\n        if (isPm && hour < 12) {\n            hour += 12;\n        }\n        if (!isPm && hour === 12) {\n            hour = 0;\n        }\n        return hour;\n    } else {\n        // this is not supposed to happen\n        return hour;\n    }\n}\n\n// date from string and array of format strings\nfunction configFromStringAndArray(config)\n{\n    var tempConfig,\n        bestMoment,\n\n        scoreToBeat,\n        i,\n        currentScore;\n\n    if (config._f.length === 0) {\n        getParsingFlags(config).invalidFormat = true;\n        config._d = new Date(NaN);\n        return;\n    }\n\n    for (i = 0; i < config._f.length; i++) {\n        currentScore = 0;\n        tempConfig = copyConfig({}, config);\n        if (config._useUTC != null) {\n            tempConfig._useUTC = config._useUTC;\n        }\n        tempConfig._f = config._f[i];\n        configFromStringAndFormat(tempConfig);\n\n        if (!isValid(tempConfig)) {\n            continue;\n        }\n\n        // if there is any input that was not parsed add a penalty for that format\n        currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n        //or tokens\n        currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n        getParsingFlags(tempConfig).score = currentScore;\n\n        if (scoreToBeat == null || currentScore < scoreToBeat) {\n            scoreToBeat = currentScore;\n            bestMoment = tempConfig;\n        }\n    }\n\n    extend(config, bestMoment || tempConfig);\n}\n\nfunction configFromObject(config)\n{\n    if (config._d) {\n        return;\n    }\n\n    var i = normalizeObjectUnits(config._i);\n    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n        return obj && parseInt(obj, 10);\n    });\n\n    configFromArray(config);\n}\n\nfunction createFromConfig(config)\n{\n    var res = new Moment(checkOverflow(prepareConfig(config)));\n    if (res._nextDay) {\n        // Adding is smart enough around DST\n        res.add(1, 'd');\n        res._nextDay = undefined;\n    }\n\n    return res;\n}\n\nfunction prepareConfig(config)\n{\n    var input = config._i,\n        format = config._f;\n\n    config._locale = config._locale || getLocale(config._l);\n\n    if (input === null || (format === undefined && input === '')) {\n        return createInvalid({nullInput: true});\n    }\n\n    if (typeof input === 'string') {\n        config._i = input = config._locale.preparse(input);\n    }\n\n    if (isMoment(input)) {\n        return new Moment(checkOverflow(input));\n    } else if (isDate(input)) {\n        config._d = input;\n    } else if (isArray(format)) {\n        configFromStringAndArray(config);\n    } else if (format) {\n        configFromStringAndFormat(config);\n    } else {\n        configFromInput(config);\n    }\n\n    if (!isValid(config)) {\n        config._d = null;\n    }\n\n    return config;\n}\n\nfunction configFromInput(config)\n{\n    var input = config._i;\n    if (isUndefined(input)) {\n        config._d = new Date(hooks.now());\n    } else if (isDate(input)) {\n        config._d = new Date(input.valueOf());\n    } else if (typeof input === 'string') {\n        configFromString(config);\n    } else if (isArray(input)) {\n        config._a = map(input.slice(0), function (obj) {\n            return parseInt(obj, 10);\n        });\n        configFromArray(config);\n    } else if (isObject(input)) {\n        configFromObject(config);\n    } else if (isNumber(input)) {\n        // from milliseconds\n        config._d = new Date(input);\n    } else {\n        hooks.createFromInputFallback(config);\n    }\n}\n\nfunction createLocalOrUTC(input, format, locale, strict, isUTC)\n{\n    var c = {};\n\n    if (locale === true || locale === false) {\n        strict = locale;\n        locale = undefined;\n    }\n\n    if ((isObject(input) && isObjectEmpty(input)) ||\n            (isArray(input) && input.length === 0)) {\n        input = undefined;\n    }\n    // object construction must be done this way.\n    // https://github.com/moment/moment/issues/1423\n    c._isAMomentObject = true;\n    c._useUTC = c._isUTC = isUTC;\n    c._l = locale;\n    c._i = input;\n    c._f = format;\n    c._strict = strict;\n\n    return createFromConfig(c);\n}\n\nfunction createLocal(input, format, locale, strict)\n{\n    return createLocalOrUTC(input, format, locale, strict, false);\n}\n\nvar prototypeMin = deprecate(\n    'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\n    function () {\n        var other = createLocal.apply(null, arguments);\n        if (this.isValid() && other.isValid()) {\n            return other < this ? this : other;\n        } else {\n            return createInvalid();\n        }\n    }\n);\n\nvar prototypeMax = deprecate(\n    'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\n    function () {\n        var other = createLocal.apply(null, arguments);\n        if (this.isValid() && other.isValid()) {\n            return other > this ? this : other;\n        } else {\n            return createInvalid();\n        }\n    }\n);\n\n// Pick a moment m from moments so that m[fn](other) is true for all\n// other. This relies on the function fn to be transitive.\n//\n// moments should either be an array of moment objects or an array, whose\n// first element is an array of moment objects.\nfunction pickBy(fn, moments)\n{\n    var res, i;\n    if (moments.length === 1 && isArray(moments[0])) {\n        moments = moments[0];\n    }\n    if (!moments.length) {\n        return createLocal();\n    }\n    res = moments[0];\n    for (i = 1; i < moments.length; ++i) {\n        if (!moments[i].isValid() || moments[i][fn](res)) {\n            res = moments[i];\n        }\n    }\n    return res;\n}\n\nfunction min()\n{\n    var args = [].slice.call(arguments, 0);\n\n    return pickBy('isBefore', args);\n}\n\nfunction max()\n{\n    var args = [].slice.call(arguments, 0);\n\n    return pickBy('isAfter', args);\n}\n\nvar now = function () {\n    return Date.now ? Date.now() : +(new Date());\n};\n\nvar ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\nfunction isDurationValid(m)\n{\n    for (var key in m) {\n        if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n            return false;\n        }\n    }\n\n    var unitHasDecimal = false;\n    for (var i = 0; i < ordering.length; ++i) {\n        if (m[ordering[i]]) {\n            if (unitHasDecimal) {\n                return false; // only allow non-integers for smallest unit\n            }\n            if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n                unitHasDecimal = true;\n            }\n        }\n    }\n\n    return true;\n}\n\nfunction isValid$1()\n{\n    return this._isValid;\n}\n\nfunction createInvalid$1()\n{\n    return createDuration(NaN);\n}\n\nfunction Duration(duration)\n{\n    var normalizedInput = normalizeObjectUnits(duration),\n        years = normalizedInput.year || 0,\n        quarters = normalizedInput.quarter || 0,\n        months = normalizedInput.month || 0,\n        weeks = normalizedInput.week || 0,\n        days = normalizedInput.day || 0,\n        hours = normalizedInput.hour || 0,\n        minutes = normalizedInput.minute || 0,\n        seconds = normalizedInput.second || 0,\n        milliseconds = normalizedInput.millisecond || 0;\n\n    this._isValid = isDurationValid(normalizedInput);\n\n    // representation for dateAddRemove\n    this._milliseconds = +milliseconds +\n        seconds * 1e3 + // 1000\n        minutes * 6e4 + // 1000 * 60\n        hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n    // Because of dateAddRemove treats 24 hours as different from a\n    // day when working around DST, we need to store them separately\n    this._days = +days +\n        weeks * 7;\n    // It is impossible to translate months into days without knowing\n    // which months you are are talking about, so we have to store\n    // it separately.\n    this._months = +months +\n        quarters * 3 +\n        years * 12;\n\n    this._data = {};\n\n    this._locale = getLocale();\n\n    this._bubble();\n}\n\nfunction isDuration(obj)\n{\n    return obj instanceof Duration;\n}\n\nfunction absRound(number)\n{\n    if (number < 0) {\n        return Math.round(-1 * number) * -1;\n    } else {\n        return Math.round(number);\n    }\n}\n\n// FORMATTING\n\nfunction offset(token, separator)\n{\n    addFormatToken(token, 0, 0, function () {\n        var offset = this.utcOffset();\n        var sign = '+';\n        if (offset < 0) {\n            offset = -offset;\n            sign = '-';\n        }\n        return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\n    });\n}\n\noffset('Z', ':');\noffset('ZZ', '');\n\n// PARSING\n\naddRegexToken('Z',  matchShortOffset);\naddRegexToken('ZZ', matchShortOffset);\naddParseToken(['Z', 'ZZ'], function (input, array, config) {\n    config._useUTC = true;\n    config._tzm = offsetFromString(matchShortOffset, input);\n});\n\n// HELPERS\n\n// timezone chunker\n// '+10:00' > ['10',  '00']\n// '-1530'  > ['-15', '30']\nvar chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\nfunction offsetFromString(matcher, string)\n{\n    var matches = (string || '').match(matcher);\n\n    if (matches === null) {\n        return null;\n    }\n\n    var chunk   = matches[matches.length - 1] || [];\n    var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n    var minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n    return minutes === 0 ?\n      0 :\n      parts[0] === '+' ? minutes : -minutes;\n}\n\n// Return a moment from input, that is local/utc/zone equivalent to model.\nfunction cloneWithOffset(input, model)\n{\n    var res, diff;\n    if (model._isUTC) {\n        res = model.clone();\n        diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();\n        // Use low-level api, because this fn is low-level api.\n        res._d.setTime(res._d.valueOf() + diff);\n        hooks.updateOffset(res, false);\n        return res;\n    } else {\n        return createLocal(input).local();\n    }\n}\n\nfunction getDateOffset(m)\n{\n    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n    // https://github.com/moment/moment/pull/1871\n    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n}\n\n// HOOKS\n\n// This function will be called whenever a moment is mutated.\n// It is intended to keep the offset in sync with the timezone.\nhooks.updateOffset = function () {};\n\n// MOMENTS\n\n// keepLocalTime = true means only change the timezone, without\n// affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n// 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n// +0200, so we adjust the time as needed, to be valid.\n//\n// Keeping the time actually adds/subtracts (one hour)\n// from the actual represented time. That is why we call updateOffset\n// a second time. In case it wants us to change the offset again\n// _changeInProgress == true case, then we have to adjust, because\n// there is no such time in the given timezone.\nfunction getSetOffset(input, keepLocalTime, keepMinutes)\n{\n    var offset = this._offset || 0,\n        localAdjust;\n    if (!this.isValid()) {\n        return input != null ? this : NaN;\n    }\n    if (input != null) {\n        if (typeof input === 'string') {\n            input = offsetFromString(matchShortOffset, input);\n            if (input === null) {\n                return this;\n            }\n        } else if (Math.abs(input) < 16 && !keepMinutes) {\n            input = input * 60;\n        }\n        if (!this._isUTC && keepLocalTime) {\n            localAdjust = getDateOffset(this);\n        }\n        this._offset = input;\n        this._isUTC = true;\n        if (localAdjust != null) {\n            this.add(localAdjust, 'm');\n        }\n        if (offset !== input) {\n            if (!keepLocalTime || this._changeInProgress) {\n                addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n            } else if (!this._changeInProgress) {\n                this._changeInProgress = true;\n                hooks.updateOffset(this, true);\n                this._changeInProgress = null;\n            }\n        }\n        return this;\n    } else {\n        return this._isUTC ? offset : getDateOffset(this);\n    }\n}\n\nfunction getSetZone(input, keepLocalTime)\n{\n    if (input != null) {\n        if (typeof input !== 'string') {\n            input = -input;\n        }\n\n        this.utcOffset(input, keepLocalTime);\n\n        return this;\n    } else {\n        return -this.utcOffset();\n    }\n}\n\nfunction setOffsetToUTC(keepLocalTime)\n{\n    return this.utcOffset(0, keepLocalTime);\n}\n\nfunction setOffsetToLocal(keepLocalTime)\n{\n    if (this._isUTC) {\n        this.utcOffset(0, keepLocalTime);\n        this._isUTC = false;\n\n        if (keepLocalTime) {\n            this.subtract(getDateOffset(this), 'm');\n        }\n    }\n    return this;\n}\n\nfunction setOffsetToParsedOffset()\n{\n    if (this._tzm != null) {\n        this.utcOffset(this._tzm, false, true);\n    } else if (typeof this._i === 'string') {\n        var tZone = offsetFromString(matchOffset, this._i);\n        if (tZone != null) {\n            this.utcOffset(tZone);\n        } else {\n            this.utcOffset(0, true);\n        }\n    }\n    return this;\n}\n\nfunction hasAlignedHourOffset(input)\n{\n    if (!this.isValid()) {\n        return false;\n    }\n    input = input ? createLocal(input).utcOffset() : 0;\n\n    return (this.utcOffset() - input) % 60 === 0;\n}\n\nfunction isDaylightSavingTime()\n{\n    return (\n        this.utcOffset() > this.clone().month(0).utcOffset() ||\n        this.utcOffset() > this.clone().month(5).utcOffset()\n    );\n}\n\nfunction isDaylightSavingTimeShifted()\n{\n    if (!isUndefined(this._isDSTShifted)) {\n        return this._isDSTShifted;\n    }\n\n    var c = {};\n\n    copyConfig(c, this);\n    c = prepareConfig(c);\n\n    if (c._a) {\n        var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n        this._isDSTShifted = this.isValid() &&\n            compareArrays(c._a, other.toArray()) > 0;\n    } else {\n        this._isDSTShifted = false;\n    }\n\n    return this._isDSTShifted;\n}\n\nfunction isLocal()\n{\n    return this.isValid() ? !this._isUTC : false;\n}\n\nfunction isUtcOffset()\n{\n    return this.isValid() ? this._isUTC : false;\n}\n\nfunction isUtc()\n{\n    return this.isValid() ? this._isUTC && this._offset === 0 : false;\n}\n\n// ASP.NET json date format regex\nvar aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/;\n\n// from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n// somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n// and further modified to allow for strings containing both week and day\nvar isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\nfunction createDuration(input, key)\n{\n    var duration = input,\n        // matching against regexp is expensive, do it on demand\n        match = null,\n        sign,\n        ret,\n        diffRes;\n\n    if (isDuration(input)) {\n        duration = {\n            ms : input._milliseconds,\n            d  : input._days,\n            M  : input._months\n        };\n    } else if (isNumber(input)) {\n        duration = {};\n        if (key) {\n            duration[key] = input;\n        } else {\n            duration.milliseconds = input;\n        }\n    } else if (!!(match = aspNetRegex.exec(input))) {\n        sign = (match[1] === '-') ? -1 : 1;\n        duration = {\n            y  : 0,\n            d  : toInt(match[DATE])                         * sign,\n            h  : toInt(match[HOUR])                         * sign,\n            m  : toInt(match[MINUTE])                       * sign,\n            s  : toInt(match[SECOND])                       * sign,\n            ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n        };\n    } else if (!!(match = isoRegex.exec(input))) {\n        sign = (match[1] === '-') ? -1 : (match[1] === '+') ? 1 : 1;\n        duration = {\n            y : parseIso(match[2], sign),\n            M : parseIso(match[3], sign),\n            w : parseIso(match[4], sign),\n            d : parseIso(match[5], sign),\n            h : parseIso(match[6], sign),\n            m : parseIso(match[7], sign),\n            s : parseIso(match[8], sign)\n        };\n    } else if (duration == null) {// checks for null or undefined\n        duration = {};\n    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n        diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n\n        duration = {};\n        duration.ms = diffRes.milliseconds;\n        duration.M = diffRes.months;\n    }\n\n    ret = new Duration(duration);\n\n    if (isDuration(input) && hasOwnProp(input, '_locale')) {\n        ret._locale = input._locale;\n    }\n\n    return ret;\n}\n\ncreateDuration.fn = Duration.prototype;\ncreateDuration.invalid = createInvalid$1;\n\nfunction parseIso(inp, sign)\n{\n    // We'd normally use ~~inp for this, but unfortunately it also\n    // converts floats to ints.\n    // inp may be undefined, so careful calling replace on it.\n    var res = inp && parseFloat(inp.replace(',', '.'));\n    // apply sign while we're at it\n    return (isNaN(res) ? 0 : res) * sign;\n}\n\nfunction positiveMomentsDifference(base, other)\n{\n    var res = {milliseconds: 0, months: 0};\n\n    res.months = other.month() - base.month() +\n        (other.year() - base.year()) * 12;\n    if (base.clone().add(res.months, 'M').isAfter(other)) {\n        --res.months;\n    }\n\n    res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\n\n    return res;\n}\n\nfunction momentsDifference(base, other)\n{\n    var res;\n    if (!(base.isValid() && other.isValid())) {\n        return {milliseconds: 0, months: 0};\n    }\n\n    other = cloneWithOffset(other, base);\n    if (base.isBefore(other)) {\n        res = positiveMomentsDifference(base, other);\n    } else {\n        res = positiveMomentsDifference(other, base);\n        res.milliseconds = -res.milliseconds;\n        res.months = -res.months;\n    }\n\n    return res;\n}\n\nfunction createAdder(direction, name)\n{\n    return function (val, period) {\n        var dur, tmp;\n        //invert the arguments, but complain about it\n        if (period !== null && !isNaN(+period)) {\n            deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +\n            'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n            tmp = val; val = period; period = tmp;\n        }\n\n        val = typeof val === 'string' ? +val : val;\n        dur = createDuration(val, period);\n        addSubtract(this, dur, direction);\n        return this;\n    };\n}\n\nfunction addSubtract(mom, duration, isAdding, updateOffset)\n{\n    var milliseconds = duration._milliseconds,\n        days = absRound(duration._days),\n        months = absRound(duration._months);\n\n    if (!mom.isValid()) {\n        // No op\n        return;\n    }\n\n    updateOffset = updateOffset == null ? true : updateOffset;\n\n    if (months) {\n        setMonth(mom, get(mom, 'Month') + months * isAdding);\n    }\n    if (days) {\n        set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n    }\n    if (milliseconds) {\n        mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n    }\n    if (updateOffset) {\n        hooks.updateOffset(mom, days || months);\n    }\n}\n\nvar add      = createAdder(1, 'add');\nvar subtract = createAdder(-1, 'subtract');\n\nfunction getCalendarFormat(myMoment, now)\n{\n    var diff = myMoment.diff(now, 'days', true);\n    return diff < -6 ? 'sameElse' :\n            diff < -1 ? 'lastWeek' :\n            diff < 0 ? 'lastDay' :\n            diff < 1 ? 'sameDay' :\n            diff < 2 ? 'nextDay' :\n            diff < 7 ? 'nextWeek' : 'sameElse';\n}\n\nfunction calendar$1(time, formats)\n{\n    // We want to compare the start of today, vs this.\n    // Getting start-of-today depends on whether we're local/utc/offset or not.\n    var now = time || createLocal(),\n        sod = cloneWithOffset(now, this).startOf('day'),\n        format = hooks.calendarFormat(this, sod) || 'sameElse';\n\n    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n\n    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n}\n\nfunction clone()\n{\n    return new Moment(this);\n}\n\nfunction isAfter(input, units)\n{\n    var localInput = isMoment(input) ? input : createLocal(input);\n    if (!(this.isValid() && localInput.isValid())) {\n        return false;\n    }\n    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n    if (units === 'millisecond') {\n        return this.valueOf() > localInput.valueOf();\n    } else {\n        return localInput.valueOf() < this.clone().startOf(units).valueOf();\n    }\n}\n\nfunction isBefore(input, units)\n{\n    var localInput = isMoment(input) ? input : createLocal(input);\n    if (!(this.isValid() && localInput.isValid())) {\n        return false;\n    }\n    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n    if (units === 'millisecond') {\n        return this.valueOf() < localInput.valueOf();\n    } else {\n        return this.clone().endOf(units).valueOf() < localInput.valueOf();\n    }\n}\n\nfunction isBetween(from, to, units, inclusivity)\n{\n    inclusivity = inclusivity || '()';\n    return (inclusivity[0] === '(' ? this.isAfter(from, units) : !this.isBefore(from, units)) &&\n        (inclusivity[1] === ')' ? this.isBefore(to, units) : !this.isAfter(to, units));\n}\n\nfunction isSame(input, units)\n{\n    var localInput = isMoment(input) ? input : createLocal(input),\n        inputMs;\n    if (!(this.isValid() && localInput.isValid())) {\n        return false;\n    }\n    units = normalizeUnits(units || 'millisecond');\n    if (units === 'millisecond') {\n        return this.valueOf() === localInput.valueOf();\n    } else {\n        inputMs = localInput.valueOf();\n        return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n    }\n}\n\nfunction isSameOrAfter(input, units)\n{\n    return this.isSame(input, units) || this.isAfter(input,units);\n}\n\nfunction isSameOrBefore(input, units)\n{\n    return this.isSame(input, units) || this.isBefore(input,units);\n}\n\nfunction diff(input, units, asFloat)\n{\n    var that,\n        zoneDelta,\n        delta, output;\n\n    if (!this.isValid()) {\n        return NaN;\n    }\n\n    that = cloneWithOffset(input, this);\n\n    if (!that.isValid()) {\n        return NaN;\n    }\n\n    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\n    units = normalizeUnits(units);\n\n    switch (units) {\n        case 'year': output = monthDiff(this, that) / 12; break;\n        case 'month': output = monthDiff(this, that); break;\n        case 'quarter': output = monthDiff(this, that) / 3; break;\n        case 'second': output = (this - that) / 1e3; break; // 1000\n        case 'minute': output = (this - that) / 6e4; break; // 1000 * 60\n        case 'hour': output = (this - that) / 36e5; break; // 1000 * 60 * 60\n        case 'day': output = (this - that - zoneDelta) / 864e5; break; // 1000 * 60 * 60 * 24, negate dst\n        case 'week': output = (this - that - zoneDelta) / 6048e5; break; // 1000 * 60 * 60 * 24 * 7, negate dst\n        default: output = this - that;\n    }\n\n    return asFloat ? output : absFloor(output);\n}\n\nfunction monthDiff(a, b)\n{\n    // difference in months\n    var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),\n        // b is in (anchor - 1 month, anchor + 1 month)\n        anchor = a.clone().add(wholeMonthDiff, 'months'),\n        anchor2, adjust;\n\n    if (b - anchor < 0) {\n        anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n        // linear across the month\n        adjust = (b - anchor) / (anchor - anchor2);\n    } else {\n        anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n        // linear across the month\n        adjust = (b - anchor) / (anchor2 - anchor);\n    }\n\n    //check for negative zero, return zero if negative zero\n    return -(wholeMonthDiff + adjust) || 0;\n}\n\nhooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\nhooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\nfunction toString()\n{\n    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n}\n\nfunction toISOString(keepOffset)\n{\n    if (!this.isValid()) {\n        return null;\n    }\n    var utc = keepOffset !== true;\n    var m = utc ? this.clone().utc() : this;\n    if (m.year() < 0 || m.year() > 9999) {\n        return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n    if (isFunction(Date.prototype.toISOString)) {\n        // native implementation is ~50x faster, use it when we can\n        if (utc) {\n            return this.toDate().toISOString();\n        } else {\n            return new Date(this._d.valueOf()).toISOString().replace('Z', formatMoment(m, 'Z'));\n        }\n    }\n    return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n}\n\n/**\n * Return a human readable representation of a moment that can\n * also be evaluated to get a new moment which is the same\n *\n * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n */\nfunction inspect()\n{\n    if (!this.isValid()) {\n        return 'moment.invalid(/* ' + this._i + ' */)';\n    }\n    var func = 'moment';\n    var zone = '';\n    if (!this.isLocal()) {\n        func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n        zone = 'Z';\n    }\n    var prefix = '[' + func + '(\"]';\n    var year = (0 <= this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';\n    var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n    var suffix = zone + '[\")]';\n\n    return this.format(prefix + year + datetime + suffix);\n}\n\nfunction format(inputString)\n{\n    if (!inputString) {\n        inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n    }\n    var output = formatMoment(this, inputString);\n    return this.localeData().postformat(output);\n}\n\nfunction from(time, withoutSuffix)\n{\n    if (this.isValid() &&\n            ((isMoment(time) && time.isValid()) ||\n             createLocal(time).isValid())) {\n        return createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n        return this.localeData().invalidDate();\n    }\n}\n\nfunction fromNow(withoutSuffix)\n{\n    return this.from(createLocal(), withoutSuffix);\n}\n\nfunction to(time, withoutSuffix)\n{\n    if (this.isValid() &&\n            ((isMoment(time) && time.isValid()) ||\n             createLocal(time).isValid())) {\n        return createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n        return this.localeData().invalidDate();\n    }\n}\n\nfunction toNow(withoutSuffix)\n{\n    return this.to(createLocal(), withoutSuffix);\n}\n\n// If passed a locale key, it will set the locale for this\n// instance.  Otherwise, it will return the locale configuration\n// variables for this instance.\nfunction locale(key)\n{\n    var newLocaleData;\n\n    if (key === undefined) {\n        return this._locale._abbr;\n    } else {\n        newLocaleData = getLocale(key);\n        if (newLocaleData != null) {\n            this._locale = newLocaleData;\n        }\n        return this;\n    }\n}\n\nvar lang = deprecate(\n    'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n    function (key) {\n        if (key === undefined) {\n            return this.localeData();\n        } else {\n            return this.locale(key);\n        }\n    }\n);\n\nfunction localeData()\n{\n    return this._locale;\n}\n\nfunction startOf(units)\n{\n    units = normalizeUnits(units);\n    // the following switch intentionally omits break keywords\n    // to utilize falling through the cases.\n    switch (units) {\n        case 'year':\n            this.month(0);\n            /* falls through */\n        case 'quarter':\n        case 'month':\n            this.date(1);\n            /* falls through */\n        case 'week':\n        case 'isoWeek':\n        case 'day':\n        case 'date':\n            this.hours(0);\n            /* falls through */\n        case 'hour':\n            this.minutes(0);\n            /* falls through */\n        case 'minute':\n            this.seconds(0);\n            /* falls through */\n        case 'second':\n            this.milliseconds(0);\n    }\n\n    // weeks are a special case\n    if (units === 'week') {\n        this.weekday(0);\n    }\n    if (units === 'isoWeek') {\n        this.isoWeekday(1);\n    }\n\n    // quarters are also special\n    if (units === 'quarter') {\n        this.month(Math.floor(this.month() / 3) * 3);\n    }\n\n    return this;\n}\n\nfunction endOf(units)\n{\n    units = normalizeUnits(units);\n    if (units === undefined || units === 'millisecond') {\n        return this;\n    }\n\n    // 'date' is an alias for 'day', so it should be considered as such.\n    if (units === 'date') {\n        units = 'day';\n    }\n\n    return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');\n}\n\nfunction valueOf()\n{\n    return this._d.valueOf() - ((this._offset || 0) * 60000);\n}\n\nfunction unix()\n{\n    return Math.floor(this.valueOf() / 1000);\n}\n\nfunction toDate()\n{\n    return new Date(this.valueOf());\n}\n\nfunction toArray()\n{\n    var m = this;\n    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n}\n\nfunction toObject()\n{\n    var m = this;\n    return {\n        years: m.year(),\n        months: m.month(),\n        date: m.date(),\n        hours: m.hours(),\n        minutes: m.minutes(),\n        seconds: m.seconds(),\n        milliseconds: m.milliseconds()\n    };\n}\n\nfunction toJSON()\n{\n    // new Date(NaN).toJSON() === null\n    return this.isValid() ? this.toISOString() : null;\n}\n\nfunction isValid$2()\n{\n    return isValid(this);\n}\n\nfunction parsingFlags()\n{\n    return extend({}, getParsingFlags(this));\n}\n\nfunction invalidAt()\n{\n    return getParsingFlags(this).overflow;\n}\n\nfunction creationData()\n{\n    return {\n        input: this._i,\n        format: this._f,\n        locale: this._locale,\n        isUTC: this._isUTC,\n        strict: this._strict\n    };\n}\n\n// FORMATTING\n\naddFormatToken(0, ['gg', 2], 0, function () {\n    return this.weekYear() % 100;\n});\n\naddFormatToken(0, ['GG', 2], 0, function () {\n    return this.isoWeekYear() % 100;\n});\n\nfunction addWeekYearFormatToken(token, getter)\n{\n    addFormatToken(0, [token, token.length], 0, getter);\n}\n\naddWeekYearFormatToken('gggg',     'weekYear');\naddWeekYearFormatToken('ggggg',    'weekYear');\naddWeekYearFormatToken('GGGG',  'isoWeekYear');\naddWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\n// ALIASES\n\naddUnitAlias('weekYear', 'gg');\naddUnitAlias('isoWeekYear', 'GG');\n\n// PRIORITY\n\naddUnitPriority('weekYear', 1);\naddUnitPriority('isoWeekYear', 1);\n\n\n// PARSING\n\naddRegexToken('G',      matchSigned);\naddRegexToken('g',      matchSigned);\naddRegexToken('GG',     match1to2, match2);\naddRegexToken('gg',     match1to2, match2);\naddRegexToken('GGGG',   match1to4, match4);\naddRegexToken('gggg',   match1to4, match4);\naddRegexToken('GGGGG',  match1to6, match6);\naddRegexToken('ggggg',  match1to6, match6);\n\naddWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n    week[token.substr(0, 2)] = toInt(input);\n});\n\naddWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n    week[token] = hooks.parseTwoDigitYear(input);\n});\n\n// MOMENTS\n\nfunction getSetWeekYear(input)\n{\n    return getSetWeekYearHelper.call(\n        this,\n        input,\n        this.week(),\n        this.weekday(),\n        this.localeData()._week.dow,\n        this.localeData()._week.doy\n    );\n}\n\nfunction getSetISOWeekYear(input)\n{\n    return getSetWeekYearHelper.call(\n        this,\n        input,\n        this.isoWeek(),\n        this.isoWeekday(),\n        1,\n        4\n    );\n}\n\nfunction getISOWeeksInYear()\n{\n    return weeksInYear(this.year(), 1, 4);\n}\n\nfunction getWeeksInYear()\n{\n    var weekInfo = this.localeData()._week;\n    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n}\n\nfunction getSetWeekYearHelper(input, week, weekday, dow, doy)\n{\n    var weeksTarget;\n    if (input == null) {\n        return weekOfYear(this, dow, doy).year;\n    } else {\n        weeksTarget = weeksInYear(input, dow, doy);\n        if (week > weeksTarget) {\n            week = weeksTarget;\n        }\n        return setWeekAll.call(this, input, week, weekday, dow, doy);\n    }\n}\n\nfunction setWeekAll(weekYear, week, weekday, dow, doy)\n{\n    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\n    this.year(date.getUTCFullYear());\n    this.month(date.getUTCMonth());\n    this.date(date.getUTCDate());\n    return this;\n}\n\n// FORMATTING\n\naddFormatToken('Q', 0, 'Qo', 'quarter');\n\n// ALIASES\n\naddUnitAlias('quarter', 'Q');\n\n// PRIORITY\n\naddUnitPriority('quarter', 7);\n\n// PARSING\n\naddRegexToken('Q', match1);\naddParseToken('Q', function (input, array) {\n    array[MONTH] = (toInt(input) - 1) * 3;\n});\n\n// MOMENTS\n\nfunction getSetQuarter(input)\n{\n    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n}\n\n// FORMATTING\n\naddFormatToken('D', ['DD', 2], 'Do', 'date');\n\n// ALIASES\n\naddUnitAlias('date', 'D');\n\n// PRIOROITY\naddUnitPriority('date', 9);\n\n// PARSING\n\naddRegexToken('D',  match1to2);\naddRegexToken('DD', match1to2, match2);\naddRegexToken('Do', function (isStrict, locale) {\n    return isStrict ?\n      (locale._dayOfMonthOrdinalParse || locale._ordinalParse) :\n      locale._dayOfMonthOrdinalParseLenient;\n});\n\naddParseToken(['D', 'DD'], DATE);\naddParseToken('Do', function (input, array) {\n    array[DATE] = toInt(input.match(match1to2)[0]);\n});\n\n// MOMENTS\n\nvar getSetDayOfMonth = makeGetSet('Date', true);\n\n// FORMATTING\n\naddFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n// ALIASES\n\naddUnitAlias('dayOfYear', 'DDD');\n\n// PRIORITY\naddUnitPriority('dayOfYear', 4);\n\n// PARSING\n\naddRegexToken('DDD',  match1to3);\naddRegexToken('DDDD', match3);\naddParseToken(['DDD', 'DDDD'], function (input, array, config) {\n    config._dayOfYear = toInt(input);\n});\n\n// HELPERS\n\n// MOMENTS\n\nfunction getSetDayOfYear(input)\n{\n    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n    return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');\n}\n\n// FORMATTING\n\naddFormatToken('m', ['mm', 2], 0, 'minute');\n\n// ALIASES\n\naddUnitAlias('minute', 'm');\n\n// PRIORITY\n\naddUnitPriority('minute', 14);\n\n// PARSING\n\naddRegexToken('m',  match1to2);\naddRegexToken('mm', match1to2, match2);\naddParseToken(['m', 'mm'], MINUTE);\n\n// MOMENTS\n\nvar getSetMinute = makeGetSet('Minutes', false);\n\n// FORMATTING\n\naddFormatToken('s', ['ss', 2], 0, 'second');\n\n// ALIASES\n\naddUnitAlias('second', 's');\n\n// PRIORITY\n\naddUnitPriority('second', 15);\n\n// PARSING\n\naddRegexToken('s',  match1to2);\naddRegexToken('ss', match1to2, match2);\naddParseToken(['s', 'ss'], SECOND);\n\n// MOMENTS\n\nvar getSetSecond = makeGetSet('Seconds', false);\n\n// FORMATTING\n\naddFormatToken('S', 0, 0, function () {\n    return ~~(this.millisecond() / 100);\n});\n\naddFormatToken(0, ['SS', 2], 0, function () {\n    return ~~(this.millisecond() / 10);\n});\n\naddFormatToken(0, ['SSS', 3], 0, 'millisecond');\naddFormatToken(0, ['SSSS', 4], 0, function () {\n    return this.millisecond() * 10;\n});\naddFormatToken(0, ['SSSSS', 5], 0, function () {\n    return this.millisecond() * 100;\n});\naddFormatToken(0, ['SSSSSS', 6], 0, function () {\n    return this.millisecond() * 1000;\n});\naddFormatToken(0, ['SSSSSSS', 7], 0, function () {\n    return this.millisecond() * 10000;\n});\naddFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n    return this.millisecond() * 100000;\n});\naddFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n    return this.millisecond() * 1000000;\n});\n\n\n// ALIASES\n\naddUnitAlias('millisecond', 'ms');\n\n// PRIORITY\n\naddUnitPriority('millisecond', 16);\n\n// PARSING\n\naddRegexToken('S',    match1to3, match1);\naddRegexToken('SS',   match1to3, match2);\naddRegexToken('SSS',  match1to3, match3);\n\nvar token;\nfor (token = 'SSSS'; token.length <= 9; token += 'S') {\n    addRegexToken(token, matchUnsigned);\n}\n\nfunction parseMs(input, array)\n{\n    array[MILLISECOND] = toInt(('0.' + input) * 1000);\n}\n\nfor (token = 'S'; token.length <= 9; token += 'S') {\n    addParseToken(token, parseMs);\n}\n// MOMENTS\n\nvar getSetMillisecond = makeGetSet('Milliseconds', false);\n\n// FORMATTING\n\naddFormatToken('z',  0, 0, 'zoneAbbr');\naddFormatToken('zz', 0, 0, 'zoneName');\n\n// MOMENTS\n\nfunction getZoneAbbr()\n{\n    return this._isUTC ? 'UTC' : '';\n}\n\nfunction getZoneName()\n{\n    return this._isUTC ? 'Coordinated Universal Time' : '';\n}\n\nvar proto = Moment.prototype;\n\nproto.add               = add;\nproto.calendar          = calendar$1;\nproto.clone             = clone;\nproto.diff              = diff;\nproto.endOf             = endOf;\nproto.format            = format;\nproto.from              = from;\nproto.fromNow           = fromNow;\nproto.to                = to;\nproto.toNow             = toNow;\nproto.get               = stringGet;\nproto.invalidAt         = invalidAt;\nproto.isAfter           = isAfter;\nproto.isBefore          = isBefore;\nproto.isBetween         = isBetween;\nproto.isSame            = isSame;\nproto.isSameOrAfter     = isSameOrAfter;\nproto.isSameOrBefore    = isSameOrBefore;\nproto.isValid           = isValid$2;\nproto.lang              = lang;\nproto.locale            = locale;\nproto.localeData        = localeData;\nproto.max               = prototypeMax;\nproto.min               = prototypeMin;\nproto.parsingFlags      = parsingFlags;\nproto.set               = stringSet;\nproto.startOf           = startOf;\nproto.subtract          = subtract;\nproto.toArray           = toArray;\nproto.toObject          = toObject;\nproto.toDate            = toDate;\nproto.toISOString       = toISOString;\nproto.inspect           = inspect;\nproto.toJSON            = toJSON;\nproto.toString          = toString;\nproto.unix              = unix;\nproto.valueOf           = valueOf;\nproto.creationData      = creationData;\n\n// Year\nproto.year       = getSetYear;\nproto.isLeapYear = getIsLeapYear;\n\n// Week Year\nproto.weekYear    = getSetWeekYear;\nproto.isoWeekYear = getSetISOWeekYear;\n\n// Quarter\nproto.quarter = proto.quarters = getSetQuarter;\n\n// Month\nproto.month       = getSetMonth;\nproto.daysInMonth = getDaysInMonth;\n\n// Week\nproto.week           = proto.weeks        = getSetWeek;\nproto.isoWeek        = proto.isoWeeks     = getSetISOWeek;\nproto.weeksInYear    = getWeeksInYear;\nproto.isoWeeksInYear = getISOWeeksInYear;\n\n// Day\nproto.date       = getSetDayOfMonth;\nproto.day        = proto.days             = getSetDayOfWeek;\nproto.weekday    = getSetLocaleDayOfWeek;\nproto.isoWeekday = getSetISODayOfWeek;\nproto.dayOfYear  = getSetDayOfYear;\n\n// Hour\nproto.hour = proto.hours = getSetHour;\n\n// Minute\nproto.minute = proto.minutes = getSetMinute;\n\n// Second\nproto.second = proto.seconds = getSetSecond;\n\n// Millisecond\nproto.millisecond = proto.milliseconds = getSetMillisecond;\n\n// Offset\nproto.utcOffset            = getSetOffset;\nproto.utc                  = setOffsetToUTC;\nproto.local                = setOffsetToLocal;\nproto.parseZone            = setOffsetToParsedOffset;\nproto.hasAlignedHourOffset = hasAlignedHourOffset;\nproto.isDST                = isDaylightSavingTime;\nproto.isLocal              = isLocal;\nproto.isUtcOffset          = isUtcOffset;\nproto.isUtc                = isUtc;\nproto.isUTC                = isUtc;\n\n// Timezone\nproto.zoneAbbr = getZoneAbbr;\nproto.zoneName = getZoneName;\n\n// Deprecations\nproto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\nproto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\nproto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);\nproto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\nproto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\nfunction createUnix(input)\n{\n    return createLocal(input * 1000);\n}\n\nfunction createInZone()\n{\n    return createLocal.apply(null, arguments).parseZone();\n}\n\nfunction preParsePostFormat(string)\n{\n    return string;\n}\n\nvar proto$1 = Locale.prototype;\n\nproto$1.calendar        = calendar;\nproto$1.longDateFormat  = longDateFormat;\nproto$1.invalidDate     = invalidDate;\nproto$1.ordinal         = ordinal;\nproto$1.preparse        = preParsePostFormat;\nproto$1.postformat      = preParsePostFormat;\nproto$1.relativeTime    = relativeTime;\nproto$1.pastFuture      = pastFuture;\nproto$1.set             = set;\n\n// Month\nproto$1.months            =        localeMonths;\nproto$1.monthsShort       =        localeMonthsShort;\nproto$1.monthsParse       =        localeMonthsParse;\nproto$1.monthsRegex       = monthsRegex;\nproto$1.monthsShortRegex  = monthsShortRegex;\n\n// Week\nproto$1.week = localeWeek;\nproto$1.firstDayOfYear = localeFirstDayOfYear;\nproto$1.firstDayOfWeek = localeFirstDayOfWeek;\n\n// Day of Week\nproto$1.weekdays       =        localeWeekdays;\nproto$1.weekdaysMin    =        localeWeekdaysMin;\nproto$1.weekdaysShort  =        localeWeekdaysShort;\nproto$1.weekdaysParse  =        localeWeekdaysParse;\n\nproto$1.weekdaysRegex       =        weekdaysRegex;\nproto$1.weekdaysShortRegex  =        weekdaysShortRegex;\nproto$1.weekdaysMinRegex    =        weekdaysMinRegex;\n\n// Hours\nproto$1.isPM = localeIsPM;\nproto$1.meridiem = localeMeridiem;\n\nfunction get$1(format, index, field, setter)\n{\n    var locale = getLocale();\n    var utc = createUTC().set(setter, index);\n    return locale[field](utc, format);\n}\n\nfunction listMonthsImpl(format, index, field)\n{\n    if (isNumber(format)) {\n        index = format;\n        format = undefined;\n    }\n\n    format = format || '';\n\n    if (index != null) {\n        return get$1(format, index, field, 'month');\n    }\n\n    var i;\n    var out = [];\n    for (i = 0; i < 12; i++) {\n        out[i] = get$1(format, i, field, 'month');\n    }\n    return out;\n}\n\n// ()\n// (5)\n// (fmt, 5)\n// (fmt)\n// (true)\n// (true, 5)\n// (true, fmt, 5)\n// (true, fmt)\nfunction listWeekdaysImpl(localeSorted, format, index, field)\n{\n    if (typeof localeSorted === 'boolean') {\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n    } else {\n        format = localeSorted;\n        index = format;\n        localeSorted = false;\n\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n    }\n\n    var locale = getLocale(),\n        shift = localeSorted ? locale._week.dow : 0;\n\n    if (index != null) {\n        return get$1(format, (index + shift) % 7, field, 'day');\n    }\n\n    var i;\n    var out = [];\n    for (i = 0; i < 7; i++) {\n        out[i] = get$1(format, (i + shift) % 7, field, 'day');\n    }\n    return out;\n}\n\nfunction listMonths(format, index)\n{\n    return listMonthsImpl(format, index, 'months');\n}\n\nfunction listMonthsShort(format, index)\n{\n    return listMonthsImpl(format, index, 'monthsShort');\n}\n\nfunction listWeekdays(localeSorted, format, index)\n{\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n}\n\nfunction listWeekdaysShort(localeSorted, format, index)\n{\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n}\n\nfunction listWeekdaysMin(localeSorted, format, index)\n{\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n}\n\ngetSetGlobalLocale('en', {\n    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n    ordinal : function (number) {\n        var b = number % 10,\n            output = (toInt(number % 100 / 10) === 1) ? 'th' :\n            (b === 1) ? 'st' :\n            (b === 2) ? 'nd' :\n            (b === 3) ? 'rd' : 'th';\n        return number + output;\n    }\n});\n\n// Side effect imports\nhooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\nhooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n\nvar mathAbs = Math.abs;\n\nfunction abs()\n{\n    var data           = this._data;\n\n    this._milliseconds = mathAbs(this._milliseconds);\n    this._days         = mathAbs(this._days);\n    this._months       = mathAbs(this._months);\n\n    data.milliseconds  = mathAbs(data.milliseconds);\n    data.seconds       = mathAbs(data.seconds);\n    data.minutes       = mathAbs(data.minutes);\n    data.hours         = mathAbs(data.hours);\n    data.months        = mathAbs(data.months);\n    data.years         = mathAbs(data.years);\n\n    return this;\n}\n\nfunction addSubtract$1(duration, input, value, direction)\n{\n    var other = createDuration(input, value);\n\n    duration._milliseconds += direction * other._milliseconds;\n    duration._days         += direction * other._days;\n    duration._months       += direction * other._months;\n\n    return duration._bubble();\n}\n\n// supports only 2.0-style add(1, 's') or add(duration)\nfunction add$1(input, value)\n{\n    return addSubtract$1(this, input, value, 1);\n}\n\n// supports only 2.0-style subtract(1, 's') or subtract(duration)\nfunction subtract$1(input, value)\n{\n    return addSubtract$1(this, input, value, -1);\n}\n\nfunction absCeil(number)\n{\n    if (number < 0) {\n        return Math.floor(number);\n    } else {\n        return Math.ceil(number);\n    }\n}\n\nfunction bubble()\n{\n    var milliseconds = this._milliseconds;\n    var days         = this._days;\n    var months       = this._months;\n    var data         = this._data;\n    var seconds, minutes, hours, years, monthsFromDays;\n\n    // if we have a mix of positive and negative values, bubble down first\n    // check: https://github.com/moment/moment/issues/2166\n    if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||\n            (milliseconds <= 0 && days <= 0 && months <= 0))) {\n        milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n        days = 0;\n        months = 0;\n    }\n\n    // The following code bubbles up values, see the tests for\n    // examples of what that means.\n    data.milliseconds = milliseconds % 1000;\n\n    seconds           = absFloor(milliseconds / 1000);\n    data.seconds      = seconds % 60;\n\n    minutes           = absFloor(seconds / 60);\n    data.minutes      = minutes % 60;\n\n    hours             = absFloor(minutes / 60);\n    data.hours        = hours % 24;\n\n    days += absFloor(hours / 24);\n\n    // convert days to months\n    monthsFromDays = absFloor(daysToMonths(days));\n    months += monthsFromDays;\n    days -= absCeil(monthsToDays(monthsFromDays));\n\n    // 12 months -> 1 year\n    years = absFloor(months / 12);\n    months %= 12;\n\n    data.days   = days;\n    data.months = months;\n    data.years  = years;\n\n    return this;\n}\n\nfunction daysToMonths(days)\n{\n    // 400 years have 146097 days (taking into account leap year rules)\n    // 400 years have 12 months === 4800\n    return days * 4800 / 146097;\n}\n\nfunction monthsToDays(months)\n{\n    // the reverse of daysToMonths\n    return months * 146097 / 4800;\n}\n\nfunction as(units)\n{\n    if (!this.isValid()) {\n        return NaN;\n    }\n    var days;\n    var months;\n    var milliseconds = this._milliseconds;\n\n    units = normalizeUnits(units);\n\n    if (units === 'month' || units === 'year') {\n        days   = this._days   + milliseconds / 864e5;\n        months = this._months + daysToMonths(days);\n        return units === 'month' ? months : months / 12;\n    } else {\n        // handle milliseconds separately because of floating point math errors (issue #1867)\n        days = this._days + Math.round(monthsToDays(this._months));\n        switch (units) {\n            case 'week'   : return days / 7     + milliseconds / 6048e5;\n            case 'day'    : return days         + milliseconds / 864e5;\n            case 'hour'   : return days * 24    + milliseconds / 36e5;\n            case 'minute' : return days * 1440  + milliseconds / 6e4;\n            case 'second' : return days * 86400 + milliseconds / 1000;\n            // Math.floor prevents floating point math errors here\n            case 'millisecond': return Math.floor(days * 864e5) + milliseconds;\n            default: throw new Error('Unknown unit ' + units);\n        }\n    }\n}\n\nfunction valueOf$1()\n{\n    if (!this.isValid()) {\n        return NaN;\n    }\n    return (\n        this._milliseconds +\n        this._days * 864e5 +\n        (this._months % 12) * 2592e6 +\n        toInt(this._months / 12) * 31536e6\n    );\n}\n\nfunction makeAs(alias)\n{\n    return function () {\n        return this.as(alias);\n    };\n}\n\nvar asMilliseconds = makeAs('ms');\nvar asSeconds      = makeAs('s');\nvar asMinutes      = makeAs('m');\nvar asHours        = makeAs('h');\nvar asDays         = makeAs('d');\nvar asWeeks        = makeAs('w');\nvar asMonths       = makeAs('M');\nvar asYears        = makeAs('y');\n\nfunction clone$1()\n{\n    return createDuration(this);\n}\n\nfunction get$2(units)\n{\n    units = normalizeUnits(units);\n    return this.isValid() ? this[units + 's']() : NaN;\n}\n\nfunction makeGetter(name)\n{\n    return function () {\n        return this.isValid() ? this._data[name] : NaN;\n    };\n}\n\nvar milliseconds = makeGetter('milliseconds');\nvar seconds      = makeGetter('seconds');\nvar minutes      = makeGetter('minutes');\nvar hours        = makeGetter('hours');\nvar days         = makeGetter('days');\nvar months       = makeGetter('months');\nvar years        = makeGetter('years');\n\nfunction weeks()\n{\n    return absFloor(this.days() / 7);\n}\n\nvar round = Math.round;\nvar thresholds = {\n    ss: 44,         // a few seconds to seconds\n    s : 45,         // seconds to minute\n    m : 45,         // minutes to hour\n    h : 22,         // hours to day\n    d : 26,         // days to month\n    M : 11          // months to year\n};\n\n// helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\nfunction substituteTimeAgo(string, number, withoutSuffix, isFuture, locale)\n{\n    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n}\n\nfunction relativeTime$1(posNegDuration, withoutSuffix, locale)\n{\n    var duration = createDuration(posNegDuration).abs();\n    var seconds  = round(duration.as('s'));\n    var minutes  = round(duration.as('m'));\n    var hours    = round(duration.as('h'));\n    var days     = round(duration.as('d'));\n    var months   = round(duration.as('M'));\n    var years    = round(duration.as('y'));\n\n    var a = seconds <= thresholds.ss && ['s', seconds] ||\n            seconds < thresholds.s && ['ss', seconds] ||\n            minutes <= 1 && ['m'] ||\n            minutes < thresholds.m && ['mm', minutes] ||\n            hours   <= 1 && ['h'] ||\n            hours   < thresholds.h && ['hh', hours] ||\n            days    <= 1 && ['d'] ||\n            days    < thresholds.d && ['dd', days] ||\n            months  <= 1 && ['M'] ||\n            months  < thresholds.M && ['MM', months] ||\n            years   <= 1 && ['y'] || ['yy', years];\n\n    a[2] = withoutSuffix;\n    a[3] = +posNegDuration > 0;\n    a[4] = locale;\n    return substituteTimeAgo.apply(null, a);\n}\n\n// This function allows you to set the rounding function for relative time strings\nfunction getSetRelativeTimeRounding(roundingFunction)\n{\n    if (roundingFunction === undefined) {\n        return round;\n    }\n    if (typeof(roundingFunction) === 'function') {\n        round = roundingFunction;\n        return true;\n    }\n    return false;\n}\n\n// This function allows you to set a threshold for relative time strings\nfunction getSetRelativeTimeThreshold(threshold, limit)\n{\n    if (thresholds[threshold] === undefined) {\n        return false;\n    }\n    if (limit === undefined) {\n        return thresholds[threshold];\n    }\n    thresholds[threshold] = limit;\n    if (threshold === 's') {\n        thresholds.ss = limit - 1;\n    }\n    return true;\n}\n\nfunction humanize(withSuffix)\n{\n    if (!this.isValid()) {\n        return this.localeData().invalidDate();\n    }\n\n    var locale = this.localeData();\n    var output = relativeTime$1(this, !withSuffix, locale);\n\n    if (withSuffix) {\n        output = locale.pastFuture(+this, output);\n    }\n\n    return locale.postformat(output);\n}\n\nvar abs$1 = Math.abs;\n\nfunction sign(x)\n{\n    return ((x > 0) - (x < 0)) || +x;\n}\n\nfunction toISOString$1()\n{\n    // for ISO strings we do not use the normal bubbling rules:\n    //  * milliseconds bubble up until they become hours\n    //  * days do not bubble at all\n    //  * months bubble up until they become years\n    // This is because there is no context-free conversion between hours and days\n    // (think of clock changes)\n    // and also not between days and months (28-31 days per month)\n    if (!this.isValid()) {\n        return this.localeData().invalidDate();\n    }\n\n    var seconds = abs$1(this._milliseconds) / 1000;\n    var days         = abs$1(this._days);\n    var months       = abs$1(this._months);\n    var minutes, hours, years;\n\n    // 3600 seconds -> 60 minutes -> 1 hour\n    minutes           = absFloor(seconds / 60);\n    hours             = absFloor(minutes / 60);\n    seconds %= 60;\n    minutes %= 60;\n\n    // 12 months -> 1 year\n    years  = absFloor(months / 12);\n    months %= 12;\n\n\n    // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n    var Y = years;\n    var M = months;\n    var D = days;\n    var h = hours;\n    var m = minutes;\n    var s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n    var total = this.asSeconds();\n\n    if (!total) {\n        // this is the same as C#'s (Noda) and python (isodate)...\n        // but not other JS (goog.date)\n        return 'P0D';\n    }\n\n    var totalSign = total < 0 ? '-' : '';\n    var ymSign = sign(this._months) !== sign(total) ? '-' : '';\n    var daysSign = sign(this._days) !== sign(total) ? '-' : '';\n    var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n\n    return totalSign + 'P' +\n        (Y ? ymSign + Y + 'Y' : '') +\n        (M ? ymSign + M + 'M' : '') +\n        (D ? daysSign + D + 'D' : '') +\n        ((h || m || s) ? 'T' : '') +\n        (h ? hmsSign + h + 'H' : '') +\n        (m ? hmsSign + m + 'M' : '') +\n        (s ? hmsSign + s + 'S' : '');\n}\n\nvar proto$2 = Duration.prototype;\n\nproto$2.isValid        = isValid$1;\nproto$2.abs            = abs;\nproto$2.add            = add$1;\nproto$2.subtract       = subtract$1;\nproto$2.as             = as;\nproto$2.asMilliseconds = asMilliseconds;\nproto$2.asSeconds      = asSeconds;\nproto$2.asMinutes      = asMinutes;\nproto$2.asHours        = asHours;\nproto$2.asDays         = asDays;\nproto$2.asWeeks        = asWeeks;\nproto$2.asMonths       = asMonths;\nproto$2.asYears        = asYears;\nproto$2.valueOf        = valueOf$1;\nproto$2._bubble        = bubble;\nproto$2.clone          = clone$1;\nproto$2.get            = get$2;\nproto$2.milliseconds   = milliseconds;\nproto$2.seconds        = seconds;\nproto$2.minutes        = minutes;\nproto$2.hours          = hours;\nproto$2.days           = days;\nproto$2.weeks          = weeks;\nproto$2.months         = months;\nproto$2.years          = years;\nproto$2.humanize       = humanize;\nproto$2.toISOString    = toISOString$1;\nproto$2.toString       = toISOString$1;\nproto$2.toJSON         = toISOString$1;\nproto$2.locale         = locale;\nproto$2.localeData     = localeData;\n\n// Deprecations\nproto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\nproto$2.lang = lang;\n\n// Side effect imports\n\n// FORMATTING\n\naddFormatToken('X', 0, 0, 'unix');\naddFormatToken('x', 0, 0, 'valueOf');\n\n// PARSING\n\naddRegexToken('x', matchSigned);\naddRegexToken('X', matchTimestamp);\naddParseToken('X', function (input, array, config) {\n    config._d = new Date(parseFloat(input, 10) * 1000);\n});\naddParseToken('x', function (input, array, config) {\n    config._d = new Date(toInt(input));\n});\n\n// Side effect imports\n\n\nhooks.version = '2.20.1';\n\nsetHookCallback(createLocal);\n\nhooks.fn                    = proto;\nhooks.min                   = min;\nhooks.max                   = max;\nhooks.now                   = now;\nhooks.utc                   = createUTC;\nhooks.unix                  = createUnix;\nhooks.months                = listMonths;\nhooks.isDate                = isDate;\nhooks.locale                = getSetGlobalLocale;\nhooks.invalid               = createInvalid;\nhooks.duration              = createDuration;\nhooks.isMoment              = isMoment;\nhooks.weekdays              = listWeekdays;\nhooks.parseZone             = createInZone;\nhooks.localeData            = getLocale;\nhooks.isDuration            = isDuration;\nhooks.monthsShort           = listMonthsShort;\nhooks.weekdaysMin           = listWeekdaysMin;\nhooks.defineLocale          = defineLocale;\nhooks.updateLocale          = updateLocale;\nhooks.locales               = listLocales;\nhooks.weekdaysShort         = listWeekdaysShort;\nhooks.normalizeUnits        = normalizeUnits;\nhooks.relativeTimeRounding  = getSetRelativeTimeRounding;\nhooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\nhooks.calendarFormat        = getCalendarFormat;\nhooks.prototype             = proto;\n\n// currently HTML5 input type only supports 24-hour formats\nhooks.HTML5_FMT = {\n    DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',             // <input type=\"datetime-local\" >\n    DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',  // <input type=\"datetime-local\" step=\"1\" >\n    DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',   // <input type=\"datetime-local\" step=\"0.001\" >\n    DATE: 'YYYY-MM-DD',                             // <input type=\"date\" >\n    TIME: 'HH:mm',                                  // <input type=\"time\" >\n    TIME_SECONDS: 'HH:mm:ss',                       // <input type=\"time\" step=\"1\" >\n    TIME_MS: 'HH:mm:ss.SSS',                        // <input type=\"time\" step=\"0.001\" >\n    WEEK: 'YYYY-[W]WW',                             // <input type=\"week\" >\n    MONTH: 'YYYY-MM'                                // <input type=\"month\" >\n};\n\nreturn hooks;\n\n})));\n\n},{}],7:[function (require,module,exports) {\n/**\n * @namespace Chart\n */\nvar Chart = require(29)();\n\nChart.helpers = require(45);\n\nrequire(27)(Chart);\n\nChart.defaults = require(25);\nChart.Element = require(26);\nChart.elements = require(40);\nChart.Interaction = require(28);\nChart.layouts = require(30);\nChart.platform = require(48);\nChart.plugins = require(31);\nChart.Ticks = require(34);\n\nrequire(22)(Chart);\nrequire(23)(Chart);\nrequire(24)(Chart);\nrequire(33)(Chart);\nrequire(32)(Chart);\nrequire(35)(Chart);\n\nrequire(55)(Chart);\nrequire(53)(Chart);\nrequire(54)(Chart);\nrequire(56)(Chart);\nrequire(57)(Chart);\nrequire(58)(Chart);\n\n// Controllers must be loaded after elements\n// See Chart.core.datasetController.dataElementType\nrequire(15)(Chart);\nrequire(16)(Chart);\nrequire(17)(Chart);\nrequire(18)(Chart);\nrequire(19)(Chart);\nrequire(20)(Chart);\nrequire(21)(Chart);\n\nrequire(8)(Chart);\nrequire(9)(Chart);\nrequire(10)(Chart);\nrequire(11)(Chart);\nrequire(12)(Chart);\nrequire(13)(Chart);\nrequire(14)(Chart);\n\n// Loading built-it plugins\nvar plugins = require(49);\nfor (var k in plugins) {\n    if (plugins.hasOwnProperty(k)) {\n        Chart.plugins.register(plugins[k]);\n    }\n}\n\nChart.platform.initialize();\n\nmodule.exports = Chart;\nif (typeof window !== 'undefined') {\n    window.Chart = Chart;\n}\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Legend\n * @deprecated since version 2.1.5\n\n * @private\n */\nChart.Legend = plugins.legend._element;\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Title\n * @deprecated since version 2.1.5\n\n * @private\n */\nChart.Title = plugins.title._element;\n\n/**\n * Provided for backward compatibility, use Chart.plugins instead\n * @namespace Chart.pluginService\n * @deprecated since version 2.1.5\n\n * @private\n */\nChart.pluginService = Chart.plugins;\n\n/**\n * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n * effect, instead simply create/register plugins via plain JavaScript objects.\n * @interface Chart.PluginBase\n * @deprecated since version 2.5.0\n\n * @private\n */\nChart.PluginBase = Chart.Element.extend({});\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas instead.\n * @namespace Chart.canvasHelpers\n * @deprecated since version 2.6.0\n\n * @private\n */\nChart.canvasHelpers = Chart.helpers.canvas;\n\n/**\n * Provided for backward compatibility, use Chart.layouts instead.\n * @namespace Chart.layoutService\n * @deprecated since version 2.8.0\n\n * @private\n */\nChart.layoutService = Chart.layouts;\n\n},{\"10\":10,\"11\":11,\"12\":12,\"13\":13,\"14\":14,\"15\":15,\"16\":16,\"17\":17,\"18\":18,\"19\":19,\"20\":20,\"21\":21,\"22\":22,\"23\":23,\"24\":24,\"25\":25,\"26\":26,\"27\":27,\"28\":28,\"29\":29,\"30\":30,\"31\":31,\"32\":32,\"33\":33,\"34\":34,\"35\":35,\"40\":40,\"45\":45,\"48\":48,\"49\":49,\"53\":53,\"54\":54,\"55\":55,\"56\":56,\"57\":57,\"58\":58,\"8\":8,\"9\":9}],8:[function (require,module,exports) {\n'use strict';\n\nmodule.exports = function (Chart) {\n\n    Chart.Bar = function (context, config) {\n        config.type = 'bar';\n\n        return new Chart(context, config);\n    };\n\n};\n\n},{}],9:[function (require,module,exports) {\n'use strict';\n\nmodule.exports = function (Chart) {\n\n    Chart.Bubble = function (context, config) {\n        config.type = 'bubble';\n        return new Chart(context, config);\n    };\n\n};\n\n},{}],10:[function (require,module,exports) {\n'use strict';\n\nmodule.exports = function (Chart) {\n\n    Chart.Doughnut = function (context, config) {\n        config.type = 'doughnut';\n\n        return new Chart(context, config);\n    };\n\n};\n\n},{}],11:[function (require,module,exports) {\n'use strict';\n\nmodule.exports = function (Chart) {\n\n    Chart.Line = function (context, config) {\n        config.type = 'line';\n\n        return new Chart(context, config);\n    };\n\n};\n\n},{}],12:[function (require,module,exports) {\n'use strict';\n\nmodule.exports = function (Chart) {\n\n    Chart.PolarArea = function (context, config) {\n        config.type = 'polarArea';\n\n        return new Chart(context, config);\n    };\n\n};\n\n},{}],13:[function (require,module,exports) {\n'use strict';\n\nmodule.exports = function (Chart) {\n\n    Chart.Radar = function (context, config) {\n        config.type = 'radar';\n\n        return new Chart(context, config);\n    };\n\n};\n\n},{}],14:[function (require,module,exports) {\n'use strict';\n\nmodule.exports = function (Chart) {\n    Chart.Scatter = function (context, config) {\n        config.type = 'scatter';\n        return new Chart(context, config);\n    };\n};\n\n},{}],15:[function (require,module,exports) {\n'use strict';\n\nvar defaults = require(25);\nvar elements = require(40);\nvar helpers = require(45);\n\ndefaults._set('bar', {\n    hover: {\n        mode: 'label'\n    },\n\n    scales: {\n        xAxes: [{\n            type: 'category',\n\n            // Specific to Bar Controller\n            categoryPercentage: 0.8,\n            barPercentage: 0.9,\n\n            // offset settings\n            offset: true,\n\n            // grid line settings\n            gridLines: {\n                offsetGridLines: true\n            }\n        }],\n\n        yAxes: [{\n            type: 'linear'\n        }]\n    }\n});\n\ndefaults._set('horizontalBar', {\n    hover: {\n        mode: 'index',\n        axis: 'y'\n    },\n\n    scales: {\n        xAxes: [{\n            type: 'linear',\n            position: 'bottom'\n        }],\n\n        yAxes: [{\n            position: 'left',\n            type: 'category',\n\n            // Specific to Horizontal Bar Controller\n            categoryPercentage: 0.8,\n            barPercentage: 0.9,\n\n            // offset settings\n            offset: true,\n\n            // grid line settings\n            gridLines: {\n                offsetGridLines: true\n            }\n        }]\n    },\n\n    elements: {\n        rectangle: {\n            borderSkipped: 'left'\n        }\n    },\n\n    tooltips: {\n        callbacks: {\n            title: function (item, data) {\n                // Pick first xLabel for now\n                var title = '';\n\n                if (item.length > 0) {\n                    if (item[0].yLabel) {\n                        title = item[0].yLabel;\n                    } else if (data.labels.length > 0 && item[0].index < data.labels.length) {\n                        title = data.labels[item[0].index];\n                    }\n                }\n\n                return title;\n            },\n\n            label: function (item, data) {\n                var datasetLabel = data.datasets[item.datasetIndex].label || '';\n                return datasetLabel + ': ' + item.xLabel;\n            }\n        },\n        mode: 'index',\n        axis: 'y'\n    }\n});\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(scale, pixels)\n{\n    var min = scale.isHorizontal() ? scale.width : scale.height;\n    var ticks = scale.getTicks();\n    var prev, curr, i, ilen;\n\n    for (i = 1, ilen = pixels.length; i < ilen; ++i) {\n        min = Math.min(min, pixels[i] - pixels[i - 1]);\n    }\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        curr = scale.getPixelForTick(i);\n        min = i > 0 ? Math.min(min, curr - prev) : min;\n        prev = curr;\n    }\n\n    return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options)\n{\n    var thickness = options.barThickness;\n    var count = ruler.stackCount;\n    var curr = ruler.pixels[index];\n    var size, ratio;\n\n    if (helpers.isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        // When bar thickness is enforced, category and bar percentages are ignored.\n        // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n        // and deprecate barPercentage since this value is ignored when thickness is absolute.\n        size = thickness * count;\n        ratio = 1;\n    }\n\n    return {\n        chunk: size / count,\n        ratio: ratio,\n        start: curr - (size / 2)\n    };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options)\n{\n    var pixels = ruler.pixels;\n    var curr = pixels[index];\n    var prev = index > 0 ? pixels[index - 1] : null;\n    var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    var percent = options.categoryPercentage;\n    var start, size;\n\n    if (prev === null) {\n        // first data: its size is double based on the next point or,\n        // if it's also the last data, we use the scale end extremity.\n        prev = curr - (next === null ? ruler.end - curr : next - curr);\n    }\n\n    if (next === null) {\n        // last data: its size is also double based on the previous point.\n        next = curr + curr - prev;\n    }\n\n    start = curr - ((curr - prev) / 2) * percent;\n    size = ((next - prev) / 2) * percent;\n\n    return {\n        chunk: size / ruler.stackCount,\n        ratio: options.barPercentage,\n        start: start\n    };\n}\n\nmodule.exports = function (Chart) {\n\n    Chart.controllers.bar = Chart.DatasetController.extend({\n\n        dataElementType: elements.Rectangle,\n\n        initialize: function () {\n            var me = this;\n            var meta;\n\n            Chart.DatasetController.prototype.initialize.apply(me, arguments);\n\n            meta = me.getMeta();\n            meta.stack = me.getDataset().stack;\n            meta.bar = true;\n        },\n\n        update: function (reset) {\n            var me = this;\n            var rects = me.getMeta().data;\n            var i, ilen;\n\n            me._ruler = me.getRuler();\n\n            for (i = 0, ilen = rects.length; i < ilen; ++i) {\n                me.updateElement(rects[i], i, reset);\n            }\n        },\n\n        updateElement: function (rectangle, index, reset) {\n            var me = this;\n            var chart = me.chart;\n            var meta = me.getMeta();\n            var dataset = me.getDataset();\n            var custom = rectangle.custom || {};\n            var rectangleOptions = chart.options.elements.rectangle;\n\n            rectangle._xScale = me.getScaleForId(meta.xAxisID);\n            rectangle._yScale = me.getScaleForId(meta.yAxisID);\n            rectangle._datasetIndex = me.index;\n            rectangle._index = index;\n\n            rectangle._model = {\n                datasetLabel: dataset.label,\n                label: chart.data.labels[index],\n                borderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleOptions.borderSkipped,\n                backgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleOptions.backgroundColor),\n                borderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleOptions.borderColor),\n                borderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleOptions.borderWidth)\n            };\n\n            me.updateElementGeometry(rectangle, index, reset);\n\n            rectangle.pivot();\n        },\n\n        /**\n         * @private\n         */\n        updateElementGeometry: function (rectangle, index, reset) {\n            var me = this;\n            var model = rectangle._model;\n            var vscale = me.getValueScale();\n            var base = vscale.getBasePixel();\n            var horizontal = vscale.isHorizontal();\n            var ruler = me._ruler || me.getRuler();\n            var vpixels = me.calculateBarValuePixels(me.index, index);\n            var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n\n            model.horizontal = horizontal;\n            model.base = reset ? base : vpixels.base;\n            model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n            model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n            model.height = horizontal ? ipixels.size : undefined;\n            model.width = horizontal ? undefined : ipixels.size;\n        },\n\n        /**\n         * @private\n         */\n        getValueScaleId: function () {\n            return this.getMeta().yAxisID;\n        },\n\n        /**\n         * @private\n         */\n        getIndexScaleId: function () {\n            return this.getMeta().xAxisID;\n        },\n\n        /**\n         * @private\n         */\n        getValueScale: function () {\n            return this.getScaleForId(this.getValueScaleId());\n        },\n\n        /**\n         * @private\n         */\n        getIndexScale: function () {\n            return this.getScaleForId(this.getIndexScaleId());\n        },\n\n        /**\n         * Returns the stacks based on groups and bar visibility.\n         * @param {Number} [last] - The dataset index\n         * @returns {Array} The stack list\n         * @private\n         */\n        _getStacks: function (last) {\n            var me = this;\n            var chart = me.chart;\n            var scale = me.getIndexScale();\n            var stacked = scale.options.stacked;\n            var ilen = last === undefined ? chart.data.datasets.length : last + 1;\n            var stacks = [];\n            var i, meta;\n\n            for (i = 0; i < ilen; ++i) {\n                meta = chart.getDatasetMeta(i);\n                if (meta.bar && chart.isDatasetVisible(i) &&\n                    (stacked === false ||\n                    (stacked === true && stacks.indexOf(meta.stack) === -1) ||\n                    (stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1)))) {\n                    stacks.push(meta.stack);\n                }\n            }\n\n            return stacks;\n        },\n\n        /**\n         * Returns the effective number of stacks based on groups and bar visibility.\n         * @private\n         */\n        getStackCount: function () {\n            return this._getStacks().length;\n        },\n\n        /**\n         * Returns the stack index for the given dataset based on groups and bar visibility.\n         * @param {Number} [datasetIndex] - The dataset index\n         * @param {String} [name] - The stack name to find\n         * @returns {Number} The stack index\n         * @private\n         */\n        getStackIndex: function (datasetIndex, name) {\n            var stacks = this._getStacks(datasetIndex);\n            var index = (name !== undefined)\n                ? stacks.indexOf(name)\n                : -1; // indexOf returns -1 if element is not present\n\n            return (index === -1)\n                ? stacks.length - 1\n                : index;\n        },\n\n        /**\n         * @private\n         */\n        getRuler: function () {\n            var me = this;\n            var scale = me.getIndexScale();\n            var stackCount = me.getStackCount();\n            var datasetIndex = me.index;\n            var isHorizontal = scale.isHorizontal();\n            var start = isHorizontal ? scale.left : scale.top;\n            var end = start + (isHorizontal ? scale.width : scale.height);\n            var pixels = [];\n            var i, ilen, min;\n\n            for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n                pixels.push(scale.getPixelForValue(null, i, datasetIndex));\n            }\n\n            min = helpers.isNullOrUndef(scale.options.barThickness)\n                ? computeMinSampleSize(scale, pixels)\n                : -1;\n\n            return {\n                min: min,\n                pixels: pixels,\n                start: start,\n                end: end,\n                stackCount: stackCount,\n                scale: scale\n            };\n        },\n\n        /**\n         * Note: pixel values are not clamped to the scale area.\n         * @private\n         */\n        calculateBarValuePixels: function (datasetIndex, index) {\n            var me = this;\n            var chart = me.chart;\n            var meta = me.getMeta();\n            var scale = me.getValueScale();\n            var datasets = chart.data.datasets;\n            var value = scale.getRightValue(datasets[datasetIndex].data[index]);\n            var stacked = scale.options.stacked;\n            var stack = meta.stack;\n            var start = 0;\n            var i, imeta, ivalue, base, head, size;\n\n            if (stacked || (stacked === undefined && stack !== undefined)) {\n                for (i = 0; i < datasetIndex; ++i) {\n                    imeta = chart.getDatasetMeta(i);\n\n                    if (imeta.bar &&\n                        imeta.stack === stack &&\n                        imeta.controller.getValueScaleId() === scale.id &&\n                        chart.isDatasetVisible(i)) {\n                        ivalue = scale.getRightValue(datasets[i].data[index]);\n                        if ((value < 0 && ivalue < 0) || (value >= 0 && ivalue > 0)) {\n                            start += ivalue;\n                        }\n                    }\n                }\n            }\n\n            base = scale.getPixelForValue(start);\n            head = scale.getPixelForValue(start + value);\n            size = (head - base) / 2;\n\n            return {\n                size: size,\n                base: base,\n                head: head,\n                center: head + size / 2\n            };\n        },\n\n        /**\n         * @private\n         */\n        calculateBarIndexPixels: function (datasetIndex, index, ruler) {\n            var me = this;\n            var options = ruler.scale.options;\n            var range = options.barThickness === 'flex'\n                ? computeFlexCategoryTraits(index, ruler, options)\n                : computeFitCategoryTraits(index, ruler, options);\n\n            var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n            var center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n            var size = Math.min(\n                helpers.valueOrDefault(options.maxBarThickness, Infinity),\n                range.chunk * range.ratio\n            );\n\n            return {\n                base: center - size / 2,\n                head: center + size / 2,\n                center: center,\n                size: size\n            };\n        },\n\n        draw: function () {\n            var me = this;\n            var chart = me.chart;\n            var scale = me.getValueScale();\n            var rects = me.getMeta().data;\n            var dataset = me.getDataset();\n            var ilen = rects.length;\n            var i = 0;\n\n            helpers.canvas.clipArea(chart.ctx, chart.chartArea);\n\n            for (; i < ilen; ++i) {\n                if (!isNaN(scale.getRightValue(dataset.data[i]))) {\n                    rects[i].draw();\n                }\n            }\n\n            helpers.canvas.unclipArea(chart.ctx);\n        },\n\n        setHoverStyle: function (rectangle) {\n            var dataset = this.chart.data.datasets[rectangle._datasetIndex];\n            var index = rectangle._index;\n            var custom = rectangle.custom || {};\n            var model = rectangle._model;\n\n            model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.hoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n            model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.hoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n            model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\n        },\n\n        removeHoverStyle: function (rectangle) {\n            var dataset = this.chart.data.datasets[rectangle._datasetIndex];\n            var index = rectangle._index;\n            var custom = rectangle.custom || {};\n            var model = rectangle._model;\n            var rectangleElementOptions = this.chart.options.elements.rectangle;\n\n            model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor);\n            model.borderColor = custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor);\n            model.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth);\n        }\n    });\n\n    Chart.controllers.horizontalBar = Chart.controllers.bar.extend({\n        /**\n         * @private\n         */\n        getValueScaleId: function () {\n            return this.getMeta().xAxisID;\n        },\n\n        /**\n         * @private\n         */\n        getIndexScaleId: function () {\n            return this.getMeta().yAxisID;\n        }\n    });\n};\n\n},{\"25\":25,\"40\":40,\"45\":45}],16:[function (require,module,exports) {\n'use strict';\n\nvar defaults = require(25);\nvar elements = require(40);\nvar helpers = require(45);\n\ndefaults._set('bubble', {\n    hover: {\n        mode: 'single'\n    },\n\n    scales: {\n        xAxes: [{\n            type: 'linear', // bubble should probably use a linear scale by default\n            position: 'bottom',\n            id: 'x-axis-0' // need an ID so datasets can reference the scale\n        }],\n        yAxes: [{\n            type: 'linear',\n            position: 'left',\n            id: 'y-axis-0'\n        }]\n    },\n\n    tooltips: {\n        callbacks: {\n            title: function () {\n                // Title doesn't make sense for scatter since we format the data as a point\n                return '';\n            },\n            label: function (item, data) {\n                var datasetLabel = data.datasets[item.datasetIndex].label || '';\n                var dataPoint = data.datasets[item.datasetIndex].data[item.index];\n                return datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n            }\n        }\n    }\n});\n\n\nmodule.exports = function (Chart) {\n\n    Chart.controllers.bubble = Chart.DatasetController.extend({\n        /**\n         * @protected\n         */\n        dataElementType: elements.Point,\n\n        /**\n         * @protected\n         */\n        update: function (reset) {\n            var me = this;\n            var meta = me.getMeta();\n            var points = meta.data;\n\n            // Update Points\n            helpers.each(points, function (point, index) {\n                me.updateElement(point, index, reset);\n            });\n        },\n\n        /**\n         * @protected\n         */\n        updateElement: function (point, index, reset) {\n            var me = this;\n            var meta = me.getMeta();\n            var custom = point.custom || {};\n            var xScale = me.getScaleForId(meta.xAxisID);\n            var yScale = me.getScaleForId(meta.yAxisID);\n            var options = me._resolveElementOptions(point, index);\n            var data = me.getDataset().data[index];\n            var dsIndex = me.index;\n\n            var x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n            var y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n\n            point._xScale = xScale;\n            point._yScale = yScale;\n            point._options = options;\n            point._datasetIndex = dsIndex;\n            point._index = index;\n            point._model = {\n                backgroundColor: options.backgroundColor,\n                borderColor: options.borderColor,\n                borderWidth: options.borderWidth,\n                hitRadius: options.hitRadius,\n                pointStyle: options.pointStyle,\n                radius: reset ? 0 : options.radius,\n                skip: custom.skip || isNaN(x) || isNaN(y),\n                x: x,\n                y: y,\n            };\n\n            point.pivot();\n        },\n\n        /**\n         * @protected\n         */\n        setHoverStyle: function (point) {\n            var model = point._model;\n            var options = point._options;\n\n            model.backgroundColor = helpers.valueOrDefault(options.hoverBackgroundColor, helpers.getHoverColor(options.backgroundColor));\n            model.borderColor = helpers.valueOrDefault(options.hoverBorderColor, helpers.getHoverColor(options.borderColor));\n            model.borderWidth = helpers.valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n            model.radius = options.radius + options.hoverRadius;\n        },\n\n        /**\n         * @protected\n         */\n        removeHoverStyle: function (point) {\n            var model = point._model;\n            var options = point._options;\n\n            model.backgroundColor = options.backgroundColor;\n            model.borderColor = options.borderColor;\n            model.borderWidth = options.borderWidth;\n            model.radius = options.radius;\n        },\n\n        /**\n         * @private\n         */\n        _resolveElementOptions: function (point, index) {\n            var me = this;\n            var chart = me.chart;\n            var datasets = chart.data.datasets;\n            var dataset = datasets[me.index];\n            var custom = point.custom || {};\n            var options = chart.options.elements.point;\n            var resolve = helpers.options.resolve;\n            var data = dataset.data[index];\n            var values = {};\n            var i, ilen, key;\n\n            // Scriptable options\n            var context = {\n                chart: chart,\n                dataIndex: index,\n                dataset: dataset,\n                datasetIndex: me.index\n            };\n\n            var keys = [\n                'backgroundColor',\n                'borderColor',\n                'borderWidth',\n                'hoverBackgroundColor',\n                'hoverBorderColor',\n                'hoverBorderWidth',\n                'hoverRadius',\n                'hitRadius',\n                'pointStyle'\n            ];\n\n            for (i = 0, ilen = keys.length; i < ilen; ++i) {\n                key = keys[i];\n                values[key] = resolve([\n                    custom[key],\n                    dataset[key],\n                    options[key]\n                ], context, index);\n            }\n\n            // Custom radius resolution\n            values.radius = resolve([\n                custom.radius,\n                data ? data.r : undefined,\n                dataset.radius,\n                options.radius\n            ], context, index);\n\n            return values;\n        }\n    });\n};\n\n},{\"25\":25,\"40\":40,\"45\":45}],17:[function (require,module,exports) {\n'use strict';\n\nvar defaults = require(25);\nvar elements = require(40);\nvar helpers = require(45);\n\ndefaults._set('doughnut', {\n    animation: {\n        // Boolean - Whether we animate the rotation of the Doughnut\n        animateRotate: true,\n        // Boolean - Whether we animate scaling the Doughnut from the centre\n        animateScale: false\n    },\n    hover: {\n        mode: 'single'\n    },\n    legendCallback: function (chart) {\n        var text = [];\n        text.push('<ul class=\"' + chart.id + '-legend\">');\n\n        var data = chart.data;\n        var datasets = data.datasets;\n        var labels = data.labels;\n\n        if (datasets.length) {\n            for (var i = 0; i < datasets[0].data.length; ++i) {\n                text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n                if (labels[i]) {\n                    text.push(labels[i]);\n                }\n                text.push('</li>');\n            }\n        }\n\n        text.push('</ul>');\n        return text.join('');\n    },\n    legend: {\n        labels: {\n            generateLabels: function (chart) {\n                var data = chart.data;\n                if (data.labels.length && data.datasets.length) {\n                    return data.labels.map(function (label, i) {\n                        var meta = chart.getDatasetMeta(0);\n                        var ds = data.datasets[0];\n                        var arc = meta.data[i];\n                        var custom = arc && arc.custom || {};\n                        var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n                        var arcOpts = chart.options.elements.arc;\n                        var fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n                        var stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n                        var bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n\n                        return {\n                            text: label,\n                            fillStyle: fill,\n                            strokeStyle: stroke,\n                            lineWidth: bw,\n                            hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n                            // Extra data used for toggling the correct item\n                            index: i\n                        };\n                    });\n                }\n                return [];\n            }\n        },\n\n        onClick: function (e, legendItem) {\n            var index = legendItem.index;\n            var chart = this.chart;\n            var i, ilen, meta;\n\n            for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n                meta = chart.getDatasetMeta(i);\n                // toggle visibility of index if exists\n                if (meta.data[index]) {\n                    meta.data[index].hidden = !meta.data[index].hidden;\n                }\n            }\n\n            chart.update();\n        }\n    },\n\n    // The percentage of the chart that we cut out of the middle.\n    cutoutPercentage: 50,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: Math.PI * -0.5,\n\n    // The total circumference of the chart.\n    circumference: Math.PI * 2.0,\n\n    // Need to override these to give a nice default\n    tooltips: {\n        callbacks: {\n            title: function () {\n                return '';\n            },\n            label: function (tooltipItem, data) {\n                var dataLabel = data.labels[tooltipItem.index];\n                var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n                if (helpers.isArray(dataLabel)) {\n                    // show value on first line of multiline label\n                    // need to clone because we are changing the value\n                    dataLabel = dataLabel.slice();\n                    dataLabel[0] += value;\n                } else {\n                    dataLabel += value;\n                }\n\n                return dataLabel;\n            }\n        }\n    }\n});\n\ndefaults._set('pie', helpers.clone(defaults.doughnut));\ndefaults._set('pie', {\n    cutoutPercentage: 0\n});\n\nmodule.exports = function (Chart) {\n\n    Chart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend({\n\n        dataElementType: elements.Arc,\n\n        linkScales: helpers.noop,\n\n        // Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n        getRingIndex: function (datasetIndex) {\n            var ringIndex = 0;\n\n            for (var j = 0; j < datasetIndex; ++j) {\n                if (this.chart.isDatasetVisible(j)) {\n                    ++ringIndex;\n                }\n            }\n\n            return ringIndex;\n        },\n\n        update: function (reset) {\n            var me = this;\n            var chart = me.chart;\n            var chartArea = chart.chartArea;\n            var opts = chart.options;\n            var arcOpts = opts.elements.arc;\n            var availableWidth = chartArea.right - chartArea.left - arcOpts.borderWidth;\n            var availableHeight = chartArea.bottom - chartArea.top - arcOpts.borderWidth;\n            var minSize = Math.min(availableWidth, availableHeight);\n            var offset = {x: 0, y: 0};\n            var meta = me.getMeta();\n            var cutoutPercentage = opts.cutoutPercentage;\n            var circumference = opts.circumference;\n\n            // If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n            if (circumference < Math.PI * 2.0) {\n                var startAngle = opts.rotation % (Math.PI * 2.0);\n                startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n                var endAngle = startAngle + circumference;\n                var start = {x: Math.cos(startAngle), y: Math.sin(startAngle)};\n                var end = {x: Math.cos(endAngle), y: Math.sin(endAngle)};\n                var contains0 = (startAngle <= 0 && endAngle >= 0) || (startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle);\n                var contains90 = (startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle);\n                var contains180 = (startAngle <= -Math.PI && -Math.PI <= endAngle) || (startAngle <= Math.PI && Math.PI <= endAngle);\n                var contains270 = (startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle);\n                var cutout = cutoutPercentage / 100.0;\n                var min = {x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)), y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))};\n                var max = {x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)), y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))};\n                var size = {width: (max.x - min.x) * 0.5, height: (max.y - min.y) * 0.5};\n                minSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n                offset = {x: (max.x + min.x) * -0.5, y: (max.y + min.y) * -0.5};\n            }\n\n            chart.borderWidth = me.getMaxBorderWidth(meta.data);\n            chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n            chart.innerRadius = Math.max(cutoutPercentage ? (chart.outerRadius / 100) * (cutoutPercentage) : 0, 0);\n            chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n            chart.offsetX = offset.x * chart.outerRadius;\n            chart.offsetY = offset.y * chart.outerRadius;\n\n            meta.total = me.calculateTotal();\n\n            me.outerRadius = chart.outerRadius - (chart.radiusLength * me.getRingIndex(me.index));\n            me.innerRadius = Math.max(me.outerRadius - chart.radiusLength, 0);\n\n            helpers.each(meta.data, function (arc, index) {\n                me.updateElement(arc, index, reset);\n            });\n        },\n\n        updateElement: function (arc, index, reset) {\n            var me = this;\n            var chart = me.chart;\n            var chartArea = chart.chartArea;\n            var opts = chart.options;\n            var animationOpts = opts.animation;\n            var centerX = (chartArea.left + chartArea.right) / 2;\n            var centerY = (chartArea.top + chartArea.bottom) / 2;\n            var startAngle = opts.rotation; // non reset case handled later\n            var endAngle = opts.rotation; // non reset case handled later\n            var dataset = me.getDataset();\n            var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n            var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n            var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n            var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\n            helpers.extend(arc, {\n                // Utility\n                _datasetIndex: me.index,\n                _index: index,\n\n                // Desired view properties\n                _model: {\n                    x: centerX + chart.offsetX,\n                    y: centerY + chart.offsetY,\n                    startAngle: startAngle,\n                    endAngle: endAngle,\n                    circumference: circumference,\n                    outerRadius: outerRadius,\n                    innerRadius: innerRadius,\n                    label: valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n                }\n            });\n\n            var model = arc._model;\n            // Resets the visual styles\n            this.removeHoverStyle(arc);\n\n            // Set correct angles if not resetting\n            if (!reset || !animationOpts.animateRotate) {\n                if (index === 0) {\n                    model.startAngle = opts.rotation;\n                } else {\n                    model.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n                }\n\n                model.endAngle = model.startAngle + model.circumference;\n            }\n\n            arc.pivot();\n        },\n\n        removeHoverStyle: function (arc) {\n            Chart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\n        },\n\n        calculateTotal: function () {\n            var dataset = this.getDataset();\n            var meta = this.getMeta();\n            var total = 0;\n            var value;\n\n            helpers.each(meta.data, function (element, index) {\n                value = dataset.data[index];\n                if (!isNaN(value) && !element.hidden) {\n                    total += Math.abs(value);\n                }\n            });\n\n            /* if (total === 0) {\n\t\t\t\ttotal = NaN;\n\t\t\t}*/\n\n            return total;\n        },\n\n        calculateCircumference: function (value) {\n            var total = this.getMeta().total;\n            if (total > 0 && !isNaN(value)) {\n                return (Math.PI * 2.0) * (Math.abs(value) / total);\n            }\n            return 0;\n        },\n\n        // gets the max border or hover width to properly scale pie charts\n        getMaxBorderWidth: function (arcs) {\n            var max = 0;\n            var index = this.index;\n            var length = arcs.length;\n            var borderWidth;\n            var hoverWidth;\n\n            for (var i = 0; i < length; i++) {\n                borderWidth = arcs[i]._model ? arcs[i]._model.borderWidth : 0;\n                hoverWidth = arcs[i]._chart ? arcs[i]._chart.config.data.datasets[index].hoverBorderWidth : 0;\n\n                max = borderWidth > max ? borderWidth : max;\n                max = hoverWidth > max ? hoverWidth : max;\n            }\n            return max;\n        }\n    });\n};\n\n},{\"25\":25,\"40\":40,\"45\":45}],18:[function (require,module,exports) {\n'use strict';\n\nvar defaults = require(25);\nvar elements = require(40);\nvar helpers = require(45);\n\ndefaults._set('line', {\n    showLines: true,\n    spanGaps: false,\n\n    hover: {\n        mode: 'label'\n    },\n\n    scales: {\n        xAxes: [{\n            type: 'category',\n            id: 'x-axis-0'\n        }],\n        yAxes: [{\n            type: 'linear',\n            id: 'y-axis-0'\n        }]\n    }\n});\n\nmodule.exports = function (Chart) {\n\n    function lineEnabled(dataset, options)\n    {\n        return helpers.valueOrDefault(dataset.showLine, options.showLines);\n    }\n\n    Chart.controllers.line = Chart.DatasetController.extend({\n\n        datasetElementType: elements.Line,\n\n        dataElementType: elements.Point,\n\n        update: function (reset) {\n            var me = this;\n            var meta = me.getMeta();\n            var line = meta.dataset;\n            var points = meta.data || [];\n            var options = me.chart.options;\n            var lineElementOptions = options.elements.line;\n            var scale = me.getScaleForId(meta.yAxisID);\n            var i, ilen, custom;\n            var dataset = me.getDataset();\n            var showLine = lineEnabled(dataset, options);\n\n            // Update Line\n            if (showLine) {\n                custom = line.custom || {};\n\n                // Compatibility: If the properties are defined with only the old name, use those values\n                if ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n                    dataset.lineTension = dataset.tension;\n                }\n\n                // Utility\n                line._scale = scale;\n                line._datasetIndex = me.index;\n                // Data\n                line._children = points;\n                // Model\n                line._model = {\n                    // Appearance\n                    // The default behavior of lines is to break at null values, according\n                    // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n                    // This option gives lines the ability to span gaps\n                    spanGaps: dataset.spanGaps ? dataset.spanGaps : options.spanGaps,\n                    tension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n                    backgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\n                    borderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\n                    borderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\n                    borderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\n                    borderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\n                    borderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\n                    borderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\n                    fill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\n                    steppedLine: custom.steppedLine ? custom.steppedLine : helpers.valueOrDefault(dataset.steppedLine, lineElementOptions.stepped),\n                    cubicInterpolationMode: custom.cubicInterpolationMode ? custom.cubicInterpolationMode : helpers.valueOrDefault(dataset.cubicInterpolationMode, lineElementOptions.cubicInterpolationMode),\n                };\n\n                line.pivot();\n            }\n\n            // Update Points\n            for (i = 0, ilen = points.length; i < ilen; ++i) {\n                me.updateElement(points[i], i, reset);\n            }\n\n            if (showLine && line._model.tension !== 0) {\n                me.updateBezierControlPoints();\n            }\n\n            // Now pivot the point for animation\n            for (i = 0, ilen = points.length; i < ilen; ++i) {\n                points[i].pivot();\n            }\n        },\n\n        getPointBackgroundColor: function (point, index) {\n            var backgroundColor = this.chart.options.elements.point.backgroundColor;\n            var dataset = this.getDataset();\n            var custom = point.custom || {};\n\n            if (custom.backgroundColor) {\n                backgroundColor = custom.backgroundColor;\n            } else if (dataset.pointBackgroundColor) {\n                backgroundColor = helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor);\n            } else if (dataset.backgroundColor) {\n                backgroundColor = dataset.backgroundColor;\n            }\n\n            return backgroundColor;\n        },\n\n        getPointBorderColor: function (point, index) {\n            var borderColor = this.chart.options.elements.point.borderColor;\n            var dataset = this.getDataset();\n            var custom = point.custom || {};\n\n            if (custom.borderColor) {\n                borderColor = custom.borderColor;\n            } else if (dataset.pointBorderColor) {\n                borderColor = helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, borderColor);\n            } else if (dataset.borderColor) {\n                borderColor = dataset.borderColor;\n            }\n\n            return borderColor;\n        },\n\n        getPointBorderWidth: function (point, index) {\n            var borderWidth = this.chart.options.elements.point.borderWidth;\n            var dataset = this.getDataset();\n            var custom = point.custom || {};\n\n            if (!isNaN(custom.borderWidth)) {\n                borderWidth = custom.borderWidth;\n            } else if (!isNaN(dataset.pointBorderWidth) || helpers.isArray(dataset.pointBorderWidth)) {\n                borderWidth = helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth);\n            } else if (!isNaN(dataset.borderWidth)) {\n                borderWidth = dataset.borderWidth;\n            }\n\n            return borderWidth;\n        },\n\n        updateElement: function (point, index, reset) {\n            var me = this;\n            var meta = me.getMeta();\n            var custom = point.custom || {};\n            var dataset = me.getDataset();\n            var datasetIndex = me.index;\n            var value = dataset.data[index];\n            var yScale = me.getScaleForId(meta.yAxisID);\n            var xScale = me.getScaleForId(meta.xAxisID);\n            var pointOptions = me.chart.options.elements.point;\n            var x, y;\n\n            // Compatibility: If the properties are defined with only the old name, use those values\n            if ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n                dataset.pointRadius = dataset.radius;\n            }\n            if ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\n                dataset.pointHitRadius = dataset.hitRadius;\n            }\n\n            x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n            y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex);\n\n            // Utility\n            point._xScale = xScale;\n            point._yScale = yScale;\n            point._datasetIndex = datasetIndex;\n            point._index = index;\n\n            // Desired view properties\n            point._model = {\n                x: x,\n                y: y,\n                skip: custom.skip || isNaN(x) || isNaN(y),\n                // Appearance\n                radius: custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointOptions.radius),\n                pointStyle: custom.pointStyle || helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointOptions.pointStyle),\n                backgroundColor: me.getPointBackgroundColor(point, index),\n                borderColor: me.getPointBorderColor(point, index),\n                borderWidth: me.getPointBorderWidth(point, index),\n                tension: meta.dataset._model ? meta.dataset._model.tension : 0,\n                steppedLine: meta.dataset._model ? meta.dataset._model.steppedLine : false,\n                // Tooltip\n                hitRadius: custom.hitRadius || helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointOptions.hitRadius)\n            };\n        },\n\n        calculatePointY: function (value, index, datasetIndex) {\n            var me = this;\n            var chart = me.chart;\n            var meta = me.getMeta();\n            var yScale = me.getScaleForId(meta.yAxisID);\n            var sumPos = 0;\n            var sumNeg = 0;\n            var i, ds, dsMeta;\n\n            if (yScale.options.stacked) {\n                for (i = 0; i < datasetIndex; i++) {\n                    ds = chart.data.datasets[i];\n                    dsMeta = chart.getDatasetMeta(i);\n                    if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n                        var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n                        if (stackedRightValue < 0) {\n                            sumNeg += stackedRightValue || 0;\n                        } else {\n                            sumPos += stackedRightValue || 0;\n                        }\n                    }\n                }\n\n                var rightValue = Number(yScale.getRightValue(value));\n                if (rightValue < 0) {\n                    return yScale.getPixelForValue(sumNeg + rightValue);\n                }\n                return yScale.getPixelForValue(sumPos + rightValue);\n            }\n\n            return yScale.getPixelForValue(value);\n        },\n\n        updateBezierControlPoints: function () {\n            var me = this;\n            var meta = me.getMeta();\n            var area = me.chart.chartArea;\n            var points = (meta.data || []);\n            var i, ilen, point, model, controlPoints;\n\n            // Only consider points that are drawn in case the spanGaps option is used\n            if (meta.dataset._model.spanGaps) {\n                points = points.filter(function (pt) {\n                    return !pt._model.skip;\n                });\n            }\n\n            function capControlPoint(pt, min, max)\n            {\n                return Math.max(Math.min(pt, max), min);\n            }\n\n            if (meta.dataset._model.cubicInterpolationMode === 'monotone') {\n                helpers.splineCurveMonotone(points);\n            } else {\n                for (i = 0, ilen = points.length; i < ilen; ++i) {\n                    point = points[i];\n                    model = point._model;\n                    controlPoints = helpers.splineCurve(\n                        helpers.previousItem(points, i)._model,\n                        model,\n                        helpers.nextItem(points, i)._model,\n                        meta.dataset._model.tension\n                    );\n                    model.controlPointPreviousX = controlPoints.previous.x;\n                    model.controlPointPreviousY = controlPoints.previous.y;\n                    model.controlPointNextX = controlPoints.next.x;\n                    model.controlPointNextY = controlPoints.next.y;\n                }\n            }\n\n            if (me.chart.options.elements.line.capBezierPoints) {\n                for (i = 0, ilen = points.length; i < ilen; ++i) {\n                    model = points[i]._model;\n                    model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n                    model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n                    model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n                    model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n                }\n            }\n        },\n\n        draw: function () {\n            var me = this;\n            var chart = me.chart;\n            var meta = me.getMeta();\n            var points = meta.data || [];\n            var area = chart.chartArea;\n            var ilen = points.length;\n            var i = 0;\n\n            helpers.canvas.clipArea(chart.ctx, area);\n\n            if (lineEnabled(me.getDataset(), chart.options)) {\n                meta.dataset.draw();\n            }\n\n            helpers.canvas.unclipArea(chart.ctx);\n\n            // Draw the points\n            for (; i < ilen; ++i) {\n                points[i].draw(area);\n            }\n        },\n\n        setHoverStyle: function (point) {\n            // Point\n            var dataset = this.chart.data.datasets[point._datasetIndex];\n            var index = point._index;\n            var custom = point.custom || {};\n            var model = point._model;\n\n            model.radius = custom.hoverRadius || helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n            model.backgroundColor = custom.hoverBackgroundColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n            model.borderColor = custom.hoverBorderColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n            model.borderWidth = custom.hoverBorderWidth || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n        },\n\n        removeHoverStyle: function (point) {\n            var me = this;\n            var dataset = me.chart.data.datasets[point._datasetIndex];\n            var index = point._index;\n            var custom = point.custom || {};\n            var model = point._model;\n\n            // Compatibility: If the properties are defined with only the old name, use those values\n            if ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n                dataset.pointRadius = dataset.radius;\n            }\n\n            model.radius = custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, me.chart.options.elements.point.radius);\n            model.backgroundColor = me.getPointBackgroundColor(point, index);\n            model.borderColor = me.getPointBorderColor(point, index);\n            model.borderWidth = me.getPointBorderWidth(point, index);\n        }\n    });\n};\n\n},{\"25\":25,\"40\":40,\"45\":45}],19:[function (require,module,exports) {\n'use strict';\n\nvar defaults = require(25);\nvar elements = require(40);\nvar helpers = require(45);\n\ndefaults._set('polarArea', {\n    scale: {\n        type: 'radialLinear',\n        angleLines: {\n            display: false\n        },\n        gridLines: {\n            circular: true\n        },\n        pointLabels: {\n            display: false\n        },\n        ticks: {\n            beginAtZero: true\n        }\n    },\n\n    // Boolean - Whether to animate the rotation of the chart\n    animation: {\n        animateRotate: true,\n        animateScale: true\n    },\n\n    startAngle: -0.5 * Math.PI,\n    legendCallback: function (chart) {\n        var text = [];\n        text.push('<ul class=\"' + chart.id + '-legend\">');\n\n        var data = chart.data;\n        var datasets = data.datasets;\n        var labels = data.labels;\n\n        if (datasets.length) {\n            for (var i = 0; i < datasets[0].data.length; ++i) {\n                text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n                if (labels[i]) {\n                    text.push(labels[i]);\n                }\n                text.push('</li>');\n            }\n        }\n\n        text.push('</ul>');\n        return text.join('');\n    },\n    legend: {\n        labels: {\n            generateLabels: function (chart) {\n                var data = chart.data;\n                if (data.labels.length && data.datasets.length) {\n                    return data.labels.map(function (label, i) {\n                        var meta = chart.getDatasetMeta(0);\n                        var ds = data.datasets[0];\n                        var arc = meta.data[i];\n                        var custom = arc.custom || {};\n                        var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n                        var arcOpts = chart.options.elements.arc;\n                        var fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n                        var stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n                        var bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n\n                        return {\n                            text: label,\n                            fillStyle: fill,\n                            strokeStyle: stroke,\n                            lineWidth: bw,\n                            hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n                            // Extra data used for toggling the correct item\n                            index: i\n                        };\n                    });\n                }\n                return [];\n            }\n        },\n\n        onClick: function (e, legendItem) {\n            var index = legendItem.index;\n            var chart = this.chart;\n            var i, ilen, meta;\n\n            for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n                meta = chart.getDatasetMeta(i);\n                meta.data[index].hidden = !meta.data[index].hidden;\n            }\n\n            chart.update();\n        }\n    },\n\n    // Need to override these to give a nice default\n    tooltips: {\n        callbacks: {\n            title: function () {\n                return '';\n            },\n            label: function (item, data) {\n                return data.labels[item.index] + ': ' + item.yLabel;\n            }\n        }\n    }\n});\n\nmodule.exports = function (Chart) {\n\n    Chart.controllers.polarArea = Chart.DatasetController.extend({\n\n        dataElementType: elements.Arc,\n\n        linkScales: helpers.noop,\n\n        update: function (reset) {\n            var me = this;\n            var chart = me.chart;\n            var chartArea = chart.chartArea;\n            var meta = me.getMeta();\n            var opts = chart.options;\n            var arcOpts = opts.elements.arc;\n            var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n            chart.outerRadius = Math.max((minSize - arcOpts.borderWidth / 2) / 2, 0);\n            chart.innerRadius = Math.max(opts.cutoutPercentage ? (chart.outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n            chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n\n            me.outerRadius = chart.outerRadius - (chart.radiusLength * me.index);\n            me.innerRadius = me.outerRadius - chart.radiusLength;\n\n            meta.count = me.countVisibleElements();\n\n            helpers.each(meta.data, function (arc, index) {\n                me.updateElement(arc, index, reset);\n            });\n        },\n\n        updateElement: function (arc, index, reset) {\n            var me = this;\n            var chart = me.chart;\n            var dataset = me.getDataset();\n            var opts = chart.options;\n            var animationOpts = opts.animation;\n            var scale = chart.scale;\n            var labels = chart.data.labels;\n\n            var circumference = me.calculateCircumference(dataset.data[index]);\n            var centerX = scale.xCenter;\n            var centerY = scale.yCenter;\n\n            // If there is NaN data before us, we need to calculate the starting angle correctly.\n            // We could be way more efficient here, but its unlikely that the polar area chart will have a lot of data\n            var visibleCount = 0;\n            var meta = me.getMeta();\n            for (var i = 0; i < index; ++i) {\n                if (!isNaN(dataset.data[i]) && !meta.data[i].hidden) {\n                    ++visibleCount;\n                }\n            }\n\n            // var negHalfPI = -0.5 * Math.PI;\n            var datasetStartAngle = opts.startAngle;\n            var distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n            var startAngle = datasetStartAngle + (circumference * visibleCount);\n            var endAngle = startAngle + (arc.hidden ? 0 : circumference);\n\n            var resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\n            helpers.extend(arc, {\n                // Utility\n                _datasetIndex: me.index,\n                _index: index,\n                _scale: scale,\n\n                // Desired view properties\n                _model: {\n                    x: centerX,\n                    y: centerY,\n                    innerRadius: 0,\n                    outerRadius: reset ? resetRadius : distance,\n                    startAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n                    endAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n                    label: helpers.valueAtIndexOrDefault(labels, index, labels[index])\n                }\n            });\n\n            // Apply border and fill style\n            me.removeHoverStyle(arc);\n\n            arc.pivot();\n        },\n\n        removeHoverStyle: function (arc) {\n            Chart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\n        },\n\n        countVisibleElements: function () {\n            var dataset = this.getDataset();\n            var meta = this.getMeta();\n            var count = 0;\n\n            helpers.each(meta.data, function (element, index) {\n                if (!isNaN(dataset.data[index]) && !element.hidden) {\n                    count++;\n                }\n            });\n\n            return count;\n        },\n\n        calculateCircumference: function (value) {\n            var count = this.getMeta().count;\n            if (count > 0 && !isNaN(value)) {\n                return (2 * Math.PI) / count;\n            }\n            return 0;\n        }\n    });\n};\n\n},{\"25\":25,\"40\":40,\"45\":45}],20:[function (require,module,exports) {\n'use strict';\n\nvar defaults = require(25);\nvar elements = require(40);\nvar helpers = require(45);\n\ndefaults._set('radar', {\n    scale: {\n        type: 'radialLinear'\n    },\n    elements: {\n        line: {\n            tension: 0 // no bezier in radar\n        }\n    }\n});\n\nmodule.exports = function (Chart) {\n\n    Chart.controllers.radar = Chart.DatasetController.extend({\n\n        datasetElementType: elements.Line,\n\n        dataElementType: elements.Point,\n\n        linkScales: helpers.noop,\n\n        update: function (reset) {\n            var me = this;\n            var meta = me.getMeta();\n            var line = meta.dataset;\n            var points = meta.data;\n            var custom = line.custom || {};\n            var dataset = me.getDataset();\n            var lineElementOptions = me.chart.options.elements.line;\n            var scale = me.chart.scale;\n\n            // Compatibility: If the properties are defined with only the old name, use those values\n            if ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n                dataset.lineTension = dataset.tension;\n            }\n\n            helpers.extend(meta.dataset, {\n                // Utility\n                _datasetIndex: me.index,\n                _scale: scale,\n                // Data\n                _children: points,\n                _loop: true,\n                // Model\n                _model: {\n                    // Appearance\n                    tension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n                    backgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\n                    borderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\n                    borderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\n                    fill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\n                    borderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\n                    borderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\n                    borderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\n                    borderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\n                }\n            });\n\n            meta.dataset.pivot();\n\n            // Update Points\n            helpers.each(points, function (point, index) {\n                me.updateElement(point, index, reset);\n            }, me);\n\n            // Update bezier control points\n            me.updateBezierControlPoints();\n        },\n        updateElement: function (point, index, reset) {\n            var me = this;\n            var custom = point.custom || {};\n            var dataset = me.getDataset();\n            var scale = me.chart.scale;\n            var pointElementOptions = me.chart.options.elements.point;\n            var pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\n            // Compatibility: If the properties are defined with only the old name, use those values\n            if ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n                dataset.pointRadius = dataset.radius;\n            }\n            if ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\n                dataset.pointHitRadius = dataset.hitRadius;\n            }\n\n            helpers.extend(point, {\n                // Utility\n                _datasetIndex: me.index,\n                _index: index,\n                _scale: scale,\n\n                // Desired view properties\n                _model: {\n                    x: reset ? scale.xCenter : pointPosition.x, // value not used in dataset scale, but we want a consistent API between scales\n                    y: reset ? scale.yCenter : pointPosition.y,\n\n                    // Appearance\n                    tension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, me.chart.options.elements.line.tension),\n                    radius: custom.radius ? custom.radius : helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius),\n                    backgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor),\n                    borderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor),\n                    borderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth),\n                    pointStyle: custom.pointStyle ? custom.pointStyle : helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointElementOptions.pointStyle),\n\n                    // Tooltip\n                    hitRadius: custom.hitRadius ? custom.hitRadius : helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointElementOptions.hitRadius)\n                }\n            });\n\n            point._model.skip = custom.skip ? custom.skip : (isNaN(point._model.x) || isNaN(point._model.y));\n        },\n        updateBezierControlPoints: function () {\n            var chartArea = this.chart.chartArea;\n            var meta = this.getMeta();\n\n            helpers.each(meta.data, function (point, index) {\n                var model = point._model;\n                var controlPoints = helpers.splineCurve(\n                    helpers.previousItem(meta.data, index, true)._model,\n                    model,\n                    helpers.nextItem(meta.data, index, true)._model,\n                    model.tension\n                );\n\n                // Prevent the bezier going outside of the bounds of the graph\n                model.controlPointPreviousX = Math.max(Math.min(controlPoints.previous.x, chartArea.right), chartArea.left);\n                model.controlPointPreviousY = Math.max(Math.min(controlPoints.previous.y, chartArea.bottom), chartArea.top);\n\n                model.controlPointNextX = Math.max(Math.min(controlPoints.next.x, chartArea.right), chartArea.left);\n                model.controlPointNextY = Math.max(Math.min(controlPoints.next.y, chartArea.bottom), chartArea.top);\n\n                // Now pivot the point for animation\n                point.pivot();\n            });\n        },\n\n        setHoverStyle: function (point) {\n            // Point\n            var dataset = this.chart.data.datasets[point._datasetIndex];\n            var custom = point.custom || {};\n            var index = point._index;\n            var model = point._model;\n\n            model.radius = custom.hoverRadius ? custom.hoverRadius : helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n            model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n            model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n            model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n        },\n\n        removeHoverStyle: function (point) {\n            var dataset = this.chart.data.datasets[point._datasetIndex];\n            var custom = point.custom || {};\n            var index = point._index;\n            var model = point._model;\n            var pointElementOptions = this.chart.options.elements.point;\n\n            model.radius = custom.radius ? custom.radius : helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius);\n            model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor);\n            model.borderColor = custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor);\n            model.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth);\n        }\n    });\n};\n\n},{\"25\":25,\"40\":40,\"45\":45}],21:[function (require,module,exports) {\n'use strict';\n\nvar defaults = require(25);\n\ndefaults._set('scatter', {\n    hover: {\n        mode: 'single'\n    },\n\n    scales: {\n        xAxes: [{\n            id: 'x-axis-1',    // need an ID so datasets can reference the scale\n            type: 'linear',    // scatter should not use a category axis\n            position: 'bottom'\n        }],\n        yAxes: [{\n            id: 'y-axis-1',\n            type: 'linear',\n            position: 'left'\n        }]\n    },\n\n    showLines: false,\n\n    tooltips: {\n        callbacks: {\n            title: function () {\n                return '';     // doesn't make sense for scatter since data are formatted as a point\n            },\n            label: function (item) {\n                return '(' + item.xLabel + ', ' + item.yLabel + ')';\n            }\n        }\n    }\n});\n\nmodule.exports = function (Chart) {\n\n    // Scatter charts use line controllers\n    Chart.controllers.scatter = Chart.controllers.line;\n\n};\n\n},{\"25\":25}],22:[function (require,module,exports) {\n/* global window: false */\n'use strict';\n\nvar defaults = require(25);\nvar Element = require(26);\nvar helpers = require(45);\n\ndefaults._set('global', {\n    animation: {\n        duration: 1000,\n        easing: 'easeOutQuart',\n        onProgress: helpers.noop,\n        onComplete: helpers.noop\n    }\n});\n\nmodule.exports = function (Chart) {\n\n    Chart.Animation = Element.extend({\n        chart: null, // the animation associated chart instance\n        currentStep: 0, // the current animation step\n        numSteps: 60, // default number of steps\n        easing: '', // the easing to use for this animation\n        render: null, // render function used by the animation service\n\n        onAnimationProgress: null, // user specified callback to fire on each step of the animation\n        onAnimationComplete: null, // user specified callback to fire when the animation finishes\n    });\n\n    Chart.animationService = {\n        frameDuration: 17,\n        animations: [],\n        dropFrames: 0,\n        request: null,\n\n        /**\n         * @param {Chart} chart - The chart to animate.\n         * @param {Chart.Animation} animation - The animation that we will animate.\n         * @param {Number} duration - The animation duration in ms.\n         * @param {Boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n         */\n        addAnimation: function (chart, animation, duration, lazy) {\n            var animations = this.animations;\n            var i, ilen;\n\n            animation.chart = chart;\n\n            if (!lazy) {\n                chart.animating = true;\n            }\n\n            for (i = 0, ilen = animations.length; i < ilen; ++i) {\n                if (animations[i].chart === chart) {\n                    animations[i] = animation;\n                    return;\n                }\n            }\n\n            animations.push(animation);\n\n            // If there are no animations queued, manually kickstart a digest, for lack of a better word\n            if (animations.length === 1) {\n                this.requestAnimationFrame();\n            }\n        },\n\n        cancelAnimation: function (chart) {\n            var index = helpers.findIndex(this.animations, function (animation) {\n                return animation.chart === chart;\n            });\n\n            if (index !== -1) {\n                this.animations.splice(index, 1);\n                chart.animating = false;\n            }\n        },\n\n        requestAnimationFrame: function () {\n            var me = this;\n            if (me.request === null) {\n                // Skip animation frame requests until the active one is executed.\n                // This can happen when processing mouse events, e.g. 'mousemove'\n                // and 'mouseout' events will trigger multiple renders.\n                me.request = helpers.requestAnimFrame.call(window, function () {\n                    me.request = null;\n                    me.startDigest();\n                });\n            }\n        },\n\n        /**\n         * @private\n         */\n        startDigest: function () {\n            var me = this;\n            var startTime = Date.now();\n            var framesToDrop = 0;\n\n            if (me.dropFrames > 1) {\n                framesToDrop = Math.floor(me.dropFrames);\n                me.dropFrames = me.dropFrames % 1;\n            }\n\n            me.advance(1 + framesToDrop);\n\n            var endTime = Date.now();\n\n            me.dropFrames += (endTime - startTime) / me.frameDuration;\n\n            // Do we have more stuff to animate?\n            if (me.animations.length > 0) {\n                me.requestAnimationFrame();\n            }\n        },\n\n        /**\n         * @private\n         */\n        advance: function (count) {\n            var animations = this.animations;\n            var animation, chart;\n            var i = 0;\n\n            while (i < animations.length) {\n                animation = animations[i];\n                chart = animation.chart;\n\n                animation.currentStep = (animation.currentStep || 0) + count;\n                animation.currentStep = Math.min(animation.currentStep, animation.numSteps);\n\n                helpers.callback(animation.render, [chart, animation], chart);\n                helpers.callback(animation.onAnimationProgress, [animation], chart);\n\n                if (animation.currentStep >= animation.numSteps) {\n                    helpers.callback(animation.onAnimationComplete, [animation], chart);\n                    chart.animating = false;\n                    animations.splice(i, 1);\n                } else {\n                    ++i;\n                }\n            }\n        }\n    };\n\n    /**\n     * Provided for backward compatibility, use Chart.Animation instead\n     * @prop Chart.Animation#animationObject\n     * @deprecated since version 2.6.0\n\n     */\n    Object.defineProperty(Chart.Animation.prototype, 'animationObject', {\n        get: function () {\n            return this;\n        }\n    });\n\n    /**\n     * Provided for backward compatibility, use Chart.Animation#chart instead\n     * @prop Chart.Animation#chartInstance\n     * @deprecated since version 2.6.0\n\n     */\n    Object.defineProperty(Chart.Animation.prototype, 'chartInstance', {\n        get: function () {\n            return this.chart;\n        },\n        set: function (value) {\n            this.chart = value;\n        }\n    });\n\n};\n\n},{\"25\":25,\"26\":26,\"45\":45}],23:[function (require,module,exports) {\n'use strict';\n\nvar defaults = require(25);\nvar helpers = require(45);\nvar Interaction = require(28);\nvar layouts = require(30);\nvar platform = require(48);\nvar plugins = require(31);\n\nmodule.exports = function (Chart) {\n\n    // Create a dictionary of chart types, to allow for extension of existing types\n    Chart.types = {};\n\n    // Store a reference to each instance - allowing us to globally resize chart instances on window resize.\n    // Destroy method on the chart will remove the instance of the chart from this reference.\n    Chart.instances = {};\n\n    // Controllers available for dataset visualization eg. bar, line, slice, etc.\n    Chart.controllers = {};\n\n    /**\n     * Initializes the given config with global and chart default values.\n     */\n    function initConfig(config)\n    {\n        config = config || {};\n\n        // Do NOT use configMerge() for the data object because this method merges arrays\n        // and so would change references to labels and datasets, preventing data updates.\n        var data = config.data = config.data || {};\n        data.datasets = data.datasets || [];\n        data.labels = data.labels || [];\n\n        config.options = helpers.configMerge(\n            defaults.global,\n            defaults[config.type],\n            config.options || {}\n        );\n\n        return config;\n    }\n\n    /**\n     * Updates the config of the chart\n     * @param chart {Chart} chart to update the options for\n     */\n    function updateConfig(chart)\n    {\n        var newOptions = chart.options;\n\n        helpers.each(chart.scales, function (scale) {\n            layouts.removeBox(chart, scale);\n        });\n\n        newOptions = helpers.configMerge(\n            Chart.defaults.global,\n            Chart.defaults[chart.config.type],\n            newOptions\n        );\n\n        chart.options = chart.config.options = newOptions;\n        chart.ensureScalesHaveIDs();\n        chart.buildOrUpdateScales();\n        // Tooltip\n        chart.tooltip._options = newOptions.tooltips;\n        chart.tooltip.initialize();\n    }\n\n    function positionIsHorizontal(position)\n    {\n        return position === 'top' || position === 'bottom';\n    }\n\n    helpers.extend(Chart.prototype, /** @lends Chart */ {\n        /**\n         * @private\n         */\n        construct: function (item, config) {\n            var me = this;\n\n            config = initConfig(config);\n\n            var context = platform.acquireContext(item, config);\n            var canvas = context && context.canvas;\n            var height = canvas && canvas.height;\n            var width = canvas && canvas.width;\n\n            me.id = helpers.uid();\n            me.ctx = context;\n            me.canvas = canvas;\n            me.config = config;\n            me.width = width;\n            me.height = height;\n            me.aspectRatio = height ? width / height : null;\n            me.options = config.options;\n            me._bufferedRender = false;\n\n            /**\n             * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n             * the \"instance\" still need to be defined since it might be called from plugins.\n             * @prop Chart#chart\n             * @deprecated since version 2.6.0\n\n             * @private\n             */\n            me.chart = me;\n            me.controller = me; // chart.chart.controller #inception\n\n            // Add the chart instance to the global namespace\n            Chart.instances[me.id] = me;\n\n            // Define alias to the config data: `chart.data === chart.config.data`\n            Object.defineProperty(me, 'data', {\n                get: function () {\n                    return me.config.data;\n                },\n                set: function (value) {\n                    me.config.data = value;\n                }\n            });\n\n            if (!context || !canvas) {\n                // The given item is not a compatible context2d element, let's return before finalizing\n                // the chart initialization but after setting basic chart / controller properties that\n                // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n                // https://github.com/chartjs/Chart.js/issues/2807\n                console.error(\"Failed to create chart: can't acquire context from the given item\");\n                return;\n            }\n\n            me.initialize();\n            me.update();\n        },\n\n        /**\n         * @private\n         */\n        initialize: function () {\n            var me = this;\n\n            // Before init plugin notification\n            plugins.notify(me, 'beforeInit');\n\n            helpers.retinaScale(me, me.options.devicePixelRatio);\n\n            me.bindEvents();\n\n            if (me.options.responsive) {\n                // Initial resize before chart draws (must be silent to preserve initial animations).\n                me.resize(true);\n            }\n\n            // Make sure scales have IDs and are built before we build any controllers.\n            me.ensureScalesHaveIDs();\n            me.buildOrUpdateScales();\n            me.initToolTip();\n\n            // After init plugin notification\n            plugins.notify(me, 'afterInit');\n\n            return me;\n        },\n\n        clear: function () {\n            helpers.canvas.clear(this);\n            return this;\n        },\n\n        stop: function () {\n            // Stops any current animation loop occurring\n            Chart.animationService.cancelAnimation(this);\n            return this;\n        },\n\n        resize: function (silent) {\n            var me = this;\n            var options = me.options;\n            var canvas = me.canvas;\n            var aspectRatio = (options.maintainAspectRatio && me.aspectRatio) || null;\n\n            // the canvas render width and height will be casted to integers so make sure that\n            // the canvas display style uses the same integer values to avoid blurring effect.\n\n            // Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collased\n            var newWidth = Math.max(0, Math.floor(helpers.getMaximumWidth(canvas)));\n            var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers.getMaximumHeight(canvas)));\n\n            if (me.width === newWidth && me.height === newHeight) {\n                return;\n            }\n\n            canvas.width = me.width = newWidth;\n            canvas.height = me.height = newHeight;\n            canvas.style.width = newWidth + 'px';\n            canvas.style.height = newHeight + 'px';\n\n            helpers.retinaScale(me, options.devicePixelRatio);\n\n            if (!silent) {\n                // Notify any plugins about the resize\n                var newSize = {width: newWidth, height: newHeight};\n                plugins.notify(me, 'resize', [newSize]);\n\n                // Notify of resize\n                if (me.options.onResize) {\n                    me.options.onResize(me, newSize);\n                }\n\n                me.stop();\n                me.update(me.options.responsiveAnimationDuration);\n            }\n        },\n\n        ensureScalesHaveIDs: function () {\n            var options = this.options;\n            var scalesOptions = options.scales || {};\n            var scaleOptions = options.scale;\n\n            helpers.each(scalesOptions.xAxes, function (xAxisOptions, index) {\n                xAxisOptions.id = xAxisOptions.id || ('x-axis-' + index);\n            });\n\n            helpers.each(scalesOptions.yAxes, function (yAxisOptions, index) {\n                yAxisOptions.id = yAxisOptions.id || ('y-axis-' + index);\n            });\n\n            if (scaleOptions) {\n                scaleOptions.id = scaleOptions.id || 'scale';\n            }\n        },\n\n        /**\n         * Builds a map of scale ID to scale object for future lookup.\n         */\n        buildOrUpdateScales: function () {\n            var me = this;\n            var options = me.options;\n            var scales = me.scales || {};\n            var items = [];\n            var updated = Object.keys(scales).reduce(function (obj, id) {\n                obj[id] = false;\n                return obj;\n            }, {});\n\n            if (options.scales) {\n                items = items.concat(\n                    (options.scales.xAxes || []).map(function (xAxisOptions) {\n                        return {options: xAxisOptions, dtype: 'category', dposition: 'bottom'};\n                    }),\n                    (options.scales.yAxes || []).map(function (yAxisOptions) {\n                        return {options: yAxisOptions, dtype: 'linear', dposition: 'left'};\n                    })\n                );\n            }\n\n            if (options.scale) {\n                items.push({\n                    options: options.scale,\n                    dtype: 'radialLinear',\n                    isDefault: true,\n                    dposition: 'chartArea'\n                });\n            }\n\n            helpers.each(items, function (item) {\n                var scaleOptions = item.options;\n                var id = scaleOptions.id;\n                var scaleType = helpers.valueOrDefault(scaleOptions.type, item.dtype);\n\n                if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n                    scaleOptions.position = item.dposition;\n                }\n\n                updated[id] = true;\n                var scale = null;\n                if (id in scales && scales[id].type === scaleType) {\n                    scale = scales[id];\n                    scale.options = scaleOptions;\n                    scale.ctx = me.ctx;\n                    scale.chart = me;\n                } else {\n                    var scaleClass = Chart.scaleService.getScaleConstructor(scaleType);\n                    if (!scaleClass) {\n                        return;\n                    }\n                    scale = new scaleClass({\n                        id: id,\n                        type: scaleType,\n                        options: scaleOptions,\n                        ctx: me.ctx,\n                        chart: me\n                    });\n                    scales[scale.id] = scale;\n                }\n\n                scale.mergeTicksOptions();\n\n                if (item.isDefault) {\n                    me.scale = scale;\n                }\n            });\n            // clear up discarded scales\n            helpers.each(updated, function (hasUpdated, id) {\n                if (!hasUpdated) {\n                    delete scales[id];\n                }\n            });\n\n            me.scales = scales;\n\n            Chart.scaleService.addScalesToLayout(this);\n        },\n\n        buildOrUpdateControllers: function () {\n            var me = this;\n            var types = [];\n            var newControllers = [];\n\n            helpers.each(me.data.datasets, function (dataset, datasetIndex) {\n                var meta = me.getDatasetMeta(datasetIndex);\n                var type = dataset.type || me.config.type;\n\n                if (meta.type && meta.type !== type) {\n                    me.destroyDatasetMeta(datasetIndex);\n                    meta = me.getDatasetMeta(datasetIndex);\n                }\n                meta.type = type;\n\n                types.push(meta.type);\n\n                if (meta.controller) {\n                    meta.controller.updateIndex(datasetIndex);\n                    meta.controller.linkScales();\n                } else {\n                    var ControllerClass = Chart.controllers[meta.type];\n                    if (ControllerClass === undefined) {\n                        throw new Error('\"' + meta.type + '\" is not a chart type.');\n                    }\n\n                    meta.controller = new ControllerClass(me, datasetIndex);\n                    newControllers.push(meta.controller);\n                }\n            }, me);\n\n            return newControllers;\n        },\n\n        /**\n         * Reset the elements of all datasets\n         * @private\n         */\n        resetElements: function () {\n            var me = this;\n            helpers.each(me.data.datasets, function (dataset, datasetIndex) {\n                me.getDatasetMeta(datasetIndex).controller.reset();\n            }, me);\n        },\n\n        /**\n         * Resets the chart back to it's state before the initial animation\n         */\n        reset: function () {\n            this.resetElements();\n            this.tooltip.initialize();\n        },\n\n        update: function (config) {\n            var me = this;\n\n            if (!config || typeof config !== 'object') {\n                // backwards compatibility\n                config = {\n                    duration: config,\n                    lazy: arguments[1]\n                };\n            }\n\n            updateConfig(me);\n\n            // plugins options references might have change, let's invalidate the cache\n            // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n            plugins._invalidate(me);\n\n            if (plugins.notify(me, 'beforeUpdate') === false) {\n                return;\n            }\n\n            // In case the entire data object changed\n            me.tooltip._data = me.data;\n\n            // Make sure dataset controllers are updated and new controllers are reset\n            var newControllers = me.buildOrUpdateControllers();\n\n            // Make sure all dataset controllers have correct meta data counts\n            helpers.each(me.data.datasets, function (dataset, datasetIndex) {\n                me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n            }, me);\n\n            me.updateLayout();\n\n            // Can only reset the new controllers after the scales have been updated\n            if (me.options.animation && me.options.animation.duration) {\n                helpers.each(newControllers, function (controller) {\n                    controller.reset();\n                });\n            }\n\n            me.updateDatasets();\n\n            // Need to reset tooltip in case it is displayed with elements that are removed\n            // after update.\n            me.tooltip.initialize();\n\n            // Last active contains items that were previously in the tooltip.\n            // When we reset the tooltip, we need to clear it\n            me.lastActive = [];\n\n            // Do this before render so that any plugins that need final scale updates can use it\n            plugins.notify(me, 'afterUpdate');\n\n            if (me._bufferedRender) {\n                me._bufferedRequest = {\n                    duration: config.duration,\n                    easing: config.easing,\n                    lazy: config.lazy\n                };\n            } else {\n                me.render(config);\n            }\n        },\n\n        /**\n         * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n         * hook, in which case, plugins will not be called on `afterLayout`.\n         * @private\n         */\n        updateLayout: function () {\n            var me = this;\n\n            if (plugins.notify(me, 'beforeLayout') === false) {\n                return;\n            }\n\n            layouts.update(this, this.width, this.height);\n\n            /**\n             * Provided for backward compatibility, use `afterLayout` instead.\n             * @method IPlugin#afterScaleUpdate\n             * @deprecated since version 2.5.0\n\n             * @private\n             */\n            plugins.notify(me, 'afterScaleUpdate');\n            plugins.notify(me, 'afterLayout');\n        },\n\n        /**\n         * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n         * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n         * @private\n         */\n        updateDatasets: function () {\n            var me = this;\n\n            if (plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n                return;\n            }\n\n            for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n                me.updateDataset(i);\n            }\n\n            plugins.notify(me, 'afterDatasetsUpdate');\n        },\n\n        /**\n         * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n         * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n         * @private\n         */\n        updateDataset: function (index) {\n            var me = this;\n            var meta = me.getDatasetMeta(index);\n            var args = {\n                meta: meta,\n                index: index\n            };\n\n            if (plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n                return;\n            }\n\n            meta.controller.update();\n\n            plugins.notify(me, 'afterDatasetUpdate', [args]);\n        },\n\n        render: function (config) {\n            var me = this;\n\n            if (!config || typeof config !== 'object') {\n                // backwards compatibility\n                config = {\n                    duration: config,\n                    lazy: arguments[1]\n                };\n            }\n\n            var duration = config.duration;\n            var lazy = config.lazy;\n\n            if (plugins.notify(me, 'beforeRender') === false) {\n                return;\n            }\n\n            var animationOptions = me.options.animation;\n            var onComplete = function (animation) {\n                plugins.notify(me, 'afterRender');\n                helpers.callback(animationOptions && animationOptions.onComplete, [animation], me);\n            };\n\n            if (animationOptions && ((typeof duration !== 'undefined' && duration !== 0) || (typeof duration === 'undefined' && animationOptions.duration !== 0))) {\n                var animation = new Chart.Animation({\n                    numSteps: (duration || animationOptions.duration) / 16.66, // 60 fps\n                    easing: config.easing || animationOptions.easing,\n\n                    render: function (chart, animationObject) {\n                        var easingFunction = helpers.easing.effects[animationObject.easing];\n                        var currentStep = animationObject.currentStep;\n                        var stepDecimal = currentStep / animationObject.numSteps;\n\n                        chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n                    },\n\n                    onAnimationProgress: animationOptions.onProgress,\n                    onAnimationComplete: onComplete\n                });\n\n                Chart.animationService.addAnimation(me, animation, duration, lazy);\n            } else {\n                me.draw();\n\n                // See https://github.com/chartjs/Chart.js/issues/3781\n                onComplete(new Chart.Animation({numSteps: 0, chart: me}));\n            }\n\n            return me;\n        },\n\n        draw: function (easingValue) {\n            var me = this;\n\n            me.clear();\n\n            if (helpers.isNullOrUndef(easingValue)) {\n                easingValue = 1;\n            }\n\n            me.transition(easingValue);\n\n            if (plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n                return;\n            }\n\n            // Draw all the scales\n            helpers.each(me.boxes, function (box) {\n                box.draw(me.chartArea);\n            }, me);\n\n            if (me.scale) {\n                me.scale.draw();\n            }\n\n            me.drawDatasets(easingValue);\n            me._drawTooltip(easingValue);\n\n            plugins.notify(me, 'afterDraw', [easingValue]);\n        },\n\n        /**\n         * @private\n         */\n        transition: function (easingValue) {\n            var me = this;\n\n            for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n                if (me.isDatasetVisible(i)) {\n                    me.getDatasetMeta(i).controller.transition(easingValue);\n                }\n            }\n\n            me.tooltip.transition(easingValue);\n        },\n\n        /**\n         * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n         * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n         * @private\n         */\n        drawDatasets: function (easingValue) {\n            var me = this;\n\n            if (plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n                return;\n            }\n\n            // Draw datasets reversed to support proper line stacking\n            for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n                if (me.isDatasetVisible(i)) {\n                    me.drawDataset(i, easingValue);\n                }\n            }\n\n            plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n        },\n\n        /**\n         * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n         * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n         * @private\n         */\n        drawDataset: function (index, easingValue) {\n            var me = this;\n            var meta = me.getDatasetMeta(index);\n            var args = {\n                meta: meta,\n                index: index,\n                easingValue: easingValue\n            };\n\n            if (plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n                return;\n            }\n\n            meta.controller.draw(easingValue);\n\n            plugins.notify(me, 'afterDatasetDraw', [args]);\n        },\n\n        /**\n         * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n         * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n         * @private\n         */\n        _drawTooltip: function (easingValue) {\n            var me = this;\n            var tooltip = me.tooltip;\n            var args = {\n                tooltip: tooltip,\n                easingValue: easingValue\n            };\n\n            if (plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n                return;\n            }\n\n            tooltip.draw();\n\n            plugins.notify(me, 'afterTooltipDraw', [args]);\n        },\n\n        // Get the single element that was clicked on\n        // @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n        getElementAtEvent: function (e) {\n            return Interaction.modes.single(this, e);\n        },\n\n        getElementsAtEvent: function (e) {\n            return Interaction.modes.label(this, e, {intersect: true});\n        },\n\n        getElementsAtXAxis: function (e) {\n            return Interaction.modes['x-axis'](this, e, {intersect: true});\n        },\n\n        getElementsAtEventForMode: function (e, mode, options) {\n            var method = Interaction.modes[mode];\n            if (typeof method === 'function') {\n                return method(this, e, options);\n            }\n\n            return [];\n        },\n\n        getDatasetAtEvent: function (e) {\n            return Interaction.modes.dataset(this, e, {intersect: true});\n        },\n\n        getDatasetMeta: function (datasetIndex) {\n            var me = this;\n            var dataset = me.data.datasets[datasetIndex];\n            if (!dataset._meta) {\n                dataset._meta = {};\n            }\n\n            var meta = dataset._meta[me.id];\n            if (!meta) {\n                meta = dataset._meta[me.id] = {\n                    type: null,\n                    data: [],\n                    dataset: null,\n                    controller: null,\n                    hidden: null,           // See isDatasetVisible() comment\n                    xAxisID: null,\n                    yAxisID: null\n                };\n            }\n\n            return meta;\n        },\n\n        getVisibleDatasetCount: function () {\n            var count = 0;\n            for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n                if (this.isDatasetVisible(i)) {\n                    count++;\n                }\n            }\n            return count;\n        },\n\n        isDatasetVisible: function (datasetIndex) {\n            var meta = this.getDatasetMeta(datasetIndex);\n\n            // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n            // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n            return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n        },\n\n        generateLegend: function () {\n            return this.options.legendCallback(this);\n        },\n\n        /**\n         * @private\n         */\n        destroyDatasetMeta: function (datasetIndex) {\n            var id = this.id;\n            var dataset = this.data.datasets[datasetIndex];\n            var meta = dataset._meta && dataset._meta[id];\n\n            if (meta) {\n                meta.controller.destroy();\n                delete dataset._meta[id];\n            }\n        },\n\n        destroy: function () {\n            var me = this;\n            var canvas = me.canvas;\n            var i, ilen;\n\n            me.stop();\n\n            // dataset controllers need to cleanup associated data\n            for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n                me.destroyDatasetMeta(i);\n            }\n\n            if (canvas) {\n                me.unbindEvents();\n                helpers.canvas.clear(me);\n                platform.releaseContext(me.ctx);\n                me.canvas = null;\n                me.ctx = null;\n            }\n\n            plugins.notify(me, 'destroy');\n\n            delete Chart.instances[me.id];\n        },\n\n        toBase64Image: function () {\n            return this.canvas.toDataURL.apply(this.canvas, arguments);\n        },\n\n        initToolTip: function () {\n            var me = this;\n            me.tooltip = new Chart.Tooltip({\n                _chart: me,\n                _chartInstance: me, // deprecated, backward compatibility\n                _data: me.data,\n                _options: me.options.tooltips\n            }, me);\n        },\n\n        /**\n         * @private\n         */\n        bindEvents: function () {\n            var me = this;\n            var listeners = me._listeners = {};\n            var listener = function () {\n                me.eventHandler.apply(me, arguments);\n            };\n\n            helpers.each(me.options.events, function (type) {\n                platform.addEventListener(me, type, listener);\n                listeners[type] = listener;\n            });\n\n            // Elements used to detect size change should not be injected for non responsive charts.\n            // See https://github.com/chartjs/Chart.js/issues/2210\n            if (me.options.responsive) {\n                listener = function () {\n                    me.resize();\n                };\n\n                platform.addEventListener(me, 'resize', listener);\n                listeners.resize = listener;\n            }\n        },\n\n        /**\n         * @private\n         */\n        unbindEvents: function () {\n            var me = this;\n            var listeners = me._listeners;\n            if (!listeners) {\n                return;\n            }\n\n            delete me._listeners;\n            helpers.each(listeners, function (listener, type) {\n                platform.removeEventListener(me, type, listener);\n            });\n        },\n\n        updateHoverStyle: function (elements, mode, enabled) {\n            var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n            var element, i, ilen;\n\n            for (i = 0, ilen = elements.length; i < ilen; ++i) {\n                element = elements[i];\n                if (element) {\n                    this.getDatasetMeta(element._datasetIndex).controller[method](element);\n                }\n            }\n        },\n\n        /**\n         * @private\n         */\n        eventHandler: function (e) {\n            var me = this;\n            var tooltip = me.tooltip;\n\n            if (plugins.notify(me, 'beforeEvent', [e]) === false) {\n                return;\n            }\n\n            // Buffer any update calls so that renders do not occur\n            me._bufferedRender = true;\n            me._bufferedRequest = null;\n\n            var changed = me.handleEvent(e);\n            // for smooth tooltip animations issue #4989\n            // the tooltip should be the source of change\n            // Animation check workaround:\n            // tooltip._start will be null when tooltip isn't animating\n            if (tooltip) {\n                changed = tooltip._start\n                    ? tooltip.handleEvent(e)\n                    : changed | tooltip.handleEvent(e);\n            }\n\n            plugins.notify(me, 'afterEvent', [e]);\n\n            var bufferedRequest = me._bufferedRequest;\n            if (bufferedRequest) {\n                // If we have an update that was triggered, we need to do a normal render\n                me.render(bufferedRequest);\n            } else if (changed && !me.animating) {\n                // If entering, leaving, or changing elements, animate the change via pivot\n                me.stop();\n\n                // We only need to render at this point. Updating will cause scales to be\n                // recomputed generating flicker & using more memory than necessary.\n                me.render(me.options.hover.animationDuration, true);\n            }\n\n            me._bufferedRender = false;\n            me._bufferedRequest = null;\n\n            return me;\n        },\n\n        /**\n         * Handle an event\n         * @private\n         * @param {IEvent} event the event to handle\n         * @return {Boolean} true if the chart needs to re-render\n         */\n        handleEvent: function (e) {\n            var me = this;\n            var options = me.options || {};\n            var hoverOptions = options.hover;\n            var changed = false;\n\n            me.lastActive = me.lastActive || [];\n\n            // Find Active Elements for hover and tooltips\n            if (e.type === 'mouseout') {\n                me.active = [];\n            } else {\n                me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n            }\n\n            // Invoke onHover hook\n            // Need to call with native event here to not break backwards compatibility\n            helpers.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n            if (e.type === 'mouseup' || e.type === 'click') {\n                if (options.onClick) {\n                    // Use e.native here for backwards compatibility\n                    options.onClick.call(me, e.native, me.active);\n                }\n            }\n\n            // Remove styling for last active (even if it may still be active)\n            if (me.lastActive.length) {\n                me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n            }\n\n            // Built in hover styling\n            if (me.active.length && hoverOptions.mode) {\n                me.updateHoverStyle(me.active, hoverOptions.mode, true);\n            }\n\n            changed = !helpers.arrayEquals(me.active, me.lastActive);\n\n            // Remember Last Actives\n            me.lastActive = me.active;\n\n            return changed;\n        }\n    });\n\n    /**\n     * Provided for backward compatibility, use Chart instead.\n     * @class Chart.Controller\n     * @deprecated since version 2.6.0\n\n     * @private\n     */\n    Chart.Controller = Chart;\n};\n\n},{\"25\":25,\"28\":28,\"30\":30,\"31\":31,\"45\":45,\"48\":48}],24:[function (require,module,exports) {\n'use strict';\n\nvar helpers = require(45);\n\nmodule.exports = function (Chart) {\n\n    var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n\n    /**\n     * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n     * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n     * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n     */\n    function listenArrayEvents(array, listener)\n    {\n        if (array._chartjs) {\n            array._chartjs.listeners.push(listener);\n            return;\n        }\n\n        Object.defineProperty(array, '_chartjs', {\n            configurable: true,\n            enumerable: false,\n            value: {\n                listeners: [listener]\n            }\n        });\n\n        arrayEvents.forEach(function (key) {\n            var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n            var base = array[key];\n\n            Object.defineProperty(array, key, {\n                configurable: true,\n                enumerable: false,\n                value: function () {\n                    var args = Array.prototype.slice.call(arguments);\n                    var res = base.apply(this, args);\n\n                    helpers.each(array._chartjs.listeners, function (object) {\n                        if (typeof object[method] === 'function') {\n                            object[method].apply(object, args);\n                        }\n                    });\n\n                    return res;\n                }\n            });\n        });\n    }\n\n    /**\n     * Removes the given array event listener and cleanup extra attached properties (such as\n     * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n     */\n    function unlistenArrayEvents(array, listener)\n    {\n        var stub = array._chartjs;\n        if (!stub) {\n            return;\n        }\n\n        var listeners = stub.listeners;\n        var index = listeners.indexOf(listener);\n        if (index !== -1) {\n            listeners.splice(index, 1);\n        }\n\n        if (listeners.length > 0) {\n            return;\n        }\n\n        arrayEvents.forEach(function (key) {\n            delete array[key];\n        });\n\n        delete array._chartjs;\n    }\n\n    // Base class for all dataset controllers (line, bar, etc)\n    Chart.DatasetController = function (chart, datasetIndex) {\n        this.initialize(chart, datasetIndex);\n    };\n\n    helpers.extend(Chart.DatasetController.prototype, {\n\n        /**\n         * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n         * @type {Chart.core.element}\n         */\n        datasetElementType: null,\n\n        /**\n         * Element type used to generate a meta data (e.g. Chart.element.Point).\n         * @type {Chart.core.element}\n         */\n        dataElementType: null,\n\n        initialize: function (chart, datasetIndex) {\n            var me = this;\n            me.chart = chart;\n            me.index = datasetIndex;\n            me.linkScales();\n            me.addElements();\n        },\n\n        updateIndex: function (datasetIndex) {\n            this.index = datasetIndex;\n        },\n\n        linkScales: function () {\n            var me = this;\n            var meta = me.getMeta();\n            var dataset = me.getDataset();\n\n            if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n                meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n            }\n            if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n                meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n            }\n        },\n\n        getDataset: function () {\n            return this.chart.data.datasets[this.index];\n        },\n\n        getMeta: function () {\n            return this.chart.getDatasetMeta(this.index);\n        },\n\n        getScaleForId: function (scaleID) {\n            return this.chart.scales[scaleID];\n        },\n\n        reset: function () {\n            this.update(true);\n        },\n\n        /**\n         * @private\n         */\n        destroy: function () {\n            if (this._data) {\n                unlistenArrayEvents(this._data, this);\n            }\n        },\n\n        createMetaDataset: function () {\n            var me = this;\n            var type = me.datasetElementType;\n            return type && new type({\n                _chart: me.chart,\n                _datasetIndex: me.index\n            });\n        },\n\n        createMetaData: function (index) {\n            var me = this;\n            var type = me.dataElementType;\n            return type && new type({\n                _chart: me.chart,\n                _datasetIndex: me.index,\n                _index: index\n            });\n        },\n\n        addElements: function () {\n            var me = this;\n            var meta = me.getMeta();\n            var data = me.getDataset().data || [];\n            var metaData = meta.data;\n            var i, ilen;\n\n            for (i = 0, ilen = data.length; i < ilen; ++i) {\n                metaData[i] = metaData[i] || me.createMetaData(i);\n            }\n\n            meta.dataset = meta.dataset || me.createMetaDataset();\n        },\n\n        addElementAndReset: function (index) {\n            var element = this.createMetaData(index);\n            this.getMeta().data.splice(index, 0, element);\n            this.updateElement(element, index, true);\n        },\n\n        buildOrUpdateElements: function () {\n            var me = this;\n            var dataset = me.getDataset();\n            var data = dataset.data || (dataset.data = []);\n\n            // In order to correctly handle data addition/deletion animation (an thus simulate\n            // real-time charts), we need to monitor these data modifications and synchronize\n            // the internal meta data accordingly.\n            if (me._data !== data) {\n                if (me._data) {\n                    // This case happens when the user replaced the data array instance.\n                    unlistenArrayEvents(me._data, me);\n                }\n\n                listenArrayEvents(data, me);\n                me._data = data;\n            }\n\n            // Re-sync meta data in case the user replaced the data array or if we missed\n            // any updates and so make sure that we handle number of datapoints changing.\n            me.resyncElements();\n        },\n\n        update: helpers.noop,\n\n        transition: function (easingValue) {\n            var meta = this.getMeta();\n            var elements = meta.data || [];\n            var ilen = elements.length;\n            var i = 0;\n\n            for (; i < ilen; ++i) {\n                elements[i].transition(easingValue);\n            }\n\n            if (meta.dataset) {\n                meta.dataset.transition(easingValue);\n            }\n        },\n\n        draw: function () {\n            var meta = this.getMeta();\n            var elements = meta.data || [];\n            var ilen = elements.length;\n            var i = 0;\n\n            if (meta.dataset) {\n                meta.dataset.draw();\n            }\n\n            for (; i < ilen; ++i) {\n                elements[i].draw();\n            }\n        },\n\n        removeHoverStyle: function (element, elementOpts) {\n            var dataset = this.chart.data.datasets[element._datasetIndex];\n            var index = element._index;\n            var custom = element.custom || {};\n            var valueOrDefault = helpers.valueAtIndexOrDefault;\n            var model = element._model;\n\n            model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\n            model.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\n            model.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);\n        },\n\n        setHoverStyle: function (element) {\n            var dataset = this.chart.data.datasets[element._datasetIndex];\n            var index = element._index;\n            var custom = element.custom || {};\n            var valueOrDefault = helpers.valueAtIndexOrDefault;\n            var getHoverColor = helpers.getHoverColor;\n            var model = element._model;\n\n            model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : valueOrDefault(dataset.hoverBackgroundColor, index, getHoverColor(model.backgroundColor));\n            model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : valueOrDefault(dataset.hoverBorderColor, index, getHoverColor(model.borderColor));\n            model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : valueOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\n        },\n\n        /**\n         * @private\n         */\n        resyncElements: function () {\n            var me = this;\n            var meta = me.getMeta();\n            var data = me.getDataset().data;\n            var numMeta = meta.data.length;\n            var numData = data.length;\n\n            if (numData < numMeta) {\n                meta.data.splice(numData, numMeta - numData);\n            } else if (numData > numMeta) {\n                me.insertElements(numMeta, numData - numMeta);\n            }\n        },\n\n        /**\n         * @private\n         */\n        insertElements: function (start, count) {\n            for (var i = 0; i < count; ++i) {\n                this.addElementAndReset(start + i);\n            }\n        },\n\n        /**\n         * @private\n         */\n        onDataPush: function () {\n            this.insertElements(this.getDataset().data.length - 1, arguments.length);\n        },\n\n        /**\n         * @private\n         */\n        onDataPop: function () {\n            this.getMeta().data.pop();\n        },\n\n        /**\n         * @private\n         */\n        onDataShift: function () {\n            this.getMeta().data.shift();\n        },\n\n        /**\n         * @private\n         */\n        onDataSplice: function (start, count) {\n            this.getMeta().data.splice(start, count);\n            this.insertElements(start, arguments.length - 2);\n        },\n\n        /**\n         * @private\n         */\n        onDataUnshift: function () {\n            this.insertElements(0, arguments.length);\n        }\n    });\n\n    Chart.DatasetController.extend = helpers.inherits;\n};\n\n},{\"45\":45}],25:[function (require,module,exports) {\n'use strict';\n\nvar helpers = require(45);\n\nmodule.exports = {\n    /**\n     * @private\n     */\n    _set: function (scope, values) {\n        return helpers.merge(this[scope] || (this[scope] = {}), values);\n    }\n};\n\n},{\"45\":45}],26:[function (require,module,exports) {\n'use strict';\n\nvar color = require(2);\nvar helpers = require(45);\n\nfunction interpolate(start, view, model, ease)\n{\n    var keys = Object.keys(model);\n    var i, ilen, key, actual, origin, target, type, c0, c1;\n\n    for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n\n        target = model[key];\n\n        // if a value is added to the model after pivot() has been called, the view\n        // doesn't contain it, so let's initialize the view to the target value.\n        if (!view.hasOwnProperty(key)) {\n            view[key] = target;\n        }\n\n        actual = view[key];\n\n        if (actual === target || key[0] === '_') {\n            continue;\n        }\n\n        if (!start.hasOwnProperty(key)) {\n            start[key] = actual;\n        }\n\n        origin = start[key];\n\n        type = typeof target;\n\n        if (type === typeof origin) {\n            if (type === 'string') {\n                c0 = color(origin);\n                if (c0.valid) {\n                    c1 = color(target);\n                    if (c1.valid) {\n                        view[key] = c1.mix(c0, ease).rgbString();\n                        continue;\n                    }\n                }\n            } else if (type === 'number' && isFinite(origin) && isFinite(target)) {\n                view[key] = origin + (target - origin) * ease;\n                continue;\n            }\n        }\n\n        view[key] = target;\n    }\n}\n\nvar Element = function (configuration) {\n    helpers.extend(this, configuration);\n    this.initialize.apply(this, arguments);\n};\n\nhelpers.extend(Element.prototype, {\n\n    initialize: function () {\n        this.hidden = false;\n    },\n\n    pivot: function () {\n        var me = this;\n        if (!me._view) {\n            me._view = helpers.clone(me._model);\n        }\n        me._start = {};\n        return me;\n    },\n\n    transition: function (ease) {\n        var me = this;\n        var model = me._model;\n        var start = me._start;\n        var view = me._view;\n\n        // No animation -> No Transition\n        if (!model || ease === 1) {\n            me._view = model;\n            me._start = null;\n            return me;\n        }\n\n        if (!view) {\n            view = me._view = {};\n        }\n\n        if (!start) {\n            start = me._start = {};\n        }\n\n        interpolate(start, view, model, ease);\n\n        return me;\n    },\n\n    tooltipPosition: function () {\n        return {\n            x: this._model.x,\n            y: this._model.y\n        };\n    },\n\n    hasValue: function () {\n        return helpers.isNumber(this._model.x) && helpers.isNumber(this._model.y);\n    }\n});\n\nElement.extend = helpers.inherits;\n\nmodule.exports = Element;\n\n},{\"2\":2,\"45\":45}],27:[function (require,module,exports) {\n/* global window: false */\n/* global document: false */\n'use strict';\n\nvar color = require(2);\nvar defaults = require(25);\nvar helpers = require(45);\n\nmodule.exports = function (Chart) {\n\n    // -- Basic js utility methods\n\n    helpers.configMerge = function (/* objects ... */) {\n        return helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n            merger: function (key, target, source, options) {\n                var tval = target[key] || {};\n                var sval = source[key];\n\n                if (key === 'scales') {\n                    // scale config merging is complex. Add our own function here for that\n                    target[key] = helpers.scaleMerge(tval, sval);\n                } else if (key === 'scale') {\n                    // used in polar area & radar charts since there is only one scale\n                    target[key] = helpers.merge(tval, [Chart.scaleService.getScaleDefaults(sval.type), sval]);\n                } else {\n                    helpers._merger(key, target, source, options);\n                }\n            }\n        });\n    };\n\n    helpers.scaleMerge = function (/* objects ... */) {\n        return helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n            merger: function (key, target, source, options) {\n                if (key === 'xAxes' || key === 'yAxes') {\n                    var slen = source[key].length;\n                    var i, type, scale;\n\n                    if (!target[key]) {\n                        target[key] = [];\n                    }\n\n                    for (i = 0; i < slen; ++i) {\n                        scale = source[key][i];\n                        type = helpers.valueOrDefault(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n                        if (i >= target[key].length) {\n                            target[key].push({});\n                        }\n\n                        if (!target[key][i].type || (scale.type && scale.type !== target[key][i].type)) {\n                            // new/untyped scale or type changed: let's apply the new defaults\n                            // then merge source scale to correctly overwrite the defaults.\n                            helpers.merge(target[key][i], [Chart.scaleService.getScaleDefaults(type), scale]);\n                        } else {\n                            // scales type are the same\n                            helpers.merge(target[key][i], scale);\n                        }\n                    }\n                } else {\n                    helpers._merger(key, target, source, options);\n                }\n            }\n        });\n    };\n\n    helpers.where = function (collection, filterCallback) {\n        if (helpers.isArray(collection) && Array.prototype.filter) {\n            return collection.filter(filterCallback);\n        }\n        var filtered = [];\n\n        helpers.each(collection, function (item) {\n            if (filterCallback(item)) {\n                filtered.push(item);\n            }\n        });\n\n        return filtered;\n    };\n    helpers.findIndex = Array.prototype.findIndex ?\n        function (array, callback, scope) {\n            return array.findIndex(callback, scope);\n        } :\n        function (array, callback, scope) {\n            scope = scope === undefined ? array : scope;\n            for (var i = 0, ilen = array.length; i < ilen; ++i) {\n                if (callback.call(scope, array[i], i, array)) {\n                    return i;\n                }\n            }\n            return -1;\n        };\n    helpers.findNextWhere = function (arrayToSearch, filterCallback, startIndex) {\n        // Default to start of the array\n        if (helpers.isNullOrUndef(startIndex)) {\n            startIndex = -1;\n        }\n        for (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n            var currentItem = arrayToSearch[i];\n            if (filterCallback(currentItem)) {\n                return currentItem;\n            }\n        }\n    };\n    helpers.findPreviousWhere = function (arrayToSearch, filterCallback, startIndex) {\n        // Default to end of the array\n        if (helpers.isNullOrUndef(startIndex)) {\n            startIndex = arrayToSearch.length;\n        }\n        for (var i = startIndex - 1; i >= 0; i--) {\n            var currentItem = arrayToSearch[i];\n            if (filterCallback(currentItem)) {\n                return currentItem;\n            }\n        }\n    };\n\n    // -- Math methods\n    helpers.isNumber = function (n) {\n        return !isNaN(parseFloat(n)) && isFinite(n);\n    };\n    helpers.almostEquals = function (x, y, epsilon) {\n        return Math.abs(x - y) < epsilon;\n    };\n    helpers.almostWhole = function (x, epsilon) {\n        var rounded = Math.round(x);\n        return (((rounded - epsilon) < x) && ((rounded + epsilon) > x));\n    };\n    helpers.max = function (array) {\n        return array.reduce(function (max, value) {\n            if (!isNaN(value)) {\n                return Math.max(max, value);\n            }\n            return max;\n        }, Number.NEGATIVE_INFINITY);\n    };\n    helpers.min = function (array) {\n        return array.reduce(function (min, value) {\n            if (!isNaN(value)) {\n                return Math.min(min, value);\n            }\n            return min;\n        }, Number.POSITIVE_INFINITY);\n    };\n    helpers.sign = Math.sign ?\n        function (x) {\n            return Math.sign(x);\n        } :\n        function (x) {\n            x = +x; // convert to a number\n            if (x === 0 || isNaN(x)) {\n                return x;\n            }\n            return x > 0 ? 1 : -1;\n        };\n    helpers.log10 = Math.log10 ?\n        function (x) {\n            return Math.log10(x);\n        } :\n        function (x) {\n            var exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n            // Check for whole powers of 10,\n            // which due to floating point rounding error should be corrected.\n            var powerOf10 = Math.round(exponent);\n            var isPowerOf10 = x === Math.pow(10, powerOf10);\n\n            return isPowerOf10 ? powerOf10 : exponent;\n        };\n    helpers.toRadians = function (degrees) {\n        return degrees * (Math.PI / 180);\n    };\n    helpers.toDegrees = function (radians) {\n        return radians * (180 / Math.PI);\n    };\n    // Gets the angle from vertical upright to the point about a centre.\n    helpers.getAngleFromPoint = function (centrePoint, anglePoint) {\n        var distanceFromXCenter = anglePoint.x - centrePoint.x;\n        var distanceFromYCenter = anglePoint.y - centrePoint.y;\n        var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n        var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n        if (angle < (-0.5 * Math.PI)) {\n            angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n        }\n\n        return {\n            angle: angle,\n            distance: radialDistanceFromCenter\n        };\n    };\n    helpers.distanceBetweenPoints = function (pt1, pt2) {\n        return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    helpers.aliasPixel = function (pixelWidth) {\n        return (pixelWidth % 2 === 0) ? 0 : 0.5;\n    };\n    helpers.splineCurve = function (firstPoint, middlePoint, afterPoint, t) {\n        // Props to Rob Spencer at scaled innovation for his post on splining between points\n        // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n        // This function must also respect \"skipped\" points\n\n        var previous = firstPoint.skip ? middlePoint : firstPoint;\n        var current = middlePoint;\n        var next = afterPoint.skip ? middlePoint : afterPoint;\n\n        var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n        var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n\n        var s01 = d01 / (d01 + d12);\n        var s12 = d12 / (d01 + d12);\n\n        // If all points are the same, s01 & s02 will be inf\n        s01 = isNaN(s01) ? 0 : s01;\n        s12 = isNaN(s12) ? 0 : s12;\n\n        var fa = t * s01; // scaling factor for triangle Ta\n        var fb = t * s12;\n\n        return {\n            previous: {\n                x: current.x - fa * (next.x - previous.x),\n                y: current.y - fa * (next.y - previous.y)\n            },\n            next: {\n                x: current.x + fb * (next.x - previous.x),\n                y: current.y + fb * (next.y - previous.y)\n            }\n        };\n    };\n    helpers.EPSILON = Number.EPSILON || 1e-14;\n    helpers.splineCurveMonotone = function (points) {\n        // This function calculates B\u00e9zier control points in a similar way than |splineCurve|,\n        // but preserves monotonicity of the provided data and ensures no local extremums are added\n        // between the dataset discrete points due to the interpolation.\n        // See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n\n        var pointsWithTangents = (points || []).map(function (point) {\n            return {\n                model: point._model,\n                deltaK: 0,\n                mK: 0\n            };\n        });\n\n        // Calculate slopes (deltaK) and initialize tangents (mK)\n        var pointsLen = pointsWithTangents.length;\n        var i, pointBefore, pointCurrent, pointAfter;\n        for (i = 0; i < pointsLen; ++i) {\n            pointCurrent = pointsWithTangents[i];\n            if (pointCurrent.model.skip) {\n                continue;\n            }\n\n            pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n            pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n            if (pointAfter && !pointAfter.model.skip) {\n                var slopeDeltaX = (pointAfter.model.x - pointCurrent.model.x);\n\n                // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n                pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n            }\n\n            if (!pointBefore || pointBefore.model.skip) {\n                pointCurrent.mK = pointCurrent.deltaK;\n            } else if (!pointAfter || pointAfter.model.skip) {\n                pointCurrent.mK = pointBefore.deltaK;\n            } else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n                pointCurrent.mK = 0;\n            } else {\n                pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n            }\n        }\n\n        // Adjust tangents to ensure monotonic properties\n        var alphaK, betaK, tauK, squaredMagnitude;\n        for (i = 0; i < pointsLen - 1; ++i) {\n            pointCurrent = pointsWithTangents[i];\n            pointAfter = pointsWithTangents[i + 1];\n            if (pointCurrent.model.skip || pointAfter.model.skip) {\n                continue;\n            }\n\n            if (helpers.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n                pointCurrent.mK = pointAfter.mK = 0;\n                continue;\n            }\n\n            alphaK = pointCurrent.mK / pointCurrent.deltaK;\n            betaK = pointAfter.mK / pointCurrent.deltaK;\n            squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n            if (squaredMagnitude <= 9) {\n                continue;\n            }\n\n            tauK = 3 / Math.sqrt(squaredMagnitude);\n            pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n            pointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n        }\n\n        // Compute control points\n        var deltaX;\n        for (i = 0; i < pointsLen; ++i) {\n            pointCurrent = pointsWithTangents[i];\n            if (pointCurrent.model.skip) {\n                continue;\n            }\n\n            pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n            pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n            if (pointBefore && !pointBefore.model.skip) {\n                deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n                pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n                pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n            }\n            if (pointAfter && !pointAfter.model.skip) {\n                deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n                pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n                pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n            }\n        }\n    };\n    helpers.nextItem = function (collection, index, loop) {\n        if (loop) {\n            return index >= collection.length - 1 ? collection[0] : collection[index + 1];\n        }\n        return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n    };\n    helpers.previousItem = function (collection, index, loop) {\n        if (loop) {\n            return index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n        }\n        return index <= 0 ? collection[0] : collection[index - 1];\n    };\n    // Implementation of the nice number algorithm used in determining where axis labels will go\n    helpers.niceNum = function (range, round) {\n        var exponent = Math.floor(helpers.log10(range));\n        var fraction = range / Math.pow(10, exponent);\n        var niceFraction;\n\n        if (round) {\n            if (fraction < 1.5) {\n                niceFraction = 1;\n            } else if (fraction < 3) {\n                niceFraction = 2;\n            } else if (fraction < 7) {\n                niceFraction = 5;\n            } else {\n                niceFraction = 10;\n            }\n        } else if (fraction <= 1.0) {\n            niceFraction = 1;\n        } else if (fraction <= 2) {\n            niceFraction = 2;\n        } else if (fraction <= 5) {\n            niceFraction = 5;\n        } else {\n            niceFraction = 10;\n        }\n\n        return niceFraction * Math.pow(10, exponent);\n    };\n    // Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n    helpers.requestAnimFrame = (function () {\n        if (typeof window === 'undefined') {\n            return function (callback) {\n                callback();\n            };\n        }\n        return window.requestAnimationFrame ||\n            window.webkitRequestAnimationFrame ||\n            window.mozRequestAnimationFrame ||\n            window.oRequestAnimationFrame ||\n            window.msRequestAnimationFrame ||\n            function (callback) {\n                return window.setTimeout(callback, 1000 / 60);\n            };\n    }());\n    // -- DOM methods\n    helpers.getRelativePosition = function (evt, chart) {\n        var mouseX, mouseY;\n        var e = evt.originalEvent || evt;\n        var canvas = evt.currentTarget || evt.srcElement;\n        var boundingRect = canvas.getBoundingClientRect();\n\n        var touches = e.touches;\n        if (touches && touches.length > 0) {\n            mouseX = touches[0].clientX;\n            mouseY = touches[0].clientY;\n        } else {\n            mouseX = e.clientX;\n            mouseY = e.clientY;\n        }\n\n        // Scale mouse coordinates into canvas coordinates\n        // by following the pattern laid out by 'jerryj' in the comments of\n        // http://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n        var paddingLeft = parseFloat(helpers.getStyle(canvas, 'padding-left'));\n        var paddingTop = parseFloat(helpers.getStyle(canvas, 'padding-top'));\n        var paddingRight = parseFloat(helpers.getStyle(canvas, 'padding-right'));\n        var paddingBottom = parseFloat(helpers.getStyle(canvas, 'padding-bottom'));\n        var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n        var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom;\n\n        // We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n        // the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n        mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / (width) * canvas.width / chart.currentDevicePixelRatio);\n        mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / (height) * canvas.height / chart.currentDevicePixelRatio);\n\n        return {\n            x: mouseX,\n            y: mouseY\n        };\n\n    };\n\n    // Private helper function to convert max-width/max-height values that may be percentages into a number\n    function parseMaxStyle(styleValue, node, parentProperty)\n    {\n        var valueInPixels;\n        if (typeof styleValue === 'string') {\n            valueInPixels = parseInt(styleValue, 10);\n\n            if (styleValue.indexOf('%') !== -1) {\n                // percentage * size in dimension\n                valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n            }\n        } else {\n            valueInPixels = styleValue;\n        }\n\n        return valueInPixels;\n    }\n\n    /**\n     * Returns if the given value contains an effective constraint.\n     * @private\n     */\n    function isConstrainedValue(value)\n    {\n        return value !== undefined && value !== null && value !== 'none';\n    }\n\n    // Private helper to get a constraint dimension\n    // @param domNode : the node to check the constraint on\n    // @param maxStyle : the style that defines the maximum for the direction we are using (maxWidth / maxHeight)\n    // @param percentageProperty : property of parent to use when calculating width as a percentage\n    // @see http://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser\n    function getConstraintDimension(domNode, maxStyle, percentageProperty)\n    {\n        var view = document.defaultView;\n        var parentNode = domNode.parentNode;\n        var constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n        var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n        var hasCNode = isConstrainedValue(constrainedNode);\n        var hasCContainer = isConstrainedValue(constrainedContainer);\n        var infinity = Number.POSITIVE_INFINITY;\n\n        if (hasCNode || hasCContainer) {\n            return Math.min(\n                hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity,\n                hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity\n            );\n        }\n\n        return 'none';\n    }\n    // returns Number or undefined if no constraint\n    helpers.getConstraintWidth = function (domNode) {\n        return getConstraintDimension(domNode, 'max-width', 'clientWidth');\n    };\n    // returns Number or undefined if no constraint\n    helpers.getConstraintHeight = function (domNode) {\n        return getConstraintDimension(domNode, 'max-height', 'clientHeight');\n    };\n    helpers.getMaximumWidth = function (domNode) {\n        var container = domNode.parentNode;\n        if (!container) {\n            return domNode.clientWidth;\n        }\n\n        var paddingLeft = parseInt(helpers.getStyle(container, 'padding-left'), 10);\n        var paddingRight = parseInt(helpers.getStyle(container, 'padding-right'), 10);\n        var w = container.clientWidth - paddingLeft - paddingRight;\n        var cw = helpers.getConstraintWidth(domNode);\n        return isNaN(cw) ? w : Math.min(w, cw);\n    };\n    helpers.getMaximumHeight = function (domNode) {\n        var container = domNode.parentNode;\n        if (!container) {\n            return domNode.clientHeight;\n        }\n\n        var paddingTop = parseInt(helpers.getStyle(container, 'padding-top'), 10);\n        var paddingBottom = parseInt(helpers.getStyle(container, 'padding-bottom'), 10);\n        var h = container.clientHeight - paddingTop - paddingBottom;\n        var ch = helpers.getConstraintHeight(domNode);\n        return isNaN(ch) ? h : Math.min(h, ch);\n    };\n    helpers.getStyle = function (el, property) {\n        return el.currentStyle ?\n            el.currentStyle[property] :\n            document.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n    };\n    helpers.retinaScale = function (chart, forceRatio) {\n        var pixelRatio = chart.currentDevicePixelRatio = forceRatio || window.devicePixelRatio || 1;\n        if (pixelRatio === 1) {\n            return;\n        }\n\n        var canvas = chart.canvas;\n        var height = chart.height;\n        var width = chart.width;\n\n        canvas.height = height * pixelRatio;\n        canvas.width = width * pixelRatio;\n        chart.ctx.scale(pixelRatio, pixelRatio);\n\n        // If no style has been set on the canvas, the render size is used as display size,\n        // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n        // See https://github.com/chartjs/Chart.js/issues/3575\n        if (!canvas.style.height && !canvas.style.width) {\n            canvas.style.height = height + 'px';\n            canvas.style.width = width + 'px';\n        }\n    };\n    // -- Canvas methods\n    helpers.fontString = function (pixelSize, fontStyle, fontFamily) {\n        return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n    };\n    helpers.longestText = function (ctx, font, arrayOfThings, cache) {\n        cache = cache || {};\n        var data = cache.data = cache.data || {};\n        var gc = cache.garbageCollect = cache.garbageCollect || [];\n\n        if (cache.font !== font) {\n            data = cache.data = {};\n            gc = cache.garbageCollect = [];\n            cache.font = font;\n        }\n\n        ctx.font = font;\n        var longest = 0;\n        helpers.each(arrayOfThings, function (thing) {\n            // Undefined strings and arrays should not be measured\n            if (thing !== undefined && thing !== null && helpers.isArray(thing) !== true) {\n                longest = helpers.measureText(ctx, data, gc, longest, thing);\n            } else if (helpers.isArray(thing)) {\n                // if it is an array lets measure each element\n                // to do maybe simplify this function a bit so we can do this more recursively?\n                helpers.each(thing, function (nestedThing) {\n                    // Undefined strings and arrays should not be measured\n                    if (nestedThing !== undefined && nestedThing !== null && !helpers.isArray(nestedThing)) {\n                        longest = helpers.measureText(ctx, data, gc, longest, nestedThing);\n                    }\n                });\n            }\n        });\n\n        var gcLen = gc.length / 2;\n        if (gcLen > arrayOfThings.length) {\n            for (var i = 0; i < gcLen; i++) {\n                delete data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n        return longest;\n    };\n    helpers.measureText = function (ctx, data, gc, longest, string) {\n        var textWidth = data[string];\n        if (!textWidth) {\n            textWidth = data[string] = ctx.measureText(string).width;\n            gc.push(string);\n        }\n        if (textWidth > longest) {\n            longest = textWidth;\n        }\n        return longest;\n    };\n    helpers.numberOfLabelLines = function (arrayOfThings) {\n        var numberOfLines = 1;\n        helpers.each(arrayOfThings, function (thing) {\n            if (helpers.isArray(thing)) {\n                if (thing.length > numberOfLines) {\n                    numberOfLines = thing.length;\n                }\n            }\n        });\n        return numberOfLines;\n    };\n\n    helpers.color = !color ?\n        function (value) {\n            console.error('Color.js not found!');\n            return value;\n        } :\n        function (value) {\n            /* global CanvasGradient */\n            if (value instanceof CanvasGradient) {\n                value = defaults.global.defaultColor;\n            }\n\n            return color(value);\n        };\n\n    helpers.getHoverColor = function (colorValue) {\n        /* global CanvasPattern */\n        return (colorValue instanceof CanvasPattern) ?\n            colorValue :\n            helpers.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n    };\n};\n\n},{\"2\":2,\"25\":25,\"45\":45}],28:[function (require,module,exports) {\n'use strict';\n\nvar helpers = require(45);\n\n/**\n * Helper function to get relative position for an event\n * @param {Event|IEvent} event - The event to get the position for\n * @param {Chart} chart - The chart\n * @returns {Point} the event position\n */\nfunction getRelativePosition(e, chart)\n{\n    if (e.native) {\n        return {\n            x: e.x,\n            y: e.y\n        };\n    }\n\n    return helpers.getRelativePosition(e, chart);\n}\n\n/**\n * Helper function to traverse all of the visible elements in the chart\n * @param chart {chart} the chart\n * @param handler {Function} the callback to execute for each visible item\n */\nfunction parseVisibleItems(chart, handler)\n{\n    var datasets = chart.data.datasets;\n    var meta, i, j, ilen, jlen;\n\n    for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n        if (!chart.isDatasetVisible(i)) {\n            continue;\n        }\n\n        meta = chart.getDatasetMeta(i);\n        for (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n            var element = meta.data[j];\n            if (!element._view.skip) {\n                handler(element);\n            }\n        }\n    }\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param items {ChartElement[]} elements to filter\n * @param position {Point} the point to be nearest to\n * @return {ChartElement[]} the nearest items\n */\nfunction getIntersectItems(chart, position)\n{\n    var elements = [];\n\n    parseVisibleItems(chart, function (element) {\n        if (element.inRange(position.x, position.y)) {\n            elements.push(element);\n        }\n    });\n\n    return elements;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in teh chart\n * @param chart {Chart} the chart to look at elements from\n * @param position {Point} the point to be nearest to\n * @param intersect {Boolean} if true, only consider items that intersect the position\n * @param distanceMetric {Function} function to provide the distance between points\n * @return {ChartElement[]} the nearest items\n */\nfunction getNearestItems(chart, position, intersect, distanceMetric)\n{\n    var minDistance = Number.POSITIVE_INFINITY;\n    var nearestItems = [];\n\n    parseVisibleItems(chart, function (element) {\n        if (intersect && !element.inRange(position.x, position.y)) {\n            return;\n        }\n\n        var center = element.getCenterPoint();\n        var distance = distanceMetric(position, center);\n\n        if (distance < minDistance) {\n            nearestItems = [element];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            // Can have multiple items at the same distance in which case we sort by size\n            nearestItems.push(element);\n        }\n    });\n\n    return nearestItems;\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {String} axis the axis mode. x|y|xy\n */\nfunction getDistanceMetricForAxis(axis)\n{\n    var useX = axis.indexOf('x') !== -1;\n    var useY = axis.indexOf('y') !== -1;\n\n    return function (pt1, pt2) {\n        var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n\nfunction indexMode(chart, e, options)\n{\n    var position = getRelativePosition(e, chart);\n    // Default axis for index mode is 'x' to match old behaviour\n    options.axis = options.axis || 'x';\n    var distanceMetric = getDistanceMetricForAxis(options.axis);\n    var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n    var elements = [];\n\n    if (!items.length) {\n        return [];\n    }\n\n    chart.data.datasets.forEach(function (dataset, datasetIndex) {\n        if (chart.isDatasetVisible(datasetIndex)) {\n            var meta = chart.getDatasetMeta(datasetIndex);\n            var element = meta.data[items[0]._index];\n\n            // don't count items that are skipped (null data)\n            if (element && !element._view.skip) {\n                elements.push(element);\n            }\n        }\n    });\n\n    return elements;\n}\n\n/**\n * @interface IInteractionOptions\n */\n/**\n * If true, only consider items that intersect the point\n * @name IInterfaceOptions#boolean\n * @type Boolean\n */\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nmodule.exports = {\n    // Helper function for different modes\n    modes: {\n        single: function (chart, e) {\n            var position = getRelativePosition(e, chart);\n            var elements = [];\n\n            parseVisibleItems(chart, function (element) {\n                if (element.inRange(position.x, position.y)) {\n                    elements.push(element);\n                    return elements;\n                }\n            });\n\n            return elements.slice(0, 1);\n        },\n\n        /**\n         * @function Chart.Interaction.modes.label\n         * @deprecated since version 2.4.0\n\n         * @private\n         */\n        label: indexMode,\n\n        /**\n         * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n         * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n         * @function Chart.Interaction.modes.index\n         * @since v2.4.0\n         * @param chart {chart} the chart we are returning items from\n         * @param e {Event} the event we are find things at\n         * @param options {IInteractionOptions} options to use during interaction\n         * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n         */\n        index: indexMode,\n\n        /**\n         * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n         * If the options.intersect is false, we find the nearest item and return the items in that dataset\n         * @function Chart.Interaction.modes.dataset\n         * @param chart {chart} the chart we are returning items from\n         * @param e {Event} the event we are find things at\n         * @param options {IInteractionOptions} options to use during interaction\n         * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n         */\n        dataset: function (chart, e, options) {\n            var position = getRelativePosition(e, chart);\n            options.axis = options.axis || 'xy';\n            var distanceMetric = getDistanceMetricForAxis(options.axis);\n            var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n            if (items.length > 0) {\n                items = chart.getDatasetMeta(items[0]._datasetIndex).data;\n            }\n\n            return items;\n        },\n\n        /**\n         * @function Chart.Interaction.modes.x-axis\n         * @deprecated since version 2.4.0. Use index mode and intersect == true\n\n         * @private\n         */\n        'x-axis': function (chart, e) {\n            return indexMode(chart, e, {intersect: false});\n        },\n\n        /**\n         * Point mode returns all elements that hit test based on the event position\n         * of the event\n         * @function Chart.Interaction.modes.intersect\n         * @param chart {chart} the chart we are returning items from\n         * @param e {Event} the event we are find things at\n         * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n         */\n        point: function (chart, e) {\n            var position = getRelativePosition(e, chart);\n            return getIntersectItems(chart, position);\n        },\n\n        /**\n         * nearest mode returns the element closest to the point\n         * @function Chart.Interaction.modes.intersect\n         * @param chart {chart} the chart we are returning items from\n         * @param e {Event} the event we are find things at\n         * @param options {IInteractionOptions} options to use\n         * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n         */\n        nearest: function (chart, e, options) {\n            var position = getRelativePosition(e, chart);\n            options.axis = options.axis || 'xy';\n            var distanceMetric = getDistanceMetricForAxis(options.axis);\n            var nearestItems = getNearestItems(chart, position, options.intersect, distanceMetric);\n\n            // We have multiple items at the same distance from the event. Now sort by smallest\n            if (nearestItems.length > 1) {\n                nearestItems.sort(function (a, b) {\n                    var sizeA = a.getArea();\n                    var sizeB = b.getArea();\n                    var ret = sizeA - sizeB;\n\n                    if (ret === 0) {\n                        // if equal sort by dataset index\n                        ret = a._datasetIndex - b._datasetIndex;\n                    }\n\n                    return ret;\n                });\n            }\n\n            // Return only 1 item\n            return nearestItems.slice(0, 1);\n        },\n\n        /**\n         * x mode returns the elements that hit-test at the current x coordinate\n         * @function Chart.Interaction.modes.x\n         * @param chart {chart} the chart we are returning items from\n         * @param e {Event} the event we are find things at\n         * @param options {IInteractionOptions} options to use\n         * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n         */\n        x: function (chart, e, options) {\n            var position = getRelativePosition(e, chart);\n            var items = [];\n            var intersectsItem = false;\n\n            parseVisibleItems(chart, function (element) {\n                if (element.inXRange(position.x)) {\n                    items.push(element);\n                }\n\n                if (element.inRange(position.x, position.y)) {\n                    intersectsItem = true;\n                }\n            });\n\n            // If we want to trigger on an intersect and we don't have any items\n            // that intersect the position, return nothing\n            if (options.intersect && !intersectsItem) {\n                items = [];\n            }\n            return items;\n        },\n\n        /**\n         * y mode returns the elements that hit-test at the current y coordinate\n         * @function Chart.Interaction.modes.y\n         * @param chart {chart} the chart we are returning items from\n         * @param e {Event} the event we are find things at\n         * @param options {IInteractionOptions} options to use\n         * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n         */\n        y: function (chart, e, options) {\n            var position = getRelativePosition(e, chart);\n            var items = [];\n            var intersectsItem = false;\n\n            parseVisibleItems(chart, function (element) {\n                if (element.inYRange(position.y)) {\n                    items.push(element);\n                }\n\n                if (element.inRange(position.x, position.y)) {\n                    intersectsItem = true;\n                }\n            });\n\n            // If we want to trigger on an intersect and we don't have any items\n            // that intersect the position, return nothing\n            if (options.intersect && !intersectsItem) {\n                items = [];\n            }\n            return items;\n        }\n    }\n};\n\n},{\"45\":45}],29:[function (require,module,exports) {\n'use strict';\n\nvar defaults = require(25);\n\ndefaults._set('global', {\n    responsive: true,\n    responsiveAnimationDuration: 0,\n    maintainAspectRatio: true,\n    events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n    hover: {\n        onHover: null,\n        mode: 'nearest',\n        intersect: true,\n        animationDuration: 400\n    },\n    onClick: null,\n    defaultColor: 'rgba(0,0,0,0.1)',\n    defaultFontColor: '#666',\n    defaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n    defaultFontSize: 12,\n    defaultFontStyle: 'normal',\n    showLines: true,\n\n    // Element defaults defined in element extensions\n    elements: {},\n\n    // Layout options such as padding\n    layout: {\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    }\n});\n\nmodule.exports = function () {\n\n    // Occupy the global variable of Chart, and create a simple base class\n    var Chart = function (item, config) {\n        this.construct(item, config);\n        return this;\n    };\n\n    Chart.Chart = Chart;\n\n    return Chart;\n};\n\n},{\"25\":25}],30:[function (require,module,exports) {\n'use strict';\n\nvar helpers = require(45);\n\nfunction filterByPosition(array, position)\n{\n    return helpers.where(array, function (v) {\n        return v.position === position;\n    });\n}\n\nfunction sortByWeight(array, reverse)\n{\n    array.forEach(function (v, i) {\n        v._tmpIndex_ = i;\n        return v;\n    });\n    array.sort(function (a, b) {\n        var v0 = reverse ? b : a;\n        var v1 = reverse ? a : b;\n        return v0.weight === v1.weight ?\n            v0._tmpIndex_ - v1._tmpIndex_ :\n            v0.weight - v1.weight;\n    });\n    array.forEach(function (v) {\n        delete v._tmpIndex_;\n    });\n}\n\n/**\n * @interface ILayoutItem\n * @prop {String} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {Number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {Boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n * @prop {Function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {Function} update - Takes two parameters: width and height. Returns size of item\n * @prop {Function} getPadding -  Returns an object with padding on the edges\n * @prop {Number} width - Width of item. Must be valid after update()\n * @prop {Number} height - Height of item. Must be valid after update()\n * @prop {Number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nmodule.exports = {\n    defaults: {},\n\n    /**\n     * Register a box to a chart.\n     * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n     * @param {Chart} chart - the chart to use\n     * @param {ILayoutItem} item - the item to add to be layed out\n     */\n    addBox: function (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n\n        // initialize item with default values\n        item.fullWidth = item.fullWidth || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n\n        chart.boxes.push(item);\n    },\n\n    /**\n     * Remove a layoutItem from a chart\n     * @param {Chart} chart - the chart to remove the box from\n     * @param {Object} layoutItem - the item to remove from the layout\n     */\n    removeBox: function (chart, layoutItem) {\n        var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n\n    /**\n     * Sets (or updates) options on the given `item`.\n     * @param {Chart} chart - the chart in which the item lives (or will be added to)\n     * @param {Object} item - the item to configure with the given options\n     * @param {Object} options - the new item options.\n     */\n    configure: function (chart, item, options) {\n        var props = ['fullWidth', 'position', 'weight'];\n        var ilen = props.length;\n        var i = 0;\n        var prop;\n\n        for (; i < ilen; ++i) {\n            prop = props[i];\n            if (options.hasOwnProperty(prop)) {\n                item[prop] = options[prop];\n            }\n        }\n    },\n\n    /**\n     * Fits boxes of the given chart into the given size by having each box measure itself\n     * then running a fitting algorithm\n     * @param {Chart} chart - the chart\n     * @param {Number} width - the width to fit into\n     * @param {Number} height - the height to fit into\n     */\n    update: function (chart, width, height) {\n        if (!chart) {\n            return;\n        }\n\n        var layoutOptions = chart.options.layout || {};\n        var padding = helpers.options.toPadding(layoutOptions.padding);\n        var leftPadding = padding.left;\n        var rightPadding = padding.right;\n        var topPadding = padding.top;\n        var bottomPadding = padding.bottom;\n\n        var leftBoxes = filterByPosition(chart.boxes, 'left');\n        var rightBoxes = filterByPosition(chart.boxes, 'right');\n        var topBoxes = filterByPosition(chart.boxes, 'top');\n        var bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n        var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea');\n\n        // Sort boxes by weight. A higher weight is further away from the chart area\n        sortByWeight(leftBoxes, true);\n        sortByWeight(rightBoxes, false);\n        sortByWeight(topBoxes, true);\n        sortByWeight(bottomBoxes, false);\n\n        // Essentially we now have any number of boxes on each of the 4 sides.\n        // Our canvas looks like the following.\n        // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n        // B1 is the bottom axis\n        // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n        // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n        // an error will be thrown.\n        //\n        // |----------------------------------------------------|\n        // |                  T1 (Full Width)                   |\n        // |----------------------------------------------------|\n        // |    |    |                 T2                  |    |\n        // |    |----|-------------------------------------|----|\n        // |    |    | C1 |                           | C2 |    |\n        // |    |    |----|                           |----|    |\n        // |    |    |                                     |    |\n        // | L1 | L2 |           ChartArea (C0)            | R1 |\n        // |    |    |                                     |    |\n        // |    |    |----|                           |----|    |\n        // |    |    | C3 |                           | C4 |    |\n        // |    |----|-------------------------------------|----|\n        // |    |    |                 B1                  |    |\n        // |----------------------------------------------------|\n        // |                  B2 (Full Width)                   |\n        // |----------------------------------------------------|\n        //\n        // What we do to find the best sizing, we do the following\n        // 1. Determine the minimum size of the chart area.\n        // 2. Split the remaining width equally between each vertical axis\n        // 3. Split the remaining height equally between each horizontal axis\n        // 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n        // 5. Adjust the sizes of each axis based on it's minimum reported size.\n        // 6. Refit each axis\n        // 7. Position each axis in the final location\n        // 8. Tell the chart the final location of the chart area\n        // 9. Tell any axes that overlay the chart area the positions of the chart area\n\n        // Step 1\n        var chartWidth = width - leftPadding - rightPadding;\n        var chartHeight = height - topPadding - bottomPadding;\n        var chartAreaWidth = chartWidth / 2; // min 50%\n        var chartAreaHeight = chartHeight / 2; // min 50%\n\n        // Step 2\n        var verticalBoxWidth = (width - chartAreaWidth) / (leftBoxes.length + rightBoxes.length);\n\n        // Step 3\n        var horizontalBoxHeight = (height - chartAreaHeight) / (topBoxes.length + bottomBoxes.length);\n\n        // Step 4\n        var maxChartAreaWidth = chartWidth;\n        var maxChartAreaHeight = chartHeight;\n        var minBoxSizes = [];\n\n        function getMinimumBoxSize(box)\n        {\n            var minSize;\n            var isHorizontal = box.isHorizontal();\n\n            if (isHorizontal) {\n                minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, horizontalBoxHeight);\n                maxChartAreaHeight -= minSize.height;\n            } else {\n                minSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n                maxChartAreaWidth -= minSize.width;\n            }\n\n            minBoxSizes.push({\n                horizontal: isHorizontal,\n                minSize: minSize,\n                box: box,\n            });\n        }\n\n        helpers.each(leftBoxes.concat(rightBoxes, topBoxes, bottomBoxes), getMinimumBoxSize);\n\n        // If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n        var maxHorizontalLeftPadding = 0;\n        var maxHorizontalRightPadding = 0;\n        var maxVerticalTopPadding = 0;\n        var maxVerticalBottomPadding = 0;\n\n        helpers.each(topBoxes.concat(bottomBoxes), function (horizontalBox) {\n            if (horizontalBox.getPadding) {\n                var boxPadding = horizontalBox.getPadding();\n                maxHorizontalLeftPadding = Math.max(maxHorizontalLeftPadding, boxPadding.left);\n                maxHorizontalRightPadding = Math.max(maxHorizontalRightPadding, boxPadding.right);\n            }\n        });\n\n        helpers.each(leftBoxes.concat(rightBoxes), function (verticalBox) {\n            if (verticalBox.getPadding) {\n                var boxPadding = verticalBox.getPadding();\n                maxVerticalTopPadding = Math.max(maxVerticalTopPadding, boxPadding.top);\n                maxVerticalBottomPadding = Math.max(maxVerticalBottomPadding, boxPadding.bottom);\n            }\n        });\n\n        // At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n        // be if the axes are drawn at their minimum sizes.\n        // Steps 5 & 6\n        var totalLeftBoxesWidth = leftPadding;\n        var totalRightBoxesWidth = rightPadding;\n        var totalTopBoxesHeight = topPadding;\n        var totalBottomBoxesHeight = bottomPadding;\n\n        // Function to fit a box\n        function fitBox(box)\n        {\n            var minBoxSize = helpers.findNextWhere(minBoxSizes, function (minBox) {\n                return minBox.box === box;\n            });\n\n            if (minBoxSize) {\n                if (box.isHorizontal()) {\n                    var scaleMargin = {\n                        left: Math.max(totalLeftBoxesWidth, maxHorizontalLeftPadding),\n                        right: Math.max(totalRightBoxesWidth, maxHorizontalRightPadding),\n                        top: 0,\n                        bottom: 0\n                    };\n\n                    // Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n                    // on the margin. Sometimes they need to increase in size slightly\n                    box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n                } else {\n                    box.update(minBoxSize.minSize.width, maxChartAreaHeight);\n                }\n            }\n        }\n\n        // Update, and calculate the left and right margins for the horizontal boxes\n        helpers.each(leftBoxes.concat(rightBoxes), fitBox);\n\n        helpers.each(leftBoxes, function (box) {\n            totalLeftBoxesWidth += box.width;\n        });\n\n        helpers.each(rightBoxes, function (box) {\n            totalRightBoxesWidth += box.width;\n        });\n\n        // Set the Left and Right margins for the horizontal boxes\n        helpers.each(topBoxes.concat(bottomBoxes), fitBox);\n\n        // Figure out how much margin is on the top and bottom of the vertical boxes\n        helpers.each(topBoxes, function (box) {\n            totalTopBoxesHeight += box.height;\n        });\n\n        helpers.each(bottomBoxes, function (box) {\n            totalBottomBoxesHeight += box.height;\n        });\n\n        function finalFitVerticalBox(box)\n        {\n            var minBoxSize = helpers.findNextWhere(minBoxSizes, function (minSize) {\n                return minSize.box === box;\n            });\n\n            var scaleMargin = {\n                left: 0,\n                right: 0,\n                top: totalTopBoxesHeight,\n                bottom: totalBottomBoxesHeight\n            };\n\n            if (minBoxSize) {\n                box.update(minBoxSize.minSize.width, maxChartAreaHeight, scaleMargin);\n            }\n        }\n\n        // Let the left layout know the final margin\n        helpers.each(leftBoxes.concat(rightBoxes), finalFitVerticalBox);\n\n        // Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n        totalLeftBoxesWidth = leftPadding;\n        totalRightBoxesWidth = rightPadding;\n        totalTopBoxesHeight = topPadding;\n        totalBottomBoxesHeight = bottomPadding;\n\n        helpers.each(leftBoxes, function (box) {\n            totalLeftBoxesWidth += box.width;\n        });\n\n        helpers.each(rightBoxes, function (box) {\n            totalRightBoxesWidth += box.width;\n        });\n\n        helpers.each(topBoxes, function (box) {\n            totalTopBoxesHeight += box.height;\n        });\n        helpers.each(bottomBoxes, function (box) {\n            totalBottomBoxesHeight += box.height;\n        });\n\n        // We may be adding some padding to account for rotated x axis labels\n        var leftPaddingAddition = Math.max(maxHorizontalLeftPadding - totalLeftBoxesWidth, 0);\n        totalLeftBoxesWidth += leftPaddingAddition;\n        totalRightBoxesWidth += Math.max(maxHorizontalRightPadding - totalRightBoxesWidth, 0);\n\n        var topPaddingAddition = Math.max(maxVerticalTopPadding - totalTopBoxesHeight, 0);\n        totalTopBoxesHeight += topPaddingAddition;\n        totalBottomBoxesHeight += Math.max(maxVerticalBottomPadding - totalBottomBoxesHeight, 0);\n\n        // Figure out if our chart area changed. This would occur if the dataset layout label rotation\n        // changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n        // without calling `fit` again\n        var newMaxChartAreaHeight = height - totalTopBoxesHeight - totalBottomBoxesHeight;\n        var newMaxChartAreaWidth = width - totalLeftBoxesWidth - totalRightBoxesWidth;\n\n        if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n            helpers.each(leftBoxes, function (box) {\n                box.height = newMaxChartAreaHeight;\n            });\n\n            helpers.each(rightBoxes, function (box) {\n                box.height = newMaxChartAreaHeight;\n            });\n\n            helpers.each(topBoxes, function (box) {\n                if (!box.fullWidth) {\n                    box.width = newMaxChartAreaWidth;\n                }\n            });\n\n            helpers.each(bottomBoxes, function (box) {\n                if (!box.fullWidth) {\n                    box.width = newMaxChartAreaWidth;\n                }\n            });\n\n            maxChartAreaHeight = newMaxChartAreaHeight;\n            maxChartAreaWidth = newMaxChartAreaWidth;\n        }\n\n        // Step 7 - Position the boxes\n        var left = leftPadding + leftPaddingAddition;\n        var top = topPadding + topPaddingAddition;\n\n        function placeBox(box)\n        {\n            if (box.isHorizontal()) {\n                box.left = box.fullWidth ? leftPadding : totalLeftBoxesWidth;\n                box.right = box.fullWidth ? width - rightPadding : totalLeftBoxesWidth + maxChartAreaWidth;\n                box.top = top;\n                box.bottom = top + box.height;\n\n                // Move to next point\n                top = box.bottom;\n            } else {\n                box.left = left;\n                box.right = left + box.width;\n                box.top = totalTopBoxesHeight;\n                box.bottom = totalTopBoxesHeight + maxChartAreaHeight;\n\n                // Move to next point\n                left = box.right;\n            }\n        }\n\n        helpers.each(leftBoxes.concat(topBoxes), placeBox);\n\n        // Account for chart width and height\n        left += maxChartAreaWidth;\n        top += maxChartAreaHeight;\n\n        helpers.each(rightBoxes, placeBox);\n        helpers.each(bottomBoxes, placeBox);\n\n        // Step 8\n        chart.chartArea = {\n            left: totalLeftBoxesWidth,\n            top: totalTopBoxesHeight,\n            right: totalLeftBoxesWidth + maxChartAreaWidth,\n            bottom: totalTopBoxesHeight + maxChartAreaHeight\n        };\n\n        // Step 9\n        helpers.each(chartAreaBoxes, function (box) {\n            box.left = chart.chartArea.left;\n            box.top = chart.chartArea.top;\n            box.right = chart.chartArea.right;\n            box.bottom = chart.chartArea.bottom;\n\n            box.update(maxChartAreaWidth, maxChartAreaHeight);\n        });\n    }\n};\n\n},{\"45\":45}],31:[function (require,module,exports) {\n'use strict';\n\nvar defaults = require(25);\nvar helpers = require(45);\n\ndefaults._set('global', {\n    plugins: {}\n});\n\n/**\n * The plugin service singleton\n * @namespace Chart.plugins\n * @since 2.1.0\n */\nmodule.exports = {\n    /**\n     * Globally registered plugins.\n     * @private\n     */\n    _plugins: [],\n\n    /**\n     * This identifier is used to invalidate the descriptors cache attached to each chart\n     * when a global plugin is registered or unregistered. In this case, the cache ID is\n     * incremented and descriptors are regenerated during following API calls.\n     * @private\n     */\n    _cacheId: 0,\n\n    /**\n     * Registers the given plugin(s) if not already registered.\n     * @param {Array|Object} plugins plugin instance(s).\n     */\n    register: function (plugins) {\n        var p = this._plugins;\n        ([]).concat(plugins).forEach(function (plugin) {\n            if (p.indexOf(plugin) === -1) {\n                p.push(plugin);\n            }\n        });\n\n        this._cacheId++;\n    },\n\n    /**\n     * Unregisters the given plugin(s) only if registered.\n     * @param {Array|Object} plugins plugin instance(s).\n     */\n    unregister: function (plugins) {\n        var p = this._plugins;\n        ([]).concat(plugins).forEach(function (plugin) {\n            var idx = p.indexOf(plugin);\n            if (idx !== -1) {\n                p.splice(idx, 1);\n            }\n        });\n\n        this._cacheId++;\n    },\n\n    /**\n     * Remove all registered plugins.\n     * @since 2.1.5\n     */\n    clear: function () {\n        this._plugins = [];\n        this._cacheId++;\n    },\n\n    /**\n     * Returns the number of registered plugins?\n     * @returns {Number}\n     * @since 2.1.5\n     */\n    count: function () {\n        return this._plugins.length;\n    },\n\n    /**\n     * Returns all registered plugin instances.\n     * @returns {Array} array of plugin objects.\n     * @since 2.1.5\n     */\n    getAll: function () {\n        return this._plugins;\n    },\n\n    /**\n     * Calls enabled plugins for `chart` on the specified hook and with the given args.\n     * This method immediately returns as soon as a plugin explicitly returns false. The\n     * returned value can be used, for instance, to interrupt the current action.\n     * @param {Object} chart - The chart instance for which plugins should be called.\n     * @param {String} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n     * @param {Array} [args] - Extra arguments to apply to the hook call.\n     * @returns {Boolean} false if any of the plugins return false, else returns true.\n     */\n    notify: function (chart, hook, args) {\n        var descriptors = this.descriptors(chart);\n        var ilen = descriptors.length;\n        var i, descriptor, plugin, params, method;\n\n        for (i = 0; i < ilen; ++i) {\n            descriptor = descriptors[i];\n            plugin = descriptor.plugin;\n            method = plugin[hook];\n            if (typeof method === 'function') {\n                params = [chart].concat(args || []);\n                params.push(descriptor.options);\n                if (method.apply(plugin, params) === false) {\n                    return false;\n                }\n            }\n        }\n\n        return true;\n    },\n\n    /**\n     * Returns descriptors of enabled plugins for the given chart.\n     * @returns {Array} [{ plugin, options }]\n     * @private\n     */\n    descriptors: function (chart) {\n        var cache = chart.$plugins || (chart.$plugins = {});\n        if (cache.id === this._cacheId) {\n            return cache.descriptors;\n        }\n\n        var plugins = [];\n        var descriptors = [];\n        var config = (chart && chart.config) || {};\n        var options = (config.options && config.options.plugins) || {};\n\n        this._plugins.concat(config.plugins || []).forEach(function (plugin) {\n            var idx = plugins.indexOf(plugin);\n            if (idx !== -1) {\n                return;\n            }\n\n            var id = plugin.id;\n            var opts = options[id];\n            if (opts === false) {\n                return;\n            }\n\n            if (opts === true) {\n                opts = helpers.clone(defaults.global.plugins[id]);\n            }\n\n            plugins.push(plugin);\n            descriptors.push({\n                plugin: plugin,\n                options: opts || {}\n            });\n        });\n\n        cache.descriptors = descriptors;\n        cache.id = this._cacheId;\n        return descriptors;\n    },\n\n    /**\n     * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n     * but in some cases, this reference can be changed by the user when updating options.\n     * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n     * @private\n     */\n    _invalidate: function (chart) {\n        delete chart.$plugins;\n    }\n};\n\n/**\n * Plugin extension hooks.\n * @interface IPlugin\n * @since 2.1.0\n */\n/**\n * @method IPlugin#beforeInit\n * @desc Called before initializing `chart`.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#afterInit\n * @desc Called after `chart` has been initialized and before the first update.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeUpdate\n * @desc Called before updating `chart`. If any plugin returns `false`, the update\n * is cancelled (and thus subsequent render(s)) until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart update.\n */\n/**\n * @method IPlugin#afterUpdate\n * @desc Called after `chart` has been updated and before rendering. Note that this\n * hook will not be called if the chart update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDatasetsUpdate\n * @desc Called before updating the `chart` datasets. If any plugin returns `false`,\n * the datasets update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} false to cancel the datasets update.\n * @since version 2.1.5\n*/\n/**\n * @method IPlugin#afterDatasetsUpdate\n * @desc Called after the `chart` datasets have been updated. Note that this hook\n * will not be called if the datasets update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @since version 2.1.5\n */\n/**\n * @method IPlugin#beforeDatasetUpdate\n * @desc Called before updating the `chart` dataset at the given `args.index`. If any plugin\n * returns `false`, the datasets update is cancelled until another `update` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n/**\n * @method IPlugin#afterDatasetUpdate\n * @desc Called after the `chart` datasets at the given `args.index` has been updated. Note\n * that this hook will not be called if the datasets update has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeLayout\n * @desc Called before laying out `chart`. If any plugin returns `false`,\n * the layout update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart layout.\n */\n/**\n * @method IPlugin#afterLayout\n * @desc Called after the `chart` has been layed out. Note that this hook will not\n * be called if the layout update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeRender\n * @desc Called before rendering `chart`. If any plugin returns `false`,\n * the rendering is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart rendering.\n */\n/**\n * @method IPlugin#afterRender\n * @desc Called after the `chart` has been fully rendered (and animation completed). Note\n * that this hook will not be called if the rendering has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDraw\n * @desc Called before drawing `chart` at every animation frame specified by the given\n * easing value. If any plugin returns `false`, the frame drawing is cancelled until\n * another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart drawing.\n */\n/**\n * @method IPlugin#afterDraw\n * @desc Called after the `chart` has been drawn for the specific easing value. Note\n * that this hook will not be called if the drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDatasetsDraw\n * @desc Called before drawing the `chart` datasets. If any plugin returns `false`,\n * the datasets drawing is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n/**\n * @method IPlugin#afterDatasetsDraw\n * @desc Called after the `chart` datasets have been drawn. Note that this hook\n * will not be called if the datasets drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDatasetDraw\n * @desc Called before drawing the `chart` dataset at the given `args.index` (datasets\n * are drawn in the reverse order). If any plugin returns `false`, the datasets drawing\n * is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n/**\n * @method IPlugin#afterDatasetDraw\n * @desc Called after the `chart` datasets at the given `args.index` have been drawn\n * (datasets are drawn in the reverse order). Note that this hook will not be called\n * if the datasets drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeTooltipDraw\n * @desc Called before drawing the `tooltip`. If any plugin returns `false`,\n * the tooltip drawing is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart tooltip drawing.\n */\n/**\n * @method IPlugin#afterTooltipDraw\n * @desc Called after drawing the `tooltip`. Note that this hook will not\n * be called if the tooltip drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeEvent\n * @desc Called before processing the specified `event`. If any plugin returns `false`,\n * the event will be discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#afterEvent\n * @desc Called after the `event` has been consumed. Note that this hook\n * will not be called if the `event` has been previously discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#resize\n * @desc Called after the chart as been resized.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} size - The new canvas display size (eq. canvas.style width & height).\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#destroy\n * @desc Called after the chart as been destroyed.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n},{\"25\":25,\"45\":45}],32:[function (require,module,exports) {\n'use strict';\n\nvar defaults = require(25);\nvar Element = require(26);\nvar helpers = require(45);\nvar Ticks = require(34);\n\ndefaults._set('scale', {\n    display: true,\n    position: 'left',\n    offset: false,\n\n    // grid line settings\n    gridLines: {\n        display: true,\n        color: 'rgba(0, 0, 0, 0.1)',\n        lineWidth: 1,\n        drawBorder: true,\n        drawOnChartArea: true,\n        drawTicks: true,\n        tickMarkLength: 10,\n        zeroLineWidth: 1,\n        zeroLineColor: 'rgba(0,0,0,0.25)',\n        zeroLineBorderDash: [],\n        zeroLineBorderDashOffset: 0.0,\n        offsetGridLines: false,\n        borderDash: [],\n        borderDashOffset: 0.0\n    },\n\n    // scale label\n    scaleLabel: {\n        // display property\n        display: false,\n\n        // actual label\n        labelString: '',\n\n        // line height\n        lineHeight: 1.2,\n\n        // top/bottom padding\n        padding: {\n            top: 4,\n            bottom: 4\n        }\n    },\n\n    // label settings\n    ticks: {\n        beginAtZero: false,\n        minRotation: 0,\n        maxRotation: 50,\n        mirror: false,\n        padding: 0,\n        reverse: false,\n        display: true,\n        autoSkip: true,\n        autoSkipPadding: 0,\n        labelOffset: 0,\n        // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n        callback: Ticks.formatters.values,\n        minor: {},\n        major: {}\n    }\n});\n\nfunction labelsFromTicks(ticks)\n{\n    var labels = [];\n    var i, ilen;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        labels.push(ticks[i].label);\n    }\n\n    return labels;\n}\n\nfunction getLineValue(scale, index, offsetGridLines)\n{\n    var lineValue = scale.getPixelForTick(index);\n\n    if (offsetGridLines) {\n        if (index === 0) {\n            lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n        }\n    }\n    return lineValue;\n}\n\nmodule.exports = function (Chart) {\n\n    function computeTextSize(context, tick, font)\n    {\n        return helpers.isArray(tick) ?\n            helpers.longestText(context, font, tick) :\n            context.measureText(tick).width;\n    }\n\n    function parseFontOptions(options)\n    {\n        var valueOrDefault = helpers.valueOrDefault;\n        var globalDefaults = defaults.global;\n        var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n        var style = valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle);\n        var family = valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily);\n\n        return {\n            size: size,\n            style: style,\n            family: family,\n            font: helpers.fontString(size, style, family)\n        };\n    }\n\n    function parseLineHeight(options)\n    {\n        return helpers.options.toLineHeight(\n            helpers.valueOrDefault(options.lineHeight, 1.2),\n            helpers.valueOrDefault(options.fontSize, defaults.global.defaultFontSize)\n        );\n    }\n\n    Chart.Scale = Element.extend({\n        /**\n         * Get the padding needed for the scale\n         * @method getPadding\n         * @private\n         * @returns {Padding} the necessary padding\n         */\n        getPadding: function () {\n            var me = this;\n            return {\n                left: me.paddingLeft || 0,\n                top: me.paddingTop || 0,\n                right: me.paddingRight || 0,\n                bottom: me.paddingBottom || 0\n            };\n        },\n\n        /**\n         * Returns the scale tick objects ({label, major})\n         * @since 2.7\n         */\n        getTicks: function () {\n            return this._ticks;\n        },\n\n        // These methods are ordered by lifecyle. Utilities then follow.\n        // Any function defined here is inherited by all scale types.\n        // Any function can be extended by the scale type\n\n        mergeTicksOptions: function () {\n            var ticks = this.options.ticks;\n            if (ticks.minor === false) {\n                ticks.minor = {\n                    display: false\n                };\n            }\n            if (ticks.major === false) {\n                ticks.major = {\n                    display: false\n                };\n            }\n            for (var key in ticks) {\n                if (key !== 'major' && key !== 'minor') {\n                    if (typeof ticks.minor[key] === 'undefined') {\n                        ticks.minor[key] = ticks[key];\n                    }\n                    if (typeof ticks.major[key] === 'undefined') {\n                        ticks.major[key] = ticks[key];\n                    }\n                }\n            }\n        },\n        beforeUpdate: function () {\n            helpers.callback(this.options.beforeUpdate, [this]);\n        },\n        update: function (maxWidth, maxHeight, margins) {\n            var me = this;\n            var i, ilen, labels, label, ticks, tick;\n\n            // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n            me.beforeUpdate();\n\n            // Absorb the master measurements\n            me.maxWidth = maxWidth;\n            me.maxHeight = maxHeight;\n            me.margins = helpers.extend({\n                left: 0,\n                right: 0,\n                top: 0,\n                bottom: 0\n            }, margins);\n            me.longestTextCache = me.longestTextCache || {};\n\n            // Dimensions\n            me.beforeSetDimensions();\n            me.setDimensions();\n            me.afterSetDimensions();\n\n            // Data min/max\n            me.beforeDataLimits();\n            me.determineDataLimits();\n            me.afterDataLimits();\n\n            // Ticks - `this.ticks` is now DEPRECATED!\n            // Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n            // and must not be accessed directly from outside this class. `this.ticks` being\n            // around for long time and not marked as private, we can't change its structure\n            // without unexpected breaking changes. If you need to access the scale ticks,\n            // use scale.getTicks() instead.\n\n            me.beforeBuildTicks();\n\n            // New implementations should return an array of objects but for BACKWARD COMPAT,\n            // we still support no return (`this.ticks` internally set by calling this method).\n            ticks = me.buildTicks() || [];\n\n            me.afterBuildTicks();\n\n            me.beforeTickToLabelConversion();\n\n            // New implementations should return the formatted tick labels but for BACKWARD\n            // COMPAT, we still support no return (`this.ticks` internally changed by calling\n            // this method and supposed to contain only string values).\n            labels = me.convertTicksToLabels(ticks) || me.ticks;\n\n            me.afterTickToLabelConversion();\n\n            me.ticks = labels;   // BACKWARD COMPATIBILITY\n\n            // IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n\n            // BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n            for (i = 0, ilen = labels.length; i < ilen; ++i) {\n                label = labels[i];\n                tick = ticks[i];\n                if (!tick) {\n                    ticks.push(tick = {\n                        label: label,\n                        major: false\n                    });\n                } else {\n                    tick.label = label;\n                }\n            }\n\n            me._ticks = ticks;\n\n            // Tick Rotation\n            me.beforeCalculateTickRotation();\n            me.calculateTickRotation();\n            me.afterCalculateTickRotation();\n            // Fit\n            me.beforeFit();\n            me.fit();\n            me.afterFit();\n            //\n            me.afterUpdate();\n\n            return me.minSize;\n\n        },\n        afterUpdate: function () {\n            helpers.callback(this.options.afterUpdate, [this]);\n        },\n\n        //\n\n        beforeSetDimensions: function () {\n            helpers.callback(this.options.beforeSetDimensions, [this]);\n        },\n        setDimensions: function () {\n            var me = this;\n            // Set the unconstrained dimension before label rotation\n            if (me.isHorizontal()) {\n                // Reset position before calculating rotation\n                me.width = me.maxWidth;\n                me.left = 0;\n                me.right = me.width;\n            } else {\n                me.height = me.maxHeight;\n\n                // Reset position before calculating rotation\n                me.top = 0;\n                me.bottom = me.height;\n            }\n\n            // Reset padding\n            me.paddingLeft = 0;\n            me.paddingTop = 0;\n            me.paddingRight = 0;\n            me.paddingBottom = 0;\n        },\n        afterSetDimensions: function () {\n            helpers.callback(this.options.afterSetDimensions, [this]);\n        },\n\n        // Data limits\n        beforeDataLimits: function () {\n            helpers.callback(this.options.beforeDataLimits, [this]);\n        },\n        determineDataLimits: helpers.noop,\n        afterDataLimits: function () {\n            helpers.callback(this.options.afterDataLimits, [this]);\n        },\n\n        //\n        beforeBuildTicks: function () {\n            helpers.callback(this.options.beforeBuildTicks, [this]);\n        },\n        buildTicks: helpers.noop,\n        afterBuildTicks: function () {\n            helpers.callback(this.options.afterBuildTicks, [this]);\n        },\n\n        beforeTickToLabelConversion: function () {\n            helpers.callback(this.options.beforeTickToLabelConversion, [this]);\n        },\n        convertTicksToLabels: function () {\n            var me = this;\n            // Convert ticks to strings\n            var tickOpts = me.options.ticks;\n            me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n        },\n        afterTickToLabelConversion: function () {\n            helpers.callback(this.options.afterTickToLabelConversion, [this]);\n        },\n\n        //\n\n        beforeCalculateTickRotation: function () {\n            helpers.callback(this.options.beforeCalculateTickRotation, [this]);\n        },\n        calculateTickRotation: function () {\n            var me = this;\n            var context = me.ctx;\n            var tickOpts = me.options.ticks;\n            var labels = labelsFromTicks(me._ticks);\n\n            // Get the width of each grid by calculating the difference\n            // between x offsets between 0 and 1.\n            var tickFont = parseFontOptions(tickOpts);\n            context.font = tickFont.font;\n\n            var labelRotation = tickOpts.minRotation || 0;\n\n            if (labels.length && me.options.display && me.isHorizontal()) {\n                var originalLabelWidth = helpers.longestText(context, tickFont.font, labels, me.longestTextCache);\n                var labelWidth = originalLabelWidth;\n                var cosRotation, sinRotation;\n\n                // Allow 3 pixels x2 padding either side for label readability\n                var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6;\n\n                // Max label rotation can be set or default to 90 - also act as a loop counter\n                while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n                    var angleRadians = helpers.toRadians(labelRotation);\n                    cosRotation = Math.cos(angleRadians);\n                    sinRotation = Math.sin(angleRadians);\n\n                    if (sinRotation * originalLabelWidth > me.maxHeight) {\n                        // go back one step\n                        labelRotation--;\n                        break;\n                    }\n\n                    labelRotation++;\n                    labelWidth = cosRotation * originalLabelWidth;\n                }\n            }\n\n            me.labelRotation = labelRotation;\n        },\n        afterCalculateTickRotation: function () {\n            helpers.callback(this.options.afterCalculateTickRotation, [this]);\n        },\n\n        //\n\n        beforeFit: function () {\n            helpers.callback(this.options.beforeFit, [this]);\n        },\n        fit: function () {\n            var me = this;\n            // Reset\n            var minSize = me.minSize = {\n                width: 0,\n                height: 0\n            };\n\n            var labels = labelsFromTicks(me._ticks);\n\n            var opts = me.options;\n            var tickOpts = opts.ticks;\n            var scaleLabelOpts = opts.scaleLabel;\n            var gridLineOpts = opts.gridLines;\n            var display = opts.display;\n            var isHorizontal = me.isHorizontal();\n\n            var tickFont = parseFontOptions(tickOpts);\n            var tickMarkLength = opts.gridLines.tickMarkLength;\n\n            // Width\n            if (isHorizontal) {\n                // subtract the margins to line up with the chartArea if we are a full width scale\n                minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n            } else {\n                minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n            }\n\n            // height\n            if (isHorizontal) {\n                minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n            } else {\n                minSize.height = me.maxHeight; // fill all the height\n            }\n\n            // Are we showing a title for the scale?\n            if (scaleLabelOpts.display && display) {\n                var scaleLabelLineHeight = parseLineHeight(scaleLabelOpts);\n                var scaleLabelPadding = helpers.options.toPadding(scaleLabelOpts.padding);\n                var deltaHeight = scaleLabelLineHeight + scaleLabelPadding.height;\n\n                if (isHorizontal) {\n                    minSize.height += deltaHeight;\n                } else {\n                    minSize.width += deltaHeight;\n                }\n            }\n\n            // Don't bother fitting the ticks if we are not showing them\n            if (tickOpts.display && display) {\n                var largestTextWidth = helpers.longestText(me.ctx, tickFont.font, labels, me.longestTextCache);\n                var tallestLabelHeightInLines = helpers.numberOfLabelLines(labels);\n                var lineSpace = tickFont.size * 0.5;\n                var tickPadding = me.options.ticks.padding;\n\n                if (isHorizontal) {\n                    // A horizontal axis is more constrained by the height.\n                    me.longestLabelWidth = largestTextWidth;\n\n                    var angleRadians = helpers.toRadians(me.labelRotation);\n                    var cosRotation = Math.cos(angleRadians);\n                    var sinRotation = Math.sin(angleRadians);\n\n                    var labelHeight = (sinRotation * largestTextWidth)\n                        + (tickFont.size * tallestLabelHeightInLines)\n                        + (lineSpace * (tallestLabelHeightInLines - 1))\n                        + lineSpace; // padding\n\n                    minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n\n                    me.ctx.font = tickFont.font;\n                    var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.font);\n                    var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.font);\n\n                    // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n                    // which means that the right padding is dominated by the font height\n                    if (me.labelRotation !== 0) {\n                        me.paddingLeft = opts.position === 'bottom' ? (cosRotation * firstLabelWidth) + 3 : (cosRotation * lineSpace) + 3; // add 3 px to move away from canvas edges\n                        me.paddingRight = opts.position === 'bottom' ? (cosRotation * lineSpace) + 3 : (cosRotation * lastLabelWidth) + 3;\n                    } else {\n                        me.paddingLeft = firstLabelWidth / 2 + 3; // add 3 px to move away from canvas edges\n                        me.paddingRight = lastLabelWidth / 2 + 3;\n                    }\n                } else {\n                    // A vertical axis is more constrained by the width. Labels are the\n                    // dominant factor here, so get that length first and account for padding\n                    if (tickOpts.mirror) {\n                        largestTextWidth = 0;\n                    } else {\n                        // use lineSpace for consistency with horizontal axis\n                        // tickPadding is not implemented for horizontal\n                        largestTextWidth += tickPadding + lineSpace;\n                    }\n\n                    minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n\n                    me.paddingTop = tickFont.size / 2;\n                    me.paddingBottom = tickFont.size / 2;\n                }\n            }\n\n            me.handleMargins();\n\n            me.width = minSize.width;\n            me.height = minSize.height;\n        },\n\n        /**\n         * Handle margins and padding interactions\n         * @private\n         */\n        handleMargins: function () {\n            var me = this;\n            if (me.margins) {\n                me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n                me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n                me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n                me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n            }\n        },\n\n        afterFit: function () {\n            helpers.callback(this.options.afterFit, [this]);\n        },\n\n        // Shared Methods\n        isHorizontal: function () {\n            return this.options.position === 'top' || this.options.position === 'bottom';\n        },\n        isFullWidth: function () {\n            return (this.options.fullWidth);\n        },\n\n        // Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n        getRightValue: function (rawValue) {\n            // Null and undefined values first\n            if (helpers.isNullOrUndef(rawValue)) {\n                return NaN;\n            }\n            // isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n            if (typeof rawValue === 'number' && !isFinite(rawValue)) {\n                return NaN;\n            }\n            // If it is in fact an object, dive in one more level\n            if (rawValue) {\n                if (this.isHorizontal()) {\n                    if (rawValue.x !== undefined) {\n                        return this.getRightValue(rawValue.x);\n                    }\n                } else if (rawValue.y !== undefined) {\n                    return this.getRightValue(rawValue.y);\n                }\n            }\n\n            // Value is good, return it\n            return rawValue;\n        },\n\n        /**\n         * Used to get the value to display in the tooltip for the data at the given index\n         * @param index\n         * @param datasetIndex\n         */\n        getLabelForIndex: helpers.noop,\n\n        /**\n         * Returns the location of the given data point. Value can either be an index or a numerical value\n         * The coordinate (0, 0) is at the upper-left corner of the canvas\n         * @param value\n         * @param index\n         * @param datasetIndex\n         */\n        getPixelForValue: helpers.noop,\n\n        /**\n         * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n         * The coordinate (0, 0) is at the upper-left corner of the canvas\n         * @param pixel\n         */\n        getValueForPixel: helpers.noop,\n\n        /**\n         * Returns the location of the tick at the given index\n         * The coordinate (0, 0) is at the upper-left corner of the canvas\n         */\n        getPixelForTick: function (index) {\n            var me = this;\n            var offset = me.options.offset;\n            if (me.isHorizontal()) {\n                var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n                var tickWidth = innerWidth / Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n                var pixel = (tickWidth * index) + me.paddingLeft;\n\n                if (offset) {\n                    pixel += tickWidth / 2;\n                }\n\n                var finalVal = me.left + Math.round(pixel);\n                finalVal += me.isFullWidth() ? me.margins.left : 0;\n                return finalVal;\n            }\n            var innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n            return me.top + (index * (innerHeight / (me._ticks.length - 1)));\n        },\n\n        /**\n         * Utility for getting the pixel location of a percentage of scale\n         * The coordinate (0, 0) is at the upper-left corner of the canvas\n         */\n        getPixelForDecimal: function (decimal) {\n            var me = this;\n            if (me.isHorizontal()) {\n                var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n                var valueOffset = (innerWidth * decimal) + me.paddingLeft;\n\n                var finalVal = me.left + Math.round(valueOffset);\n                finalVal += me.isFullWidth() ? me.margins.left : 0;\n                return finalVal;\n            }\n            return me.top + (decimal * me.height);\n        },\n\n        /**\n         * Returns the pixel for the minimum chart value\n         * The coordinate (0, 0) is at the upper-left corner of the canvas\n         */\n        getBasePixel: function () {\n            return this.getPixelForValue(this.getBaseValue());\n        },\n\n        getBaseValue: function () {\n            var me = this;\n            var min = me.min;\n            var max = me.max;\n\n            return me.beginAtZero ? 0 :\n                min < 0 && max < 0 ? max :\n                min > 0 && max > 0 ? min :\n                0;\n        },\n\n        /**\n         * Returns a subset of ticks to be plotted to avoid overlapping labels.\n         * @private\n         */\n        _autoSkip: function (ticks) {\n            var skipRatio;\n            var me = this;\n            var isHorizontal = me.isHorizontal();\n            var optionTicks = me.options.ticks.minor;\n            var tickCount = ticks.length;\n            var labelRotationRadians = helpers.toRadians(me.labelRotation);\n            var cosRotation = Math.cos(labelRotationRadians);\n            var longestRotatedLabel = me.longestLabelWidth * cosRotation;\n            var result = [];\n            var i, tick, shouldSkip;\n\n            // figure out the maximum number of gridlines to show\n            var maxTicks;\n            if (optionTicks.maxTicksLimit) {\n                maxTicks = optionTicks.maxTicksLimit;\n            }\n\n            if (isHorizontal) {\n                skipRatio = false;\n\n                if ((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount > (me.width - (me.paddingLeft + me.paddingRight))) {\n                    skipRatio = 1 + Math.floor(((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount) / (me.width - (me.paddingLeft + me.paddingRight)));\n                }\n\n                // if they defined a max number of optionTicks,\n                // increase skipRatio until that number is met\n                if (maxTicks && tickCount > maxTicks) {\n                    skipRatio = Math.max(skipRatio, Math.floor(tickCount / maxTicks));\n                }\n            }\n\n            for (i = 0; i < tickCount; i++) {\n                tick = ticks[i];\n\n                // Since we always show the last tick,we need may need to hide the last shown one before\n                shouldSkip = (skipRatio > 1 && i % skipRatio > 0) || (i % skipRatio === 0 && i + skipRatio >= tickCount);\n                if (shouldSkip && i !== tickCount - 1) {\n                    // leave tick in place but make sure it's not displayed (#4635)\n                    delete tick.label;\n                }\n                result.push(tick);\n            }\n            return result;\n        },\n\n        // Actually draw the scale on the canvas\n        // @param {rectangle} chartArea : the area of the chart to draw full grid lines on\n        draw: function (chartArea) {\n            var me = this;\n            var options = me.options;\n            if (!options.display) {\n                return;\n            }\n\n            var context = me.ctx;\n            var globalDefaults = defaults.global;\n            var optionTicks = options.ticks.minor;\n            var optionMajorTicks = options.ticks.major || optionTicks;\n            var gridLines = options.gridLines;\n            var scaleLabel = options.scaleLabel;\n\n            var isRotated = me.labelRotation !== 0;\n            var isHorizontal = me.isHorizontal();\n\n            var ticks = optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n            var tickFontColor = helpers.valueOrDefault(optionTicks.fontColor, globalDefaults.defaultFontColor);\n            var tickFont = parseFontOptions(optionTicks);\n            var majorTickFontColor = helpers.valueOrDefault(optionMajorTicks.fontColor, globalDefaults.defaultFontColor);\n            var majorTickFont = parseFontOptions(optionMajorTicks);\n\n            var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n\n            var scaleLabelFontColor = helpers.valueOrDefault(scaleLabel.fontColor, globalDefaults.defaultFontColor);\n            var scaleLabelFont = parseFontOptions(scaleLabel);\n            var scaleLabelPadding = helpers.options.toPadding(scaleLabel.padding);\n            var labelRotationRadians = helpers.toRadians(me.labelRotation);\n\n            var itemsToDraw = [];\n\n            var axisWidth = me.options.gridLines.lineWidth;\n            var xTickStart = options.position === 'right' ? me.right : me.right - axisWidth - tl;\n            var xTickEnd = options.position === 'right' ? me.right + tl : me.right;\n            var yTickStart = options.position === 'bottom' ? me.top + axisWidth : me.bottom - tl - axisWidth;\n            var yTickEnd = options.position === 'bottom' ? me.top + axisWidth + tl : me.bottom + axisWidth;\n\n            helpers.each(ticks, function (tick, index) {\n                // autoskipper skipped this tick (#4635)\n                if (helpers.isNullOrUndef(tick.label)) {\n                    return;\n                }\n\n                var label = tick.label;\n                var lineWidth, lineColor, borderDash, borderDashOffset;\n                if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n                    // Draw the first index specially\n                    lineWidth = gridLines.zeroLineWidth;\n                    lineColor = gridLines.zeroLineColor;\n                    borderDash = gridLines.zeroLineBorderDash;\n                    borderDashOffset = gridLines.zeroLineBorderDashOffset;\n                } else {\n                    lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, index);\n                    lineColor = helpers.valueAtIndexOrDefault(gridLines.color, index);\n                    borderDash = helpers.valueOrDefault(gridLines.borderDash, globalDefaults.borderDash);\n                    borderDashOffset = helpers.valueOrDefault(gridLines.borderDashOffset, globalDefaults.borderDashOffset);\n                }\n\n                // Common properties\n                var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY;\n                var textAlign = 'middle';\n                var textBaseline = 'middle';\n                var tickPadding = optionTicks.padding;\n\n                if (isHorizontal) {\n                    var labelYOffset = tl + tickPadding;\n\n                    if (options.position === 'bottom') {\n                        // bottom\n                        textBaseline = !isRotated ? 'top' : 'middle';\n                        textAlign = !isRotated ? 'center' : 'right';\n                        labelY = me.top + labelYOffset;\n                    } else {\n                        // top\n                        textBaseline = !isRotated ? 'bottom' : 'middle';\n                        textAlign = !isRotated ? 'center' : 'left';\n                        labelY = me.bottom - labelYOffset;\n                    }\n\n                    var xLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n                    if (xLineValue < me.left) {\n                        lineColor = 'rgba(0,0,0,0)';\n                    }\n                    xLineValue += helpers.aliasPixel(lineWidth);\n\n                    labelX = me.getPixelForTick(index) + optionTicks.labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n                    tx1 = tx2 = x1 = x2 = xLineValue;\n                    ty1 = yTickStart;\n                    ty2 = yTickEnd;\n                    y1 = chartArea.top;\n                    y2 = chartArea.bottom + axisWidth;\n                } else {\n                    var isLeft = options.position === 'left';\n                    var labelXOffset;\n\n                    if (optionTicks.mirror) {\n                        textAlign = isLeft ? 'left' : 'right';\n                        labelXOffset = tickPadding;\n                    } else {\n                        textAlign = isLeft ? 'right' : 'left';\n                        labelXOffset = tl + tickPadding;\n                    }\n\n                    labelX = isLeft ? me.right - labelXOffset : me.left + labelXOffset;\n\n                    var yLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n                    if (yLineValue < me.top) {\n                        lineColor = 'rgba(0,0,0,0)';\n                    }\n                    yLineValue += helpers.aliasPixel(lineWidth);\n\n                    labelY = me.getPixelForTick(index) + optionTicks.labelOffset;\n\n                    tx1 = xTickStart;\n                    tx2 = xTickEnd;\n                    x1 = chartArea.left;\n                    x2 = chartArea.right + axisWidth;\n                    ty1 = ty2 = y1 = y2 = yLineValue;\n                }\n\n                itemsToDraw.push({\n                    tx1: tx1,\n                    ty1: ty1,\n                    tx2: tx2,\n                    ty2: ty2,\n                    x1: x1,\n                    y1: y1,\n                    x2: x2,\n                    y2: y2,\n                    labelX: labelX,\n                    labelY: labelY,\n                    glWidth: lineWidth,\n                    glColor: lineColor,\n                    glBorderDash: borderDash,\n                    glBorderDashOffset: borderDashOffset,\n                    rotation: -1 * labelRotationRadians,\n                    label: label,\n                    major: tick.major,\n                    textBaseline: textBaseline,\n                    textAlign: textAlign\n                });\n            });\n\n            // Draw all of the tick labels, tick marks, and grid lines at the correct places\n            helpers.each(itemsToDraw, function (itemToDraw) {\n                if (gridLines.display) {\n                    context.save();\n                    context.lineWidth = itemToDraw.glWidth;\n                    context.strokeStyle = itemToDraw.glColor;\n                    if (context.setLineDash) {\n                        context.setLineDash(itemToDraw.glBorderDash);\n                        context.lineDashOffset = itemToDraw.glBorderDashOffset;\n                    }\n\n                    context.beginPath();\n\n                    if (gridLines.drawTicks) {\n                        context.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n                        context.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n                    }\n\n                    if (gridLines.drawOnChartArea) {\n                        context.moveTo(itemToDraw.x1, itemToDraw.y1);\n                        context.lineTo(itemToDraw.x2, itemToDraw.y2);\n                    }\n\n                    context.stroke();\n                    context.restore();\n                }\n\n                if (optionTicks.display) {\n                    // Make sure we draw text in the correct color and font\n                    context.save();\n                    context.translate(itemToDraw.labelX, itemToDraw.labelY);\n                    context.rotate(itemToDraw.rotation);\n                    context.font = itemToDraw.major ? majorTickFont.font : tickFont.font;\n                    context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n                    context.textBaseline = itemToDraw.textBaseline;\n                    context.textAlign = itemToDraw.textAlign;\n\n                    var label = itemToDraw.label;\n                    if (helpers.isArray(label)) {\n                        var lineCount = label.length;\n                        var lineHeight = tickFont.size * 1.5;\n                        var y = me.isHorizontal() ? 0 : -lineHeight * (lineCount - 1) / 2;\n\n                        for (var i = 0; i < lineCount; ++i) {\n                            // We just make sure the multiline element is a string here..\n                            context.fillText('' + label[i], 0, y);\n                            // apply same lineSpacing as calculated @ L#320\n                            y += lineHeight;\n                        }\n                    } else {\n                        context.fillText(label, 0, 0);\n                    }\n                    context.restore();\n                }\n            });\n\n            if (scaleLabel.display) {\n                // Draw the scale label\n                var scaleLabelX;\n                var scaleLabelY;\n                var rotation = 0;\n                var halfLineHeight = parseLineHeight(scaleLabel) / 2;\n\n                if (isHorizontal) {\n                    scaleLabelX = me.left + ((me.right - me.left) / 2); // midpoint of the width\n                    scaleLabelY = options.position === 'bottom'\n                        ? me.bottom - halfLineHeight - scaleLabelPadding.bottom\n                        : me.top + halfLineHeight + scaleLabelPadding.top;\n                } else {\n                    var isLeft = options.position === 'left';\n                    scaleLabelX = isLeft\n                        ? me.left + halfLineHeight + scaleLabelPadding.top\n                        : me.right - halfLineHeight - scaleLabelPadding.top;\n                    scaleLabelY = me.top + ((me.bottom - me.top) / 2);\n                    rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n                }\n\n                context.save();\n                context.translate(scaleLabelX, scaleLabelY);\n                context.rotate(rotation);\n                context.textAlign = 'center';\n                context.textBaseline = 'middle';\n                context.fillStyle = scaleLabelFontColor; // render in correct colour\n                context.font = scaleLabelFont.font;\n                context.fillText(scaleLabel.labelString, 0, 0);\n                context.restore();\n            }\n\n            if (gridLines.drawBorder) {\n                // Draw the line at the edge of the axis\n                context.lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, 0);\n                context.strokeStyle = helpers.valueAtIndexOrDefault(gridLines.color, 0);\n                var x1 = me.left;\n                var x2 = me.right + axisWidth;\n                var y1 = me.top;\n                var y2 = me.bottom + axisWidth;\n\n                var aliasPixel = helpers.aliasPixel(context.lineWidth);\n                if (isHorizontal) {\n                    y1 = y2 = options.position === 'top' ? me.bottom : me.top;\n                    y1 += aliasPixel;\n                    y2 += aliasPixel;\n                } else {\n                    x1 = x2 = options.position === 'left' ? me.right : me.left;\n                    x1 += aliasPixel;\n                    x2 += aliasPixel;\n                }\n\n                context.beginPath();\n                context.moveTo(x1, y1);\n                context.lineTo(x2, y2);\n                context.stroke();\n            }\n        }\n    });\n};\n\n},{\"25\":25,\"26\":26,\"34\":34,\"45\":45}],33:[function (require,module,exports) {\n'use strict';\n\nvar defaults = require(25);\nvar helpers = require(45);\nvar layouts = require(30);\n\nmodule.exports = function (Chart) {\n\n    Chart.scaleService = {\n        // Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n        // use the new chart options to grab the correct scale\n        constructors: {},\n        // Use a registration function so that we can move to an ES6 map when we no longer need to support\n        // old browsers\n\n        // Scale config defaults\n        defaults: {},\n        registerScaleType: function (type, scaleConstructor, scaleDefaults) {\n            this.constructors[type] = scaleConstructor;\n            this.defaults[type] = helpers.clone(scaleDefaults);\n        },\n        getScaleConstructor: function (type) {\n            return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n        },\n        getScaleDefaults: function (type) {\n            // Return the scale defaults merged with the global settings so that we always use the latest ones\n            return this.defaults.hasOwnProperty(type) ? helpers.merge({}, [defaults.scale, this.defaults[type]]) : {};\n        },\n        updateScaleDefaults: function (type, additions) {\n            var me = this;\n            if (me.defaults.hasOwnProperty(type)) {\n                me.defaults[type] = helpers.extend(me.defaults[type], additions);\n            }\n        },\n        addScalesToLayout: function (chart) {\n            // Adds each scale to the chart.boxes array to be sized accordingly\n            helpers.each(chart.scales, function (scale) {\n                // Set ILayoutItem parameters for backwards compatibility\n                scale.fullWidth = scale.options.fullWidth;\n                scale.position = scale.options.position;\n                scale.weight = scale.options.weight;\n                layouts.addBox(chart, scale);\n            });\n        }\n    };\n};\n\n},{\"25\":25,\"30\":30,\"45\":45}],34:[function (require,module,exports) {\n'use strict';\n\nvar helpers = require(45);\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nmodule.exports = {\n    /**\n     * Namespace to hold formatters for different types of ticks\n     * @namespace Chart.Ticks.formatters\n     */\n    formatters: {\n        /**\n         * Formatter for value labels\n         * @method Chart.Ticks.formatters.values\n         * @param value the value to display\n         * @return {String|Array} the label to display\n         */\n        values: function (value) {\n            return helpers.isArray(value) ? value : '' + value;\n        },\n\n        /**\n         * Formatter for linear numeric ticks\n         * @method Chart.Ticks.formatters.linear\n         * @param tickValue {Number} the value to be formatted\n         * @param index {Number} the position of the tickValue parameter in the ticks array\n         * @param ticks {Array<Number>} the list of ticks being converted\n         * @return {String} string representation of the tickValue parameter\n         */\n        linear: function (tickValue, index, ticks) {\n            // If we have lots of ticks, don't use the ones\n            var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0];\n\n            // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n            if (Math.abs(delta) > 1) {\n                if (tickValue !== Math.floor(tickValue)) {\n                    // not an integer\n                    delta = tickValue - Math.floor(tickValue);\n                }\n            }\n\n            var logDelta = helpers.log10(Math.abs(delta));\n            var tickString = '';\n\n            if (tickValue !== 0) {\n                var numDecimal = -1 * Math.floor(logDelta);\n                numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n                tickString = tickValue.toFixed(numDecimal);\n            } else {\n                tickString = '0'; // never show decimal places for 0\n            }\n\n            return tickString;\n        },\n\n        logarithmic: function (tickValue, index, ticks) {\n            var remain = tickValue / (Math.pow(10, Math.floor(helpers.log10(tickValue))));\n\n            if (tickValue === 0) {\n                return '0';\n            } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n                return tickValue.toExponential();\n            }\n            return '';\n        }\n    }\n};\n\n},{\"45\":45}],35:[function (require,module,exports) {\n'use strict';\n\nvar defaults = require(25);\nvar Element = require(26);\nvar helpers = require(45);\n\ndefaults._set('global', {\n    tooltips: {\n        enabled: true,\n        custom: null,\n        mode: 'nearest',\n        position: 'average',\n        intersect: true,\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleFontStyle: 'bold',\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleFontColor: '#fff',\n        titleAlign: 'left',\n        bodySpacing: 2,\n        bodyFontColor: '#fff',\n        bodyAlign: 'left',\n        footerFontStyle: 'bold',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFontColor: '#fff',\n        footerAlign: 'left',\n        yPadding: 6,\n        xPadding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        callbacks: {\n            // Args are: (tooltipItems, data)\n            beforeTitle: helpers.noop,\n            title: function (tooltipItems, data) {\n                // Pick first xLabel for now\n                var title = '';\n                var labels = data.labels;\n                var labelCount = labels ? labels.length : 0;\n\n                if (tooltipItems.length > 0) {\n                    var item = tooltipItems[0];\n\n                    if (item.xLabel) {\n                        title = item.xLabel;\n                    } else if (labelCount > 0 && item.index < labelCount) {\n                        title = labels[item.index];\n                    }\n                }\n\n                return title;\n            },\n            afterTitle: helpers.noop,\n\n            // Args are: (tooltipItems, data)\n            beforeBody: helpers.noop,\n\n            // Args are: (tooltipItem, data)\n            beforeLabel: helpers.noop,\n            label: function (tooltipItem, data) {\n                var label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n                if (label) {\n                    label += ': ';\n                }\n                label += tooltipItem.yLabel;\n                return label;\n            },\n            labelColor: function (tooltipItem, chart) {\n                var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n                var activeElement = meta.data[tooltipItem.index];\n                var view = activeElement._view;\n                return {\n                    borderColor: view.borderColor,\n                    backgroundColor: view.backgroundColor\n                };\n            },\n            labelTextColor: function () {\n                return this._options.bodyFontColor;\n            },\n            afterLabel: helpers.noop,\n\n            // Args are: (tooltipItems, data)\n            afterBody: helpers.noop,\n\n            // Args are: (tooltipItems, data)\n            beforeFooter: helpers.noop,\n            footer: helpers.noop,\n            afterFooter: helpers.noop\n        }\n    }\n});\n\nmodule.exports = function (Chart) {\n\n    /**\n     * Helper method to merge the opacity into a color\n     */\n    function mergeOpacity(colorString, opacity)\n    {\n        var color = helpers.color(colorString);\n        return color.alpha(opacity * color.alpha()).rgbaString();\n    }\n\n    // Helper to push or concat based on if the 2nd parameter is an array or not\n    function pushOrConcat(base, toPush)\n    {\n        if (toPush) {\n            if (helpers.isArray(toPush)) {\n                // base = base.concat(toPush);\n                Array.prototype.push.apply(base, toPush);\n            } else {\n                base.push(toPush);\n            }\n        }\n\n        return base;\n    }\n\n    // Private helper to create a tooltip item model\n    // @param element : the chart element (point, arc, bar) to create the tooltip item for\n    // @return : new tooltip item\n    function createTooltipItem(element)\n    {\n        var xScale = element._xScale;\n        var yScale = element._yScale || element._scale; // handle radar || polarArea charts\n        var index = element._index;\n        var datasetIndex = element._datasetIndex;\n\n        return {\n            xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n            yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n            index: index,\n            datasetIndex: datasetIndex,\n            x: element._model.x,\n            y: element._model.y\n        };\n    }\n\n    /**\n     * Helper to get the reset model for the tooltip\n     * @param tooltipOpts {Object} the tooltip options\n     */\n    function getBaseModel(tooltipOpts)\n    {\n        var globalDefaults = defaults.global;\n        var valueOrDefault = helpers.valueOrDefault;\n\n        return {\n            // Positioning\n            xPadding: tooltipOpts.xPadding,\n            yPadding: tooltipOpts.yPadding,\n            xAlign: tooltipOpts.xAlign,\n            yAlign: tooltipOpts.yAlign,\n\n            // Body\n            bodyFontColor: tooltipOpts.bodyFontColor,\n            _bodyFontFamily: valueOrDefault(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n            _bodyFontStyle: valueOrDefault(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n            _bodyAlign: tooltipOpts.bodyAlign,\n            bodyFontSize: valueOrDefault(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n            bodySpacing: tooltipOpts.bodySpacing,\n\n            // Title\n            titleFontColor: tooltipOpts.titleFontColor,\n            _titleFontFamily: valueOrDefault(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n            _titleFontStyle: valueOrDefault(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n            titleFontSize: valueOrDefault(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n            _titleAlign: tooltipOpts.titleAlign,\n            titleSpacing: tooltipOpts.titleSpacing,\n            titleMarginBottom: tooltipOpts.titleMarginBottom,\n\n            // Footer\n            footerFontColor: tooltipOpts.footerFontColor,\n            _footerFontFamily: valueOrDefault(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n            _footerFontStyle: valueOrDefault(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n            footerFontSize: valueOrDefault(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n            _footerAlign: tooltipOpts.footerAlign,\n            footerSpacing: tooltipOpts.footerSpacing,\n            footerMarginTop: tooltipOpts.footerMarginTop,\n\n            // Appearance\n            caretSize: tooltipOpts.caretSize,\n            cornerRadius: tooltipOpts.cornerRadius,\n            backgroundColor: tooltipOpts.backgroundColor,\n            opacity: 0,\n            legendColorBackground: tooltipOpts.multiKeyBackground,\n            displayColors: tooltipOpts.displayColors,\n            borderColor: tooltipOpts.borderColor,\n            borderWidth: tooltipOpts.borderWidth\n        };\n    }\n\n    /**\n     * Get the size of the tooltip\n     */\n    function getTooltipSize(tooltip, model)\n    {\n        var ctx = tooltip._chart.ctx;\n\n        var height = model.yPadding * 2; // Tooltip Padding\n        var width = 0;\n\n        // Count of all lines in the body\n        var body = model.body;\n        var combinedBodyLength = body.reduce(function (count, bodyItem) {\n            return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n        }, 0);\n        combinedBodyLength += model.beforeBody.length + model.afterBody.length;\n\n        var titleLineCount = model.title.length;\n        var footerLineCount = model.footer.length;\n        var titleFontSize = model.titleFontSize;\n        var bodyFontSize = model.bodyFontSize;\n        var footerFontSize = model.footerFontSize;\n\n        height += titleLineCount * titleFontSize; // Title Lines\n        height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n        height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n        height += combinedBodyLength * bodyFontSize; // Body Lines\n        height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n        height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n        height += footerLineCount * (footerFontSize); // Footer Lines\n        height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n\n        // Title width\n        var widthPadding = 0;\n        var maxLineWidth = function (line) {\n            width = Math.max(width, ctx.measureText(line).width + widthPadding);\n        };\n\n        ctx.font = helpers.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n        helpers.each(model.title, maxLineWidth);\n\n        // Body width\n        ctx.font = helpers.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n        helpers.each(model.beforeBody.concat(model.afterBody), maxLineWidth);\n\n        // Body lines may include some extra width due to the color box\n        widthPadding = model.displayColors ? (bodyFontSize + 2) : 0;\n        helpers.each(body, function (bodyItem) {\n            helpers.each(bodyItem.before, maxLineWidth);\n            helpers.each(bodyItem.lines, maxLineWidth);\n            helpers.each(bodyItem.after, maxLineWidth);\n        });\n\n        // Reset back to 0\n        widthPadding = 0;\n\n        // Footer width\n        ctx.font = helpers.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n        helpers.each(model.footer, maxLineWidth);\n\n        // Add padding\n        width += 2 * model.xPadding;\n\n        return {\n            width: width,\n            height: height\n        };\n    }\n\n    /**\n     * Helper to get the alignment of a tooltip given the size\n     */\n    function determineAlignment(tooltip, size)\n    {\n        var model = tooltip._model;\n        var chart = tooltip._chart;\n        var chartArea = tooltip._chart.chartArea;\n        var xAlign = 'center';\n        var yAlign = 'center';\n\n        if (model.y < size.height) {\n            yAlign = 'top';\n        } else if (model.y > (chart.height - size.height)) {\n            yAlign = 'bottom';\n        }\n\n        var lf, rf; // functions to determine left, right alignment\n        var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n        var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n        var midX = (chartArea.left + chartArea.right) / 2;\n        var midY = (chartArea.top + chartArea.bottom) / 2;\n\n        if (yAlign === 'center') {\n            lf = function (x) {\n                return x <= midX;\n            };\n            rf = function (x) {\n                return x > midX;\n            };\n        } else {\n            lf = function (x) {\n                return x <= (size.width / 2);\n            };\n            rf = function (x) {\n                return x >= (chart.width - (size.width / 2));\n            };\n        }\n\n        olf = function (x) {\n            return x + size.width + model.caretSize + model.caretPadding > chart.width;\n        };\n        orf = function (x) {\n            return x - size.width - model.caretSize - model.caretPadding < 0;\n        };\n        yf = function (y) {\n            return y <= midY ? 'top' : 'bottom';\n        };\n\n        if (lf(model.x)) {\n            xAlign = 'left';\n\n            // Is tooltip too wide and goes over the right side of the chart.?\n            if (olf(model.x)) {\n                xAlign = 'center';\n                yAlign = yf(model.y);\n            }\n        } else if (rf(model.x)) {\n            xAlign = 'right';\n\n            // Is tooltip too wide and goes outside left edge of canvas?\n            if (orf(model.x)) {\n                xAlign = 'center';\n                yAlign = yf(model.y);\n            }\n        }\n\n        var opts = tooltip._options;\n        return {\n            xAlign: opts.xAlign ? opts.xAlign : xAlign,\n            yAlign: opts.yAlign ? opts.yAlign : yAlign\n        };\n    }\n\n    /**\n     * @Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n     */\n    function getBackgroundPoint(vm, size, alignment, chart)\n    {\n        // Background Position\n        var x = vm.x;\n        var y = vm.y;\n\n        var caretSize = vm.caretSize;\n        var caretPadding = vm.caretPadding;\n        var cornerRadius = vm.cornerRadius;\n        var xAlign = alignment.xAlign;\n        var yAlign = alignment.yAlign;\n        var paddingAndSize = caretSize + caretPadding;\n        var radiusAndPadding = cornerRadius + caretPadding;\n\n        if (xAlign === 'right') {\n            x -= size.width;\n        } else if (xAlign === 'center') {\n            x -= (size.width / 2);\n            if (x + size.width > chart.width) {\n                x = chart.width - size.width;\n            }\n            if (x < 0) {\n                x = 0;\n            }\n        }\n\n        if (yAlign === 'top') {\n            y += paddingAndSize;\n        } else if (yAlign === 'bottom') {\n            y -= size.height + paddingAndSize;\n        } else {\n            y -= (size.height / 2);\n        }\n\n        if (yAlign === 'center') {\n            if (xAlign === 'left') {\n                x += paddingAndSize;\n            } else if (xAlign === 'right') {\n                x -= paddingAndSize;\n            }\n        } else if (xAlign === 'left') {\n            x -= radiusAndPadding;\n        } else if (xAlign === 'right') {\n            x += radiusAndPadding;\n        }\n\n        return {\n            x: x,\n            y: y\n        };\n    }\n\n    Chart.Tooltip = Element.extend({\n        initialize: function () {\n            this._model = getBaseModel(this._options);\n            this._lastActive = [];\n        },\n\n        // Get the title\n        // Args are: (tooltipItem, data)\n        getTitle: function () {\n            var me = this;\n            var opts = me._options;\n            var callbacks = opts.callbacks;\n\n            var beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n            var title = callbacks.title.apply(me, arguments);\n            var afterTitle = callbacks.afterTitle.apply(me, arguments);\n\n            var lines = [];\n            lines = pushOrConcat(lines, beforeTitle);\n            lines = pushOrConcat(lines, title);\n            lines = pushOrConcat(lines, afterTitle);\n\n            return lines;\n        },\n\n        // Args are: (tooltipItem, data)\n        getBeforeBody: function () {\n            var lines = this._options.callbacks.beforeBody.apply(this, arguments);\n            return helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\n        },\n\n        // Args are: (tooltipItem, data)\n        getBody: function (tooltipItems, data) {\n            var me = this;\n            var callbacks = me._options.callbacks;\n            var bodyItems = [];\n\n            helpers.each(tooltipItems, function (tooltipItem) {\n                var bodyItem = {\n                    before: [],\n                    lines: [],\n                    after: []\n                };\n                pushOrConcat(bodyItem.before, callbacks.beforeLabel.call(me, tooltipItem, data));\n                pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n                pushOrConcat(bodyItem.after, callbacks.afterLabel.call(me, tooltipItem, data));\n\n                bodyItems.push(bodyItem);\n            });\n\n            return bodyItems;\n        },\n\n        // Args are: (tooltipItem, data)\n        getAfterBody: function () {\n            var lines = this._options.callbacks.afterBody.apply(this, arguments);\n            return helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\n        },\n\n        // Get the footer and beforeFooter and afterFooter lines\n        // Args are: (tooltipItem, data)\n        getFooter: function () {\n            var me = this;\n            var callbacks = me._options.callbacks;\n\n            var beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n            var footer = callbacks.footer.apply(me, arguments);\n            var afterFooter = callbacks.afterFooter.apply(me, arguments);\n\n            var lines = [];\n            lines = pushOrConcat(lines, beforeFooter);\n            lines = pushOrConcat(lines, footer);\n            lines = pushOrConcat(lines, afterFooter);\n\n            return lines;\n        },\n\n        update: function (changed) {\n            var me = this;\n            var opts = me._options;\n\n            // Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n            // that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n            // which breaks any animations.\n            var existingModel = me._model;\n            var model = me._model = getBaseModel(opts);\n            var active = me._active;\n\n            var data = me._data;\n\n            // In the case where active.length === 0 we need to keep these at existing values for good animations\n            var alignment = {\n                xAlign: existingModel.xAlign,\n                yAlign: existingModel.yAlign\n            };\n            var backgroundPoint = {\n                x: existingModel.x,\n                y: existingModel.y\n            };\n            var tooltipSize = {\n                width: existingModel.width,\n                height: existingModel.height\n            };\n            var tooltipPosition = {\n                x: existingModel.caretX,\n                y: existingModel.caretY\n            };\n\n            var i, len;\n\n            if (active.length) {\n                model.opacity = 1;\n\n                var labelColors = [];\n                var labelTextColors = [];\n                tooltipPosition = Chart.Tooltip.positioners[opts.position].call(me, active, me._eventPosition);\n\n                var tooltipItems = [];\n                for (i = 0, len = active.length; i < len; ++i) {\n                    tooltipItems.push(createTooltipItem(active[i]));\n                }\n\n                // If the user provided a filter function, use it to modify the tooltip items\n                if (opts.filter) {\n                    tooltipItems = tooltipItems.filter(function (a) {\n                        return opts.filter(a, data);\n                    });\n                }\n\n                // If the user provided a sorting function, use it to modify the tooltip items\n                if (opts.itemSort) {\n                    tooltipItems = tooltipItems.sort(function (a, b) {\n                        return opts.itemSort(a, b, data);\n                    });\n                }\n\n                // Determine colors for boxes\n                helpers.each(tooltipItems, function (tooltipItem) {\n                    labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n                    labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n                });\n\n\n                // Build the Text Lines\n                model.title = me.getTitle(tooltipItems, data);\n                model.beforeBody = me.getBeforeBody(tooltipItems, data);\n                model.body = me.getBody(tooltipItems, data);\n                model.afterBody = me.getAfterBody(tooltipItems, data);\n                model.footer = me.getFooter(tooltipItems, data);\n\n                // Initial positioning and colors\n                model.x = Math.round(tooltipPosition.x);\n                model.y = Math.round(tooltipPosition.y);\n                model.caretPadding = opts.caretPadding;\n                model.labelColors = labelColors;\n                model.labelTextColors = labelTextColors;\n\n                // data points\n                model.dataPoints = tooltipItems;\n\n                // We need to determine alignment of the tooltip\n                tooltipSize = getTooltipSize(this, model);\n                alignment = determineAlignment(this, tooltipSize);\n                // Final Size and Position\n                backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n            } else {\n                model.opacity = 0;\n            }\n\n            model.xAlign = alignment.xAlign;\n            model.yAlign = alignment.yAlign;\n            model.x = backgroundPoint.x;\n            model.y = backgroundPoint.y;\n            model.width = tooltipSize.width;\n            model.height = tooltipSize.height;\n\n            // Point where the caret on the tooltip points to\n            model.caretX = tooltipPosition.x;\n            model.caretY = tooltipPosition.y;\n\n            me._model = model;\n\n            if (changed && opts.custom) {\n                opts.custom.call(me, model);\n            }\n\n            return me;\n        },\n        drawCaret: function (tooltipPoint, size) {\n            var ctx = this._chart.ctx;\n            var vm = this._view;\n            var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n\n            ctx.lineTo(caretPosition.x1, caretPosition.y1);\n            ctx.lineTo(caretPosition.x2, caretPosition.y2);\n            ctx.lineTo(caretPosition.x3, caretPosition.y3);\n        },\n        getCaretPosition: function (tooltipPoint, size, vm) {\n            var x1, x2, x3, y1, y2, y3;\n            var caretSize = vm.caretSize;\n            var cornerRadius = vm.cornerRadius;\n            var xAlign = vm.xAlign;\n            var yAlign = vm.yAlign;\n            var ptX = tooltipPoint.x;\n            var ptY = tooltipPoint.y;\n            var width = size.width;\n            var height = size.height;\n\n            if (yAlign === 'center') {\n                y2 = ptY + (height / 2);\n\n                if (xAlign === 'left') {\n                    x1 = ptX;\n                    x2 = x1 - caretSize;\n                    x3 = x1;\n\n                    y1 = y2 + caretSize;\n                    y3 = y2 - caretSize;\n                } else {\n                    x1 = ptX + width;\n                    x2 = x1 + caretSize;\n                    x3 = x1;\n\n                    y1 = y2 - caretSize;\n                    y3 = y2 + caretSize;\n                }\n            } else {\n                if (xAlign === 'left') {\n                    x2 = ptX + cornerRadius + (caretSize);\n                    x1 = x2 - caretSize;\n                    x3 = x2 + caretSize;\n                } else if (xAlign === 'right') {\n                    x2 = ptX + width - cornerRadius - caretSize;\n                    x1 = x2 - caretSize;\n                    x3 = x2 + caretSize;\n                } else {\n                    x2 = vm.caretX;\n                    x1 = x2 - caretSize;\n                    x3 = x2 + caretSize;\n                }\n                if (yAlign === 'top') {\n                    y1 = ptY;\n                    y2 = y1 - caretSize;\n                    y3 = y1;\n                } else {\n                    y1 = ptY + height;\n                    y2 = y1 + caretSize;\n                    y3 = y1;\n                    // invert drawing order\n                    var tmp = x3;\n                    x3 = x1;\n                    x1 = tmp;\n                }\n            }\n            return {x1: x1, x2: x2, x3: x3, y1: y1, y2: y2, y3: y3};\n        },\n        drawTitle: function (pt, vm, ctx, opacity) {\n            var title = vm.title;\n\n            if (title.length) {\n                ctx.textAlign = vm._titleAlign;\n                ctx.textBaseline = 'top';\n\n                var titleFontSize = vm.titleFontSize;\n                var titleSpacing = vm.titleSpacing;\n\n                ctx.fillStyle = mergeOpacity(vm.titleFontColor, opacity);\n                ctx.font = helpers.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n\n                var i, len;\n                for (i = 0, len = title.length; i < len; ++i) {\n                    ctx.fillText(title[i], pt.x, pt.y);\n                    pt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n                    if (i + 1 === title.length) {\n                        pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n                    }\n                }\n            }\n        },\n        drawBody: function (pt, vm, ctx, opacity) {\n            var bodyFontSize = vm.bodyFontSize;\n            var bodySpacing = vm.bodySpacing;\n            var body = vm.body;\n\n            ctx.textAlign = vm._bodyAlign;\n            ctx.textBaseline = 'top';\n            ctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n\n            // Before Body\n            var xLinePadding = 0;\n            var fillLineOfText = function (line) {\n                ctx.fillText(line, pt.x + xLinePadding, pt.y);\n                pt.y += bodyFontSize + bodySpacing;\n            };\n\n            // Before body lines\n            ctx.fillStyle = mergeOpacity(vm.bodyFontColor, opacity);\n            helpers.each(vm.beforeBody, fillLineOfText);\n\n            var drawColorBoxes = vm.displayColors;\n            xLinePadding = drawColorBoxes ? (bodyFontSize + 2) : 0;\n\n            // Draw body lines now\n            helpers.each(body, function (bodyItem, i) {\n                var textColor = mergeOpacity(vm.labelTextColors[i], opacity);\n                ctx.fillStyle = textColor;\n                helpers.each(bodyItem.before, fillLineOfText);\n\n                helpers.each(bodyItem.lines, function (line) {\n                    // Draw Legend-like boxes if needed\n                    if (drawColorBoxes) {\n                        // Fill a white rect so that colours merge nicely if the opacity is < 1\n                        ctx.fillStyle = mergeOpacity(vm.legendColorBackground, opacity);\n                        ctx.fillRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\n\n                        // Border\n                        ctx.lineWidth = 1;\n                        ctx.strokeStyle = mergeOpacity(vm.labelColors[i].borderColor, opacity);\n                        ctx.strokeRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\n\n                        // Inner square\n                        ctx.fillStyle = mergeOpacity(vm.labelColors[i].backgroundColor, opacity);\n                        ctx.fillRect(pt.x + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n                        ctx.fillStyle = textColor;\n                    }\n\n                    fillLineOfText(line);\n                });\n\n                helpers.each(bodyItem.after, fillLineOfText);\n            });\n\n            // Reset back to 0 for after body\n            xLinePadding = 0;\n\n            // After body lines\n            helpers.each(vm.afterBody, fillLineOfText);\n            pt.y -= bodySpacing; // Remove last body spacing\n        },\n        drawFooter: function (pt, vm, ctx, opacity) {\n            var footer = vm.footer;\n\n            if (footer.length) {\n                pt.y += vm.footerMarginTop;\n\n                ctx.textAlign = vm._footerAlign;\n                ctx.textBaseline = 'top';\n\n                ctx.fillStyle = mergeOpacity(vm.footerFontColor, opacity);\n                ctx.font = helpers.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n\n                helpers.each(footer, function (line) {\n                    ctx.fillText(line, pt.x, pt.y);\n                    pt.y += vm.footerFontSize + vm.footerSpacing;\n                });\n            }\n        },\n        drawBackground: function (pt, vm, ctx, tooltipSize, opacity) {\n            ctx.fillStyle = mergeOpacity(vm.backgroundColor, opacity);\n            ctx.strokeStyle = mergeOpacity(vm.borderColor, opacity);\n            ctx.lineWidth = vm.borderWidth;\n            var xAlign = vm.xAlign;\n            var yAlign = vm.yAlign;\n            var x = pt.x;\n            var y = pt.y;\n            var width = tooltipSize.width;\n            var height = tooltipSize.height;\n            var radius = vm.cornerRadius;\n\n            ctx.beginPath();\n            ctx.moveTo(x + radius, y);\n            if (yAlign === 'top') {\n                this.drawCaret(pt, tooltipSize);\n            }\n            ctx.lineTo(x + width - radius, y);\n            ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n            if (yAlign === 'center' && xAlign === 'right') {\n                this.drawCaret(pt, tooltipSize);\n            }\n            ctx.lineTo(x + width, y + height - radius);\n            ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n            if (yAlign === 'bottom') {\n                this.drawCaret(pt, tooltipSize);\n            }\n            ctx.lineTo(x + radius, y + height);\n            ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n            if (yAlign === 'center' && xAlign === 'left') {\n                this.drawCaret(pt, tooltipSize);\n            }\n            ctx.lineTo(x, y + radius);\n            ctx.quadraticCurveTo(x, y, x + radius, y);\n            ctx.closePath();\n\n            ctx.fill();\n\n            if (vm.borderWidth > 0) {\n                ctx.stroke();\n            }\n        },\n        draw: function () {\n            var ctx = this._chart.ctx;\n            var vm = this._view;\n\n            if (vm.opacity === 0) {\n                return;\n            }\n\n            var tooltipSize = {\n                width: vm.width,\n                height: vm.height\n            };\n            var pt = {\n                x: vm.x,\n                y: vm.y\n            };\n\n            // IE11/Edge does not like very small opacities, so snap to 0\n            var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity;\n\n            // Truthy/falsey value for empty tooltip\n            var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n            if (this._options.enabled && hasTooltipContent) {\n                // Draw Background\n                this.drawBackground(pt, vm, ctx, tooltipSize, opacity);\n\n                // Draw Title, Body, and Footer\n                pt.x += vm.xPadding;\n                pt.y += vm.yPadding;\n\n                // Titles\n                this.drawTitle(pt, vm, ctx, opacity);\n\n                // Body\n                this.drawBody(pt, vm, ctx, opacity);\n\n                // Footer\n                this.drawFooter(pt, vm, ctx, opacity);\n            }\n        },\n\n        /**\n         * Handle an event\n         * @private\n         * @param {IEvent} event - The event to handle\n         * @returns {Boolean} true if the tooltip changed\n         */\n        handleEvent: function (e) {\n            var me = this;\n            var options = me._options;\n            var changed = false;\n\n            me._lastActive = me._lastActive || [];\n\n            // Find Active Elements for tooltips\n            if (e.type === 'mouseout') {\n                me._active = [];\n            } else {\n                me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n            }\n\n            // Remember Last Actives\n            changed = !helpers.arrayEquals(me._active, me._lastActive);\n\n            // Only handle target event on tooltip change\n            if (changed) {\n                me._lastActive = me._active;\n\n                if (options.enabled || options.custom) {\n                    me._eventPosition = {\n                        x: e.x,\n                        y: e.y\n                    };\n\n                    me.update(true);\n                    me.pivot();\n                }\n            }\n\n            return changed;\n        }\n    });\n\n    /**\n     * @namespace Chart.Tooltip.positioners\n     */\n    Chart.Tooltip.positioners = {\n        /**\n         * Average mode places the tooltip at the average position of the elements shown\n         * @function Chart.Tooltip.positioners.average\n         * @param elements {ChartElement[]} the elements being displayed in the tooltip\n         * @returns {Point} tooltip position\n         */\n        average: function (elements) {\n            if (!elements.length) {\n                return false;\n            }\n\n            var i, len;\n            var x = 0;\n            var y = 0;\n            var count = 0;\n\n            for (i = 0, len = elements.length; i < len; ++i) {\n                var el = elements[i];\n                if (el && el.hasValue()) {\n                    var pos = el.tooltipPosition();\n                    x += pos.x;\n                    y += pos.y;\n                    ++count;\n                }\n            }\n\n            return {\n                x: Math.round(x / count),\n                y: Math.round(y / count)\n            };\n        },\n\n        /**\n         * Gets the tooltip position nearest of the item nearest to the event position\n         * @function Chart.Tooltip.positioners.nearest\n         * @param elements {Chart.Element[]} the tooltip elements\n         * @param eventPosition {Point} the position of the event in canvas coordinates\n         * @returns {Point} the tooltip position\n         */\n        nearest: function (elements, eventPosition) {\n            var x = eventPosition.x;\n            var y = eventPosition.y;\n            var minDistance = Number.POSITIVE_INFINITY;\n            var i, len, nearestElement;\n\n            for (i = 0, len = elements.length; i < len; ++i) {\n                var el = elements[i];\n                if (el && el.hasValue()) {\n                    var center = el.getCenterPoint();\n                    var d = helpers.distanceBetweenPoints(eventPosition, center);\n\n                    if (d < minDistance) {\n                        minDistance = d;\n                        nearestElement = el;\n                    }\n                }\n            }\n\n            if (nearestElement) {\n                var tp = nearestElement.tooltipPosition();\n                x = tp.x;\n                y = tp.y;\n            }\n\n            return {\n                x: x,\n                y: y\n            };\n        }\n    };\n};\n\n},{\"25\":25,\"26\":26,\"45\":45}],36:[function (require,module,exports) {\n'use strict';\n\nvar defaults = require(25);\nvar Element = require(26);\nvar helpers = require(45);\n\ndefaults._set('global', {\n    elements: {\n        arc: {\n            backgroundColor: defaults.global.defaultColor,\n            borderColor: '#fff',\n            borderWidth: 2\n        }\n    }\n});\n\nmodule.exports = Element.extend({\n    inLabelRange: function (mouseX) {\n        var vm = this._view;\n\n        if (vm) {\n            return (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2));\n        }\n        return false;\n    },\n\n    inRange: function (chartX, chartY) {\n        var vm = this._view;\n\n        if (vm) {\n            var pointRelativePosition = helpers.getAngleFromPoint(vm, {x: chartX, y: chartY});\n            var angle = pointRelativePosition.angle;\n            var distance = pointRelativePosition.distance;\n\n            // Sanitise angle range\n            var startAngle = vm.startAngle;\n            var endAngle = vm.endAngle;\n            while (endAngle < startAngle) {\n                endAngle += 2.0 * Math.PI;\n            }\n            while (angle > endAngle) {\n                angle -= 2.0 * Math.PI;\n            }\n            while (angle < startAngle) {\n                angle += 2.0 * Math.PI;\n            }\n\n            // Check if within the range of the open/close angle\n            var betweenAngles = (angle >= startAngle && angle <= endAngle);\n            var withinRadius = (distance >= vm.innerRadius && distance <= vm.outerRadius);\n\n            return (betweenAngles && withinRadius);\n        }\n        return false;\n    },\n\n    getCenterPoint: function () {\n        var vm = this._view;\n        var halfAngle = (vm.startAngle + vm.endAngle) / 2;\n        var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n        return {\n            x: vm.x + Math.cos(halfAngle) * halfRadius,\n            y: vm.y + Math.sin(halfAngle) * halfRadius\n        };\n    },\n\n    getArea: function () {\n        var vm = this._view;\n        return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n    },\n\n    tooltipPosition: function () {\n        var vm = this._view;\n        var centreAngle = vm.startAngle + ((vm.endAngle - vm.startAngle) / 2);\n        var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n\n        return {\n            x: vm.x + (Math.cos(centreAngle) * rangeFromCentre),\n            y: vm.y + (Math.sin(centreAngle) * rangeFromCentre)\n        };\n    },\n\n    draw: function () {\n        var ctx = this._chart.ctx;\n        var vm = this._view;\n        var sA = vm.startAngle;\n        var eA = vm.endAngle;\n\n        ctx.beginPath();\n\n        ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n        ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n\n        ctx.closePath();\n        ctx.strokeStyle = vm.borderColor;\n        ctx.lineWidth = vm.borderWidth;\n\n        ctx.fillStyle = vm.backgroundColor;\n\n        ctx.fill();\n        ctx.lineJoin = 'bevel';\n\n        if (vm.borderWidth) {\n            ctx.stroke();\n        }\n    }\n});\n\n},{\"25\":25,\"26\":26,\"45\":45}],37:[function (require,module,exports) {\n'use strict';\n\nvar defaults = require(25);\nvar Element = require(26);\nvar helpers = require(45);\n\nvar globalDefaults = defaults.global;\n\ndefaults._set('global', {\n    elements: {\n        line: {\n            tension: 0.4,\n            backgroundColor: globalDefaults.defaultColor,\n            borderWidth: 3,\n            borderColor: globalDefaults.defaultColor,\n            borderCapStyle: 'butt',\n            borderDash: [],\n            borderDashOffset: 0.0,\n            borderJoinStyle: 'miter',\n            capBezierPoints: true,\n            fill: true, // do we fill in the area between the line and its base axis\n        }\n    }\n});\n\nmodule.exports = Element.extend({\n    draw: function () {\n        var me = this;\n        var vm = me._view;\n        var ctx = me._chart.ctx;\n        var spanGaps = vm.spanGaps;\n        var points = me._children.slice(); // clone array\n        var globalOptionLineElements = globalDefaults.elements.line;\n        var lastDrawnIndex = -1;\n        var index, current, previous, currentVM;\n\n        // If we are looping, adding the first point again\n        if (me._loop && points.length) {\n            points.push(points[0]);\n        }\n\n        ctx.save();\n\n        // Stroke Line Options\n        ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle;\n\n        // IE 9 and 10 do not support line dash\n        if (ctx.setLineDash) {\n            ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n        }\n\n        ctx.lineDashOffset = vm.borderDashOffset || globalOptionLineElements.borderDashOffset;\n        ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n        ctx.lineWidth = vm.borderWidth || globalOptionLineElements.borderWidth;\n        ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor;\n\n        // Stroke Line\n        ctx.beginPath();\n        lastDrawnIndex = -1;\n\n        for (index = 0; index < points.length; ++index) {\n            current = points[index];\n            previous = helpers.previousItem(points, index);\n            currentVM = current._view;\n\n            // First point moves to it's starting position no matter what\n            if (index === 0) {\n                if (!currentVM.skip) {\n                    ctx.moveTo(currentVM.x, currentVM.y);\n                    lastDrawnIndex = index;\n                }\n            } else {\n                previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n                if (!currentVM.skip) {\n                    if ((lastDrawnIndex !== (index - 1) && !spanGaps) || lastDrawnIndex === -1) {\n                        // There was a gap and this is the first point after the gap\n                        ctx.moveTo(currentVM.x, currentVM.y);\n                    } else {\n                        // Line to next point\n                        helpers.canvas.lineTo(ctx, previous._view, current._view);\n                    }\n                    lastDrawnIndex = index;\n                }\n            }\n        }\n\n        ctx.stroke();\n        ctx.restore();\n    }\n});\n\n},{\"25\":25,\"26\":26,\"45\":45}],38:[function (require,module,exports) {\n'use strict';\n\nvar defaults = require(25);\nvar Element = require(26);\nvar helpers = require(45);\n\nvar defaultColor = defaults.global.defaultColor;\n\ndefaults._set('global', {\n    elements: {\n        point: {\n            radius: 3,\n            pointStyle: 'circle',\n            backgroundColor: defaultColor,\n            borderColor: defaultColor,\n            borderWidth: 1,\n            // Hover\n            hitRadius: 1,\n            hoverRadius: 4,\n            hoverBorderWidth: 1\n        }\n    }\n});\n\nfunction xRange(mouseX)\n{\n    var vm = this._view;\n    return vm ? (Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius) : false;\n}\n\nfunction yRange(mouseY)\n{\n    var vm = this._view;\n    return vm ? (Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius) : false;\n}\n\nmodule.exports = Element.extend({\n    inRange: function (mouseX, mouseY) {\n        var vm = this._view;\n        return vm ? ((Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2)) < Math.pow(vm.hitRadius + vm.radius, 2)) : false;\n    },\n\n    inLabelRange: xRange,\n    inXRange: xRange,\n    inYRange: yRange,\n\n    getCenterPoint: function () {\n        var vm = this._view;\n        return {\n            x: vm.x,\n            y: vm.y\n        };\n    },\n\n    getArea: function () {\n        return Math.PI * Math.pow(this._view.radius, 2);\n    },\n\n    tooltipPosition: function () {\n        var vm = this._view;\n        return {\n            x: vm.x,\n            y: vm.y,\n            padding: vm.radius + vm.borderWidth\n        };\n    },\n\n    draw: function (chartArea) {\n        var vm = this._view;\n        var model = this._model;\n        var ctx = this._chart.ctx;\n        var pointStyle = vm.pointStyle;\n        var radius = vm.radius;\n        var x = vm.x;\n        var y = vm.y;\n        var color = helpers.color;\n        var errMargin = 1.01; // 1.01 is margin for Accumulated error. (Especially Edge, IE.)\n        var ratio = 0;\n\n        if (vm.skip) {\n            return;\n        }\n\n        ctx.strokeStyle = vm.borderColor || defaultColor;\n        ctx.lineWidth = helpers.valueOrDefault(vm.borderWidth, defaults.global.elements.point.borderWidth);\n        ctx.fillStyle = vm.backgroundColor || defaultColor;\n\n        // Cliping for Points.\n        // going out from inner charArea?\n        if ((chartArea !== undefined) && ((model.x < chartArea.left) || (chartArea.right * errMargin < model.x) || (model.y < chartArea.top) || (chartArea.bottom * errMargin < model.y))) {\n            // Point fade out\n            if (model.x < chartArea.left) {\n                ratio = (x - model.x) / (chartArea.left - model.x);\n            } else if (chartArea.right * errMargin < model.x) {\n                ratio = (model.x - x) / (model.x - chartArea.right);\n            } else if (model.y < chartArea.top) {\n                ratio = (y - model.y) / (chartArea.top - model.y);\n            } else if (chartArea.bottom * errMargin < model.y) {\n                ratio = (model.y - y) / (model.y - chartArea.bottom);\n            }\n            ratio = Math.round(ratio * 100) / 100;\n            ctx.strokeStyle = color(ctx.strokeStyle).alpha(ratio).rgbString();\n            ctx.fillStyle = color(ctx.fillStyle).alpha(ratio).rgbString();\n        }\n\n        helpers.canvas.drawPoint(ctx, pointStyle, radius, x, y);\n    }\n});\n\n},{\"25\":25,\"26\":26,\"45\":45}],39:[function (require,module,exports) {\n'use strict';\n\nvar defaults = require(25);\nvar Element = require(26);\n\ndefaults._set('global', {\n    elements: {\n        rectangle: {\n            backgroundColor: defaults.global.defaultColor,\n            borderColor: defaults.global.defaultColor,\n            borderSkipped: 'bottom',\n            borderWidth: 0\n        }\n    }\n});\n\nfunction isVertical(bar)\n{\n    return bar._view.width !== undefined;\n}\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param bar {Chart.Element.Rectangle} the bar\n * @return {Bounds} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar)\n{\n    var vm = bar._view;\n    var x1, x2, y1, y2;\n\n    if (isVertical(bar)) {\n        // vertical\n        var halfWidth = vm.width / 2;\n        x1 = vm.x - halfWidth;\n        x2 = vm.x + halfWidth;\n        y1 = Math.min(vm.y, vm.base);\n        y2 = Math.max(vm.y, vm.base);\n    } else {\n        // horizontal bar\n        var halfHeight = vm.height / 2;\n        x1 = Math.min(vm.x, vm.base);\n        x2 = Math.max(vm.x, vm.base);\n        y1 = vm.y - halfHeight;\n        y2 = vm.y + halfHeight;\n    }\n\n    return {\n        left: x1,\n        top: y1,\n        right: x2,\n        bottom: y2\n    };\n}\n\nmodule.exports = Element.extend({\n    draw: function () {\n        var ctx = this._chart.ctx;\n        var vm = this._view;\n        var left, right, top, bottom, signX, signY, borderSkipped;\n        var borderWidth = vm.borderWidth;\n\n        if (!vm.horizontal) {\n            // bar\n            left = vm.x - vm.width / 2;\n            right = vm.x + vm.width / 2;\n            top = vm.y;\n            bottom = vm.base;\n            signX = 1;\n            signY = bottom > top ? 1 : -1;\n            borderSkipped = vm.borderSkipped || 'bottom';\n        } else {\n            // horizontal bar\n            left = vm.base;\n            right = vm.x;\n            top = vm.y - vm.height / 2;\n            bottom = vm.y + vm.height / 2;\n            signX = right > left ? 1 : -1;\n            signY = 1;\n            borderSkipped = vm.borderSkipped || 'left';\n        }\n\n        // Canvas doesn't allow us to stroke inside the width so we can\n        // adjust the sizes to fit if we're setting a stroke on the line\n        if (borderWidth) {\n            // borderWidth shold be less than bar width and bar height.\n            var barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n            borderWidth = borderWidth > barSize ? barSize : borderWidth;\n            var halfStroke = borderWidth / 2;\n            // Adjust borderWidth when bar top position is near vm.base(zero).\n            var borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\n            var borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\n            var borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\n            var borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\n            // not become a vertical line?\n            if (borderLeft !== borderRight) {\n                top = borderTop;\n                bottom = borderBottom;\n            }\n            // not become a horizontal line?\n            if (borderTop !== borderBottom) {\n                left = borderLeft;\n                right = borderRight;\n            }\n        }\n\n        ctx.beginPath();\n        ctx.fillStyle = vm.backgroundColor;\n        ctx.strokeStyle = vm.borderColor;\n        ctx.lineWidth = borderWidth;\n\n        // Corner points, from bottom-left to bottom-right clockwise\n        // | 1 2 |\n        // | 0 3 |\n        var corners = [\n            [left, bottom],\n            [left, top],\n            [right, top],\n            [right, bottom]\n        ];\n\n        // Find first (starting) corner with fallback to 'bottom'\n        var borders = ['bottom', 'left', 'top', 'right'];\n        var startCorner = borders.indexOf(borderSkipped, 0);\n        if (startCorner === -1) {\n            startCorner = 0;\n        }\n\n        function cornerAt(index)\n        {\n            return corners[(startCorner + index) % 4];\n        }\n\n        // Draw rectangle from 'startCorner'\n        var corner = cornerAt(0);\n        ctx.moveTo(corner[0], corner[1]);\n\n        for (var i = 1; i < 4; i++) {\n            corner = cornerAt(i);\n            ctx.lineTo(corner[0], corner[1]);\n        }\n\n        ctx.fill();\n        if (borderWidth) {\n            ctx.stroke();\n        }\n    },\n\n    height: function () {\n        var vm = this._view;\n        return vm.base - vm.y;\n    },\n\n    inRange: function (mouseX, mouseY) {\n        var inRange = false;\n\n        if (this._view) {\n            var bounds = getBarBounds(this);\n            inRange = mouseX >= bounds.left && mouseX <= bounds.right && mouseY >= bounds.top && mouseY <= bounds.bottom;\n        }\n\n        return inRange;\n    },\n\n    inLabelRange: function (mouseX, mouseY) {\n        var me = this;\n        if (!me._view) {\n            return false;\n        }\n\n        var inRange = false;\n        var bounds = getBarBounds(me);\n\n        if (isVertical(me)) {\n            inRange = mouseX >= bounds.left && mouseX <= bounds.right;\n        } else {\n            inRange = mouseY >= bounds.top && mouseY <= bounds.bottom;\n        }\n\n        return inRange;\n    },\n\n    inXRange: function (mouseX) {\n        var bounds = getBarBounds(this);\n        return mouseX >= bounds.left && mouseX <= bounds.right;\n    },\n\n    inYRange: function (mouseY) {\n        var bounds = getBarBounds(this);\n        return mouseY >= bounds.top && mouseY <= bounds.bottom;\n    },\n\n    getCenterPoint: function () {\n        var vm = this._view;\n        var x, y;\n        if (isVertical(this)) {\n            x = vm.x;\n            y = (vm.y + vm.base) / 2;\n        } else {\n            x = (vm.x + vm.base) / 2;\n            y = vm.y;\n        }\n\n        return {x: x, y: y};\n    },\n\n    getArea: function () {\n        var vm = this._view;\n        return vm.width * Math.abs(vm.y - vm.base);\n    },\n\n    tooltipPosition: function () {\n        var vm = this._view;\n        return {\n            x: vm.x,\n            y: vm.y\n        };\n    }\n});\n\n},{\"25\":25,\"26\":26}],40:[function (require,module,exports) {\n'use strict';\n\nmodule.exports = {};\nmodule.exports.Arc = require(36);\nmodule.exports.Line = require(37);\nmodule.exports.Point = require(38);\nmodule.exports.Rectangle = require(39);\n\n},{\"36\":36,\"37\":37,\"38\":38,\"39\":39}],41:[function (require,module,exports) {\n'use strict';\n\nvar helpers = require(42);\n\n/**\n * @namespace Chart.helpers.canvas\n */\nvar exports = module.exports = {\n    /**\n     * Clears the entire canvas associated to the given `chart`.\n     * @param {Chart} chart - The chart for which to clear the canvas.\n     */\n    clear: function (chart) {\n        chart.ctx.clearRect(0, 0, chart.width, chart.height);\n    },\n\n    /**\n     * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n     * given size (width, height) and the same `radius` for all corners.\n     * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n     * @param {Number} x - The x axis of the coordinate for the rectangle starting point.\n     * @param {Number} y - The y axis of the coordinate for the rectangle starting point.\n     * @param {Number} width - The rectangle's width.\n     * @param {Number} height - The rectangle's height.\n     * @param {Number} radius - The rounded amount (in pixels) for the four corners.\n     */\n    roundedRect: function (ctx, x, y, width, height, radius) {\n        if (radius) {\n            var rx = Math.min(radius, width / 2);\n            var ry = Math.min(radius, height / 2);\n\n            ctx.moveTo(x + rx, y);\n            ctx.lineTo(x + width - rx, y);\n            ctx.quadraticCurveTo(x + width, y, x + width, y + ry);\n            ctx.lineTo(x + width, y + height - ry);\n            ctx.quadraticCurveTo(x + width, y + height, x + width - rx, y + height);\n            ctx.lineTo(x + rx, y + height);\n            ctx.quadraticCurveTo(x, y + height, x, y + height - ry);\n            ctx.lineTo(x, y + ry);\n            ctx.quadraticCurveTo(x, y, x + rx, y);\n        } else {\n            ctx.rect(x, y, width, height);\n        }\n    },\n\n    drawPoint: function (ctx, style, radius, x, y) {\n        var type, edgeLength, xOffset, yOffset, height, size;\n\n        if (style && typeof style === 'object') {\n            type = style.toString();\n            if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n                ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n                return;\n            }\n        }\n\n        if (isNaN(radius) || radius <= 0) {\n            return;\n        }\n\n        switch (style) {\n        // Default includes circle\n        default:\n            ctx.beginPath();\n            ctx.arc(x, y, radius, 0, Math.PI * 2);\n            ctx.closePath();\n            ctx.fill();\n            break;\n        case 'triangle':\n            ctx.beginPath();\n            edgeLength = 3 * radius / Math.sqrt(3);\n            height = edgeLength * Math.sqrt(3) / 2;\n            ctx.moveTo(x - edgeLength / 2, y + height / 3);\n            ctx.lineTo(x + edgeLength / 2, y + height / 3);\n            ctx.lineTo(x, y - 2 * height / 3);\n            ctx.closePath();\n            ctx.fill();\n            break;\n        case 'rect':\n            size = 1 / Math.SQRT2 * radius;\n            ctx.beginPath();\n            ctx.fillRect(x - size, y - size, 2 * size, 2 * size);\n            ctx.strokeRect(x - size, y - size, 2 * size, 2 * size);\n            break;\n        case 'rectRounded':\n            var offset = radius / Math.SQRT2;\n            var leftX = x - offset;\n            var topY = y - offset;\n            var sideSize = Math.SQRT2 * radius;\n            ctx.beginPath();\n            this.roundedRect(ctx, leftX, topY, sideSize, sideSize, radius / 2);\n            ctx.closePath();\n            ctx.fill();\n            break;\n        case 'rectRot':\n            size = 1 / Math.SQRT2 * radius;\n            ctx.beginPath();\n            ctx.moveTo(x - size, y);\n            ctx.lineTo(x, y + size);\n            ctx.lineTo(x + size, y);\n            ctx.lineTo(x, y - size);\n            ctx.closePath();\n            ctx.fill();\n            break;\n        case 'cross':\n            ctx.beginPath();\n            ctx.moveTo(x, y + radius);\n            ctx.lineTo(x, y - radius);\n            ctx.moveTo(x - radius, y);\n            ctx.lineTo(x + radius, y);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            ctx.beginPath();\n            xOffset = Math.cos(Math.PI / 4) * radius;\n            yOffset = Math.sin(Math.PI / 4) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            ctx.moveTo(x - xOffset, y + yOffset);\n            ctx.lineTo(x + xOffset, y - yOffset);\n            ctx.closePath();\n            break;\n        case 'star':\n            ctx.beginPath();\n            ctx.moveTo(x, y + radius);\n            ctx.lineTo(x, y - radius);\n            ctx.moveTo(x - radius, y);\n            ctx.lineTo(x + radius, y);\n            xOffset = Math.cos(Math.PI / 4) * radius;\n            yOffset = Math.sin(Math.PI / 4) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            ctx.moveTo(x - xOffset, y + yOffset);\n            ctx.lineTo(x + xOffset, y - yOffset);\n            ctx.closePath();\n            break;\n        case 'line':\n            ctx.beginPath();\n            ctx.moveTo(x - radius, y);\n            ctx.lineTo(x + radius, y);\n            ctx.closePath();\n            break;\n        case 'dash':\n            ctx.beginPath();\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + radius, y);\n            ctx.closePath();\n            break;\n        }\n\n        ctx.stroke();\n    },\n\n    clipArea: function (ctx, area) {\n        ctx.save();\n        ctx.beginPath();\n        ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n        ctx.clip();\n    },\n\n    unclipArea: function (ctx) {\n        ctx.restore();\n    },\n\n    lineTo: function (ctx, previous, target, flip) {\n        if (target.steppedLine) {\n            if ((target.steppedLine === 'after' && !flip) || (target.steppedLine !== 'after' && flip)) {\n                ctx.lineTo(previous.x, target.y);\n            } else {\n                ctx.lineTo(target.x, previous.y);\n            }\n            ctx.lineTo(target.x, target.y);\n            return;\n        }\n\n        if (!target.tension) {\n            ctx.lineTo(target.x, target.y);\n            return;\n        }\n\n        ctx.bezierCurveTo(\n            flip ? previous.controlPointPreviousX : previous.controlPointNextX,\n            flip ? previous.controlPointPreviousY : previous.controlPointNextY,\n            flip ? target.controlPointNextX : target.controlPointPreviousX,\n            flip ? target.controlPointNextY : target.controlPointPreviousY,\n            target.x,\n            target.y\n        );\n    }\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n * @namespace Chart.helpers.clear\n * @deprecated since version 2.7.0\n\n * @private\n */\nhelpers.clear = exports.clear;\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n * @namespace Chart.helpers.drawRoundedRectangle\n * @deprecated since version 2.7.0\n\n * @private\n */\nhelpers.drawRoundedRectangle = function (ctx) {\n    ctx.beginPath();\n    exports.roundedRect.apply(exports, arguments);\n    ctx.closePath();\n};\n\n},{\"42\":42}],42:[function (require,module,exports) {\n'use strict';\n\n/**\n * @namespace Chart.helpers\n */\nvar helpers = {\n    /**\n     * An empty function that can be used, for example, for optional callback.\n     */\n    noop: function () {},\n\n    /**\n     * Returns a unique id, sequentially generated from a global variable.\n     * @returns {Number}\n     * @function\n     */\n    uid: (function () {\n        var id = 0;\n        return function () {\n            return id++;\n        };\n    }()),\n\n    /**\n     * Returns true if `value` is neither null nor undefined, else returns false.\n     * @param {*} value - The value to test.\n     * @returns {Boolean}\n     * @since 2.7.0\n     */\n    isNullOrUndef: function (value) {\n        return value === null || typeof value === 'undefined';\n    },\n\n    /**\n     * Returns true if `value` is an array, else returns false.\n     * @param {*} value - The value to test.\n     * @returns {Boolean}\n     * @function\n     */\n    isArray: Array.isArray ? Array.isArray : function (value) {\n        return Object.prototype.toString.call(value) === '[object Array]';\n    },\n\n    /**\n     * Returns true if `value` is an object (excluding null), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {Boolean}\n     * @since 2.7.0\n     */\n    isObject: function (value) {\n        return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n    },\n\n    /**\n     * Returns `value` if defined, else returns `defaultValue`.\n     * @param {*} value - The value to return if defined.\n     * @param {*} defaultValue - The value to return if `value` is undefined.\n     * @returns {*}\n     */\n    valueOrDefault: function (value, defaultValue) {\n        return typeof value === 'undefined' ? defaultValue : value;\n    },\n\n    /**\n     * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n     * @param {Array} value - The array to lookup for value at `index`.\n     * @param {Number} index - The index in `value` to lookup for value.\n     * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n     * @returns {*}\n     */\n    valueAtIndexOrDefault: function (value, index, defaultValue) {\n        return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n    },\n\n    /**\n     * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n     * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n     * @param {Function} fn - The function to call.\n     * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n     * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @returns {*}\n     */\n    callback: function (fn, args, thisArg) {\n        if (fn && typeof fn.call === 'function') {\n            return fn.apply(thisArg, args);\n        }\n    },\n\n    /**\n     * Note(SB) for performance sake, this method should only be used when loopable type\n     * is unknown or in none intensive code (not called often and small loopable). Else\n     * it's preferable to use a regular for() loop and save extra function calls.\n     * @param {Object|Array} loopable - The object or array to be iterated.\n     * @param {Function} fn - The function to call for each item.\n     * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @param {Boolean} [reverse] - If true, iterates backward on the loopable.\n     */\n    each: function (loopable, fn, thisArg, reverse) {\n        var i, len, keys;\n        if (helpers.isArray(loopable)) {\n            len = loopable.length;\n            if (reverse) {\n                for (i = len - 1; i >= 0; i--) {\n                    fn.call(thisArg, loopable[i], i);\n                }\n            } else {\n                for (i = 0; i < len; i++) {\n                    fn.call(thisArg, loopable[i], i);\n                }\n            }\n        } else if (helpers.isObject(loopable)) {\n            keys = Object.keys(loopable);\n            len = keys.length;\n            for (i = 0; i < len; i++) {\n                fn.call(thisArg, loopable[keys[i]], keys[i]);\n            }\n        }\n    },\n\n    /**\n     * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n     * @see http://stackoverflow.com/a/14853974\n     * @param {Array} a0 - The array to compare\n     * @param {Array} a1 - The array to compare\n     * @returns {Boolean}\n     */\n    arrayEquals: function (a0, a1) {\n        var i, ilen, v0, v1;\n\n        if (!a0 || !a1 || a0.length !== a1.length) {\n            return false;\n        }\n\n        for (i = 0, ilen = a0.length; i < ilen; ++i) {\n            v0 = a0[i];\n            v1 = a1[i];\n\n            if (v0 instanceof Array && v1 instanceof Array) {\n                if (!helpers.arrayEquals(v0, v1)) {\n                    return false;\n                }\n            } else if (v0 !== v1) {\n                // NOTE: two different object instances will never be equal: {x:20} != {x:20}\n                return false;\n            }\n        }\n\n        return true;\n    },\n\n    /**\n     * Returns a deep copy of `source` without keeping references on objects and arrays.\n     * @param {*} source - The value to clone.\n     * @returns {*}\n     */\n    clone: function (source) {\n        if (helpers.isArray(source)) {\n            return source.map(helpers.clone);\n        }\n\n        if (helpers.isObject(source)) {\n            var target = {};\n            var keys = Object.keys(source);\n            var klen = keys.length;\n            var k = 0;\n\n            for (; k < klen; ++k) {\n                target[keys[k]] = helpers.clone(source[keys[k]]);\n            }\n\n            return target;\n        }\n\n        return source;\n    },\n\n    /**\n     * The default merger when Chart.helpers.merge is called without merger option.\n     * Note(SB): this method is also used by configMerge and scaleMerge as fallback.\n     * @private\n     */\n    _merger: function (key, target, source, options) {\n        var tval = target[key];\n        var sval = source[key];\n\n        if (helpers.isObject(tval) && helpers.isObject(sval)) {\n            helpers.merge(tval, sval, options);\n        } else {\n            target[key] = helpers.clone(sval);\n        }\n    },\n\n    /**\n     * Merges source[key] in target[key] only if target[key] is undefined.\n     * @private\n     */\n    _mergerIf: function (key, target, source) {\n        var tval = target[key];\n        var sval = source[key];\n\n        if (helpers.isObject(tval) && helpers.isObject(sval)) {\n            helpers.mergeIf(tval, sval);\n        } else if (!target.hasOwnProperty(key)) {\n            target[key] = helpers.clone(sval);\n        }\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` with the given `options`.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {Object} target - The target object in which all sources are merged into.\n     * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n     * @param {Object} [options] - Merging options:\n     * @param {Function} [options.merger] - The merge method (key, target, source, options)\n     * @returns {Object} The `target` object.\n     */\n    merge: function (target, source, options) {\n        var sources = helpers.isArray(source) ? source : [source];\n        var ilen = sources.length;\n        var merge, i, keys, klen, k;\n\n        if (!helpers.isObject(target)) {\n            return target;\n        }\n\n        options = options || {};\n        merge = options.merger || helpers._merger;\n\n        for (i = 0; i < ilen; ++i) {\n            source = sources[i];\n            if (!helpers.isObject(source)) {\n                continue;\n            }\n\n            keys = Object.keys(source);\n            for (k = 0, klen = keys.length; k < klen; ++k) {\n                merge(keys[k], target, source, options);\n            }\n        }\n\n        return target;\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {Object} target - The target object in which all sources are merged into.\n     * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n     * @returns {Object} The `target` object.\n     */\n    mergeIf: function (target, source) {\n        return helpers.merge(target, source, {merger: helpers._mergerIf});\n    },\n\n    /**\n     * Applies the contents of two or more objects together into the first object.\n     * @param {Object} target - The target object in which all objects are merged into.\n     * @param {Object} arg1 - Object containing additional properties to merge in target.\n     * @param {Object} argN - Additional objects containing properties to merge in target.\n     * @returns {Object} The `target` object.\n     */\n    extend: function (target) {\n        var setFn = function (value, key) {\n            target[key] = value;\n        };\n        for (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n            helpers.each(arguments[i], setFn);\n        }\n        return target;\n    },\n\n    /**\n     * Basic javascript inheritance based on the model created in Backbone.js\n     */\n    inherits: function (extensions) {\n        var me = this;\n        var ChartElement = (extensions && extensions.hasOwnProperty('constructor')) ? extensions.constructor : function () {\n            return me.apply(this, arguments);\n        };\n\n        var Surrogate = function () {\n            this.constructor = ChartElement;\n        };\n\n        Surrogate.prototype = me.prototype;\n        ChartElement.prototype = new Surrogate();\n        ChartElement.extend = helpers.inherits;\n\n        if (extensions) {\n            helpers.extend(ChartElement.prototype, extensions);\n        }\n\n        ChartElement.__super__ = me.prototype;\n        return ChartElement;\n    }\n};\n\nmodule.exports = helpers;\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.callback instead.\n * @function Chart.helpers.callCallback\n * @deprecated since version 2.6.0\n\n * @private\n */\nhelpers.callCallback = helpers.callback;\n\n/**\n * Provided for backward compatibility, use Array.prototype.indexOf instead.\n * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n * @function Chart.helpers.indexOf\n * @deprecated since version 2.7.0\n\n * @private\n */\nhelpers.indexOf = function (array, item, fromIndex) {\n    return Array.prototype.indexOf.call(array, item, fromIndex);\n};\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n * @function Chart.helpers.getValueOrDefault\n * @deprecated since version 2.7.0\n\n * @private\n */\nhelpers.getValueOrDefault = helpers.valueOrDefault;\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n * @function Chart.helpers.getValueAtIndexOrDefault\n * @deprecated since version 2.7.0\n\n * @private\n */\nhelpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\n},{}],43:[function (require,module,exports) {\n'use strict';\n\nvar helpers = require(42);\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easingEffects\n * @see http://www.robertpenner.com/easing/\n */\nvar effects = {\n    linear: function (t) {\n        return t;\n    },\n\n    easeInQuad: function (t) {\n        return t * t;\n    },\n\n    easeOutQuad: function (t) {\n        return -t * (t - 2);\n    },\n\n    easeInOutQuad: function (t) {\n        if ((t /= 0.5) < 1) {\n            return 0.5 * t * t;\n        }\n        return -0.5 * ((--t) * (t - 2) - 1);\n    },\n\n    easeInCubic: function (t) {\n        return t * t * t;\n    },\n\n    easeOutCubic: function (t) {\n        return (t = t - 1) * t * t + 1;\n    },\n\n    easeInOutCubic: function (t) {\n        if ((t /= 0.5) < 1) {\n            return 0.5 * t * t * t;\n        }\n        return 0.5 * ((t -= 2) * t * t + 2);\n    },\n\n    easeInQuart: function (t) {\n        return t * t * t * t;\n    },\n\n    easeOutQuart: function (t) {\n        return -((t = t - 1) * t * t * t - 1);\n    },\n\n    easeInOutQuart: function (t) {\n        if ((t /= 0.5) < 1) {\n            return 0.5 * t * t * t * t;\n        }\n        return -0.5 * ((t -= 2) * t * t * t - 2);\n    },\n\n    easeInQuint: function (t) {\n        return t * t * t * t * t;\n    },\n\n    easeOutQuint: function (t) {\n        return (t = t - 1) * t * t * t * t + 1;\n    },\n\n    easeInOutQuint: function (t) {\n        if ((t /= 0.5) < 1) {\n            return 0.5 * t * t * t * t * t;\n        }\n        return 0.5 * ((t -= 2) * t * t * t * t + 2);\n    },\n\n    easeInSine: function (t) {\n        return -Math.cos(t * (Math.PI / 2)) + 1;\n    },\n\n    easeOutSine: function (t) {\n        return Math.sin(t * (Math.PI / 2));\n    },\n\n    easeInOutSine: function (t) {\n        return -0.5 * (Math.cos(Math.PI * t) - 1);\n    },\n\n    easeInExpo: function (t) {\n        return (t === 0) ? 0 : Math.pow(2, 10 * (t - 1));\n    },\n\n    easeOutExpo: function (t) {\n        return (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1;\n    },\n\n    easeInOutExpo: function (t) {\n        if (t === 0) {\n            return 0;\n        }\n        if (t === 1) {\n            return 1;\n        }\n        if ((t /= 0.5) < 1) {\n            return 0.5 * Math.pow(2, 10 * (t - 1));\n        }\n        return 0.5 * (-Math.pow(2, -10 * --t) + 2);\n    },\n\n    easeInCirc: function (t) {\n        if (t >= 1) {\n            return t;\n        }\n        return -(Math.sqrt(1 - t * t) - 1);\n    },\n\n    easeOutCirc: function (t) {\n        return Math.sqrt(1 - (t = t - 1) * t);\n    },\n\n    easeInOutCirc: function (t) {\n        if ((t /= 0.5) < 1) {\n            return -0.5 * (Math.sqrt(1 - t * t) - 1);\n        }\n        return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n    },\n\n    easeInElastic: function (t) {\n        var s = 1.70158;\n        var p = 0;\n        var a = 1;\n        if (t === 0) {\n            return 0;\n        }\n        if (t === 1) {\n            return 1;\n        }\n        if (!p) {\n            p = 0.3;\n        }\n        if (a < 1) {\n            a = 1;\n            s = p / 4;\n        } else {\n            s = p / (2 * Math.PI) * Math.asin(1 / a);\n        }\n        return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n    },\n\n    easeOutElastic: function (t) {\n        var s = 1.70158;\n        var p = 0;\n        var a = 1;\n        if (t === 0) {\n            return 0;\n        }\n        if (t === 1) {\n            return 1;\n        }\n        if (!p) {\n            p = 0.3;\n        }\n        if (a < 1) {\n            a = 1;\n            s = p / 4;\n        } else {\n            s = p / (2 * Math.PI) * Math.asin(1 / a);\n        }\n        return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n    },\n\n    easeInOutElastic: function (t) {\n        var s = 1.70158;\n        var p = 0;\n        var a = 1;\n        if (t === 0) {\n            return 0;\n        }\n        if ((t /= 0.5) === 2) {\n            return 1;\n        }\n        if (!p) {\n            p = 0.45;\n        }\n        if (a < 1) {\n            a = 1;\n            s = p / 4;\n        } else {\n            s = p / (2 * Math.PI) * Math.asin(1 / a);\n        }\n        if (t < 1) {\n            return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n        }\n        return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n    },\n    easeInBack: function (t) {\n        var s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n\n    easeOutBack: function (t) {\n        var s = 1.70158;\n        return (t = t - 1) * t * ((s + 1) * t + s) + 1;\n    },\n\n    easeInOutBack: function (t) {\n        var s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n    },\n\n    easeInBounce: function (t) {\n        return 1 - effects.easeOutBounce(1 - t);\n    },\n\n    easeOutBounce: function (t) {\n        if (t < (1 / 2.75)) {\n            return 7.5625 * t * t;\n        }\n        if (t < (2 / 2.75)) {\n            return 7.5625 * (t -= (1.5 / 2.75)) * t + 0.75;\n        }\n        if (t < (2.5 / 2.75)) {\n            return 7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375;\n        }\n        return 7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375;\n    },\n\n    easeInOutBounce: function (t) {\n        if (t < 0.5) {\n            return effects.easeInBounce(t * 2) * 0.5;\n        }\n        return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n    }\n};\n\nmodule.exports = {\n    effects: effects\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n * @function Chart.helpers.easingEffects\n * @deprecated since version 2.7.0\n\n * @private\n */\nhelpers.easingEffects = effects;\n\n},{\"42\":42}],44:[function (require,module,exports) {\n'use strict';\n\nvar helpers = require(42);\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\nmodule.exports = {\n    /**\n     * Converts the given line height `value` in pixels for a specific font `size`.\n     * @param {Number|String} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n     * @param {Number} size - The font size (in pixels) used to resolve relative `value`.\n     * @returns {Number} The effective line height in pixels (size * 1.2 if value is invalid).\n     * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n     * @since 2.7.0\n     */\n    toLineHeight: function (value, size) {\n        var matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n        if (!matches || matches[1] === 'normal') {\n            return size * 1.2;\n        }\n\n        value = +matches[2];\n\n        switch (matches[3]) {\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n        default:\n            break;\n        }\n\n        return size * value;\n    },\n\n    /**\n     * Converts the given value into a padding object with pre-computed width/height.\n     * @param {Number|Object} value - If a number, set the value to all TRBL component,\n     *  else, if and object, use defined properties and sets undefined ones to 0.\n     * @returns {Object} The padding values (top, right, bottom, left, width, height)\n     * @since 2.7.0\n     */\n    toPadding: function (value) {\n        var t, r, b, l;\n\n        if (helpers.isObject(value)) {\n            t = +value.top || 0;\n            r = +value.right || 0;\n            b = +value.bottom || 0;\n            l = +value.left || 0;\n        } else {\n            t = r = b = l = +value || 0;\n        }\n\n        return {\n            top: t,\n            right: r,\n            bottom: b,\n            left: l,\n            height: t + b,\n            width: l + r\n        };\n    },\n\n    /**\n     * Evaluates the given `inputs` sequentially and returns the first defined value.\n     * @param {Array[]} inputs - An array of values, falling back to the last value.\n     * @param {Object} [context] - If defined and the current value is a function, the value\n     * is called with `context` as first argument and the result becomes the new input.\n     * @param {Number} [index] - If defined and the current value is an array, the value\n     * at `index` become the new input.\n     * @since 2.7.0\n     */\n    resolve: function (inputs, context, index) {\n        var i, ilen, value;\n\n        for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n            value = inputs[i];\n            if (value === undefined) {\n                continue;\n            }\n            if (context !== undefined && typeof value === 'function') {\n                value = value(context);\n            }\n            if (index !== undefined && helpers.isArray(value)) {\n                value = value[index];\n            }\n            if (value !== undefined) {\n                return value;\n            }\n        }\n    }\n};\n\n},{\"42\":42}],45:[function (require,module,exports) {\n'use strict';\n\nmodule.exports = require(42);\nmodule.exports.easing = require(43);\nmodule.exports.canvas = require(41);\nmodule.exports.options = require(44);\n\n},{\"41\":41,\"42\":42,\"43\":43,\"44\":44}],46:[function (require,module,exports) {\n/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nmodule.exports = {\n    acquireContext: function (item) {\n        if (item && item.canvas) {\n            // Support for any object associated to a canvas (including a context2d)\n            item = item.canvas;\n        }\n\n        return item && item.getContext('2d') || null;\n    }\n};\n\n},{}],47:[function (require,module,exports) {\n/**\n * Chart.Platform implementation for targeting a web browser\n */\n\n'use strict';\n\nvar helpers = require(45);\n\nvar EXPANDO_KEY = '$chartjs';\nvar CSS_PREFIX = 'chartjs-';\nvar CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\nvar CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\nvar ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nvar EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns {Number} Size in pixels or undefined if unknown.\n */\nfunction readUsedSize(element, property)\n{\n    var value = helpers.getStyle(element, property);\n    var matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? Number(matches[1]) : undefined;\n}\n\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n */\nfunction initCanvas(canvas, config)\n{\n    var style = canvas.style;\n\n    // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n    // returns null or '' if no explicit value has been set to the canvas attribute.\n    var renderHeight = canvas.getAttribute('height');\n    var renderWidth = canvas.getAttribute('width');\n\n    // Chart.js modifies some canvas values that we want to restore on destroy\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n\n    // Force canvas to display as block to avoid extra space caused by inline\n    // elements, which would interfere with the responsive resize process.\n    // https://github.com/chartjs/Chart.js/issues/2538\n    style.display = style.display || 'block';\n\n    if (renderWidth === null || renderWidth === '') {\n        var displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n\n    if (renderHeight === null || renderHeight === '') {\n        if (canvas.style.height === '') {\n            // If no explicit render height and style height, let's apply the aspect ratio,\n            // which one can be specified by the user but also by charts as default option\n            // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n            canvas.height = canvas.width / (config.options.aspectRatio || 2);\n        } else {\n            var displayHeight = readUsedSize(canvas, 'height');\n            if (displayWidth !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n\n    return canvas;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nvar supportsEventListenerOptions = (function () {\n    var supports = false;\n    try {\n        var options = Object.defineProperty({}, 'passive', {\n            get: function () {\n                supports = true;\n            }\n        });\n        window.addEventListener('e', null, options);\n    } catch (e) {\n        // continue regardless of error\n    }\n    return supports;\n}());\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nvar eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addEventListener(node, type, listener)\n{\n    node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeEventListener(node, type, listener)\n{\n    node.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction createEvent(type, chart, x, y, nativeEvent)\n{\n    return {\n        type: type,\n        chart: chart,\n        native: nativeEvent || null,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null,\n    };\n}\n\nfunction fromNativeEvent(event, chart)\n{\n    var type = EVENT_TYPES[event.type] || event.type;\n    var pos = helpers.getRelativePosition(event, chart);\n    return createEvent(type, chart, pos.x, pos.y, event);\n}\n\nfunction throttled(fn, thisArg)\n{\n    var ticking = false;\n    var args = [];\n\n    return function () {\n        args = Array.prototype.slice.call(arguments);\n        thisArg = thisArg || this;\n\n        if (!ticking) {\n            ticking = true;\n            helpers.requestAnimFrame.call(window, function () {\n                ticking = false;\n                fn.apply(thisArg, args);\n            });\n        }\n    };\n}\n\n// Implementation based on https://github.com/marcj/css-element-queries\nfunction createResizer(handler)\n{\n    var resizer = document.createElement('div');\n    var cls = CSS_PREFIX + 'size-monitor';\n    var maxSize = 1000000;\n    var style =\n        'position:absolute;' +\n        'left:0;' +\n        'top:0;' +\n        'right:0;' +\n        'bottom:0;' +\n        'overflow:hidden;' +\n        'pointer-events:none;' +\n        'visibility:hidden;' +\n        'z-index:-1;';\n\n    resizer.style.cssText = style;\n    resizer.className = cls;\n    resizer.innerHTML =\n        '<div class=\"' + cls + '-expand\" style=\"' + style + '\">' +\n            '<div style=\"' +\n                'position:absolute;' +\n                'width:' + maxSize + 'px;' +\n                'height:' + maxSize + 'px;' +\n                'left:0;' +\n                'top:0\">' +\n            '</div>' +\n        '</div>' +\n        '<div class=\"' + cls + '-shrink\" style=\"' + style + '\">' +\n            '<div style=\"' +\n                'position:absolute;' +\n                'width:200%;' +\n                'height:200%;' +\n                'left:0; ' +\n                'top:0\">' +\n            '</div>' +\n        '</div>';\n\n    var expand = resizer.childNodes[0];\n    var shrink = resizer.childNodes[1];\n\n    resizer._reset = function () {\n        expand.scrollLeft = maxSize;\n        expand.scrollTop = maxSize;\n        shrink.scrollLeft = maxSize;\n        shrink.scrollTop = maxSize;\n    };\n    var onScroll = function () {\n        resizer._reset();\n        handler();\n    };\n\n    addEventListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n    addEventListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n\n    return resizer;\n}\n\n// https://davidwalsh.name/detect-node-insertion\nfunction watchForRender(node, handler)\n{\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n    var proxy = expando.renderProxy = function (e) {\n        if (e.animationName === CSS_RENDER_ANIMATION) {\n            handler();\n        }\n    };\n\n    helpers.each(ANIMATION_START_EVENTS, function (type) {\n        addEventListener(node, type, proxy);\n    });\n\n    // #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n    // is removed then added back immediately (same animation frame?). Accessing the\n    // `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n    // https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n    // https://github.com/chartjs/Chart.js/issues/4737\n    expando.reflow = !!node.offsetParent;\n\n    node.classList.add(CSS_RENDER_MONITOR);\n}\n\nfunction unwatchForRender(node)\n{\n    var expando = node[EXPANDO_KEY] || {};\n    var proxy = expando.renderProxy;\n\n    if (proxy) {\n        helpers.each(ANIMATION_START_EVENTS, function (type) {\n            removeEventListener(node, type, proxy);\n        });\n\n        delete expando.renderProxy;\n    }\n\n    node.classList.remove(CSS_RENDER_MONITOR);\n}\n\nfunction addResizeListener(node, listener, chart)\n{\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n    // Let's keep track of this added resizer and thus avoid DOM query when removing it.\n    var resizer = expando.resizer = createResizer(throttled(function () {\n        if (expando.resizer) {\n            return listener(createEvent('resize', chart));\n        }\n    }));\n\n    // The resizer needs to be attached to the node parent, so we first need to be\n    // sure that `node` is attached to the DOM before injecting the resizer element.\n    watchForRender(node, function () {\n        if (expando.resizer) {\n            var container = node.parentNode;\n            if (container && container !== resizer.parentNode) {\n                container.insertBefore(resizer, container.firstChild);\n            }\n\n            // The container size might have changed, let's reset the resizer state.\n            resizer._reset();\n        }\n    });\n}\n\nfunction removeResizeListener(node)\n{\n    var expando = node[EXPANDO_KEY] || {};\n    var resizer = expando.resizer;\n\n    delete expando.resizer;\n    unwatchForRender(node);\n\n    if (resizer && resizer.parentNode) {\n        resizer.parentNode.removeChild(resizer);\n    }\n}\n\nfunction injectCSS(platform, css)\n{\n    // http://stackoverflow.com/q/3922139\n    var style = platform._style || document.createElement('style');\n    if (!platform._style) {\n        platform._style = style;\n        css = '/* Chart.js */\\n' + css;\n        style.setAttribute('type', 'text/css');\n        document.getElementsByTagName('head')[0].appendChild(style);\n    }\n\n    style.appendChild(document.createTextNode(css));\n}\n\nmodule.exports = {\n    /**\n     * This property holds whether this platform is enabled for the current environment.\n     * Currently used by platform.js to select the proper implementation.\n     * @private\n     */\n    _enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n    initialize: function () {\n        var keyframes = 'from{opacity:0.99}to{opacity:1}';\n\n        injectCSS(\n            this,\n            // DOM rendering detection\n            // https://davidwalsh.name/detect-node-insertion\n            '@-webkit-keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +\n            '@keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +\n            '.' + CSS_RENDER_MONITOR + '{' +\n                '-webkit-animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +\n                'animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +\n            '}'\n        );\n    },\n\n    acquireContext: function (item, config) {\n        if (typeof item === 'string') {\n            item = document.getElementById(item);\n        } else if (item.length) {\n            // Support for array based queries (such as jQuery)\n            item = item[0];\n        }\n\n        if (item && item.canvas) {\n            // Support for any object associated to a canvas (including a context2d)\n            item = item.canvas;\n        }\n\n        // To prevent canvas fingerprinting, some add-ons undefine the getContext\n        // method, for example: https://github.com/kkapsner/CanvasBlocker\n        // https://github.com/chartjs/Chart.js/issues/2807\n        var context = item && item.getContext && item.getContext('2d');\n\n        // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n        // inside an iframe or when running in a protected environment. We could guess the\n        // types from their toString() value but let's keep things flexible and assume it's\n        // a sufficient condition if the item has a context2D which has item as `canvas`.\n        // https://github.com/chartjs/Chart.js/issues/3887\n        // https://github.com/chartjs/Chart.js/issues/4102\n        // https://github.com/chartjs/Chart.js/issues/4152\n        if (context && context.canvas === item) {\n            initCanvas(item, config);\n            return context;\n        }\n\n        return null;\n    },\n\n    releaseContext: function (context) {\n        var canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return;\n        }\n\n        var initial = canvas[EXPANDO_KEY].initial;\n        ['height', 'width'].forEach(function (prop) {\n            var value = initial[prop];\n            if (helpers.isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n\n        helpers.each(initial.style || {}, function (value, key) {\n            canvas.style[key] = value;\n        });\n\n        // The canvas render size might have been changed (and thus the state stack discarded),\n        // we can't use save() and restore() to restore the initial state. So make sure that at\n        // least the canvas context is reset to the default state by setting the canvas width.\n        // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n        canvas.width = canvas.width;\n\n        delete canvas[EXPANDO_KEY];\n    },\n\n    addEventListener: function (chart, type, listener) {\n        var canvas = chart.canvas;\n        if (type === 'resize') {\n            // Note: the resize event is not supported on all browsers.\n            addResizeListener(canvas, listener, chart);\n            return;\n        }\n\n        var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n        var proxies = expando.proxies || (expando.proxies = {});\n        var proxy = proxies[chart.id + '_' + type] = function (event) {\n            listener(fromNativeEvent(event, chart));\n        };\n\n        addEventListener(canvas, type, proxy);\n    },\n\n    removeEventListener: function (chart, type, listener) {\n        var canvas = chart.canvas;\n        if (type === 'resize') {\n            // Note: the resize event is not supported on all browsers.\n            removeResizeListener(canvas, listener);\n            return;\n        }\n\n        var expando = listener[EXPANDO_KEY] || {};\n        var proxies = expando.proxies || {};\n        var proxy = proxies[chart.id + '_' + type];\n        if (!proxy) {\n            return;\n        }\n\n        removeEventListener(canvas, type, proxy);\n    }\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use EventTarget.addEventListener instead.\n * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n * @function Chart.helpers.addEvent\n * @deprecated since version 2.7.0\n\n * @private\n */\nhelpers.addEvent = addEventListener;\n\n/**\n * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n * @function Chart.helpers.removeEvent\n * @deprecated since version 2.7.0\n\n * @private\n */\nhelpers.removeEvent = removeEventListener;\n\n},{\"45\":45}],48:[function (require,module,exports) {\n'use strict';\n\nvar helpers = require(45);\nvar basic = require(46);\nvar dom = require(47);\n\nvar implementation = dom._enabled ? dom : basic;\n\n/**\n * @namespace Chart.platform\n * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n * @since 2.4.0\n */\nmodule.exports = helpers.extend({\n    /**\n     * @since 2.7.0\n     */\n    initialize: function () {},\n\n    /**\n     * Called at chart construction time, returns a context2d instance implementing\n     * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n     * @param {*} item - The native item from which to acquire context (platform specific)\n     * @param {Object} options - The chart options\n     * @returns {CanvasRenderingContext2D} context2d instance\n     */\n    acquireContext: function () {},\n\n    /**\n     * Called at chart destruction time, releases any resources associated to the context\n     * previously returned by the acquireContext() method.\n     * @param {CanvasRenderingContext2D} context - The context2d instance\n     * @returns {Boolean} true if the method succeeded, else false\n     */\n    releaseContext: function () {},\n\n    /**\n     * Registers the specified listener on the given chart.\n     * @param {Chart} chart - Chart from which to listen for event\n     * @param {String} type - The ({@link IEvent}) type to listen for\n     * @param {Function} listener - Receives a notification (an object that implements\n     * the {@link IEvent} interface) when an event of the specified type occurs.\n     */\n    addEventListener: function () {},\n\n    /**\n     * Removes the specified listener previously registered with addEventListener.\n     * @param {Chart} chart -Chart from which to remove the listener\n     * @param {String} type - The ({@link IEvent}) type to remove\n     * @param {Function} listener - The listener function to remove from the event target.\n     */\n    removeEventListener: function () {}\n\n}, implementation);\n\n/**\n * @interface IPlatform\n * Allows abstracting platform dependencies away from the chart\n * @borrows Chart.platform.acquireContext as acquireContext\n * @borrows Chart.platform.releaseContext as releaseContext\n * @borrows Chart.platform.addEventListener as addEventListener\n * @borrows Chart.platform.removeEventListener as removeEventListener\n */\n\n/**\n * @interface IEvent\n * @prop {String} type - The event type name, possible values are:\n * 'contextmenu', 'mouseenter', 'mousedown', 'mousemove', 'mouseup', 'mouseout',\n * 'click', 'dblclick', 'keydown', 'keypress', 'keyup' and 'resize'\n * @prop {*} native - The original native event (null for emulated events, e.g. 'resize')\n * @prop {Number} x - The mouse x position, relative to the canvas (null for incompatible events)\n * @prop {Number} y - The mouse y position, relative to the canvas (null for incompatible events)\n */\n\n},{\"45\":45,\"46\":46,\"47\":47}],49:[function (require,module,exports) {\n'use strict';\n\nmodule.exports = {};\nmodule.exports.filler = require(50);\nmodule.exports.legend = require(51);\nmodule.exports.title = require(52);\n\n},{\"50\":50,\"51\":51,\"52\":52}],50:[function (require,module,exports) {\n/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\n'use strict';\n\nvar defaults = require(25);\nvar elements = require(40);\nvar helpers = require(45);\n\ndefaults._set('global', {\n    plugins: {\n        filler: {\n            propagate: true\n        }\n    }\n});\n\nvar mappers = {\n    dataset: function (source) {\n        var index = source.fill;\n        var chart = source.chart;\n        var meta = chart.getDatasetMeta(index);\n        var visible = meta && chart.isDatasetVisible(index);\n        var points = (visible && meta.dataset._children) || [];\n        var length = points.length || 0;\n\n        return !length ? null : function (point, i) {\n            return (i < length && points[i]._view) || null;\n        };\n    },\n\n    boundary: function (source) {\n        var boundary = source.boundary;\n        var x = boundary ? boundary.x : null;\n        var y = boundary ? boundary.y : null;\n\n        return function (point) {\n            return {\n                x: x === null ? point.x : x,\n                y: y === null ? point.y : y,\n            };\n        };\n    }\n};\n\nfunction decodeFill(el, index, count)\n{\n    var model = el._model || {};\n    var fill = model.fill;\n    var target;\n\n    if (fill === undefined) {\n        fill = !!model.backgroundColor;\n    }\n\n    if (fill === false || fill === null) {\n        return false;\n    }\n\n    if (fill === true) {\n        return 'origin';\n    }\n\n    target = parseFloat(fill, 10);\n    if (isFinite(target) && Math.floor(target) === target) {\n        if (fill[0] === '-' || fill[0] === '+') {\n            target = index + target;\n        }\n\n        if (target === index || target < 0 || target >= count) {\n            return false;\n        }\n\n        return target;\n    }\n\n    switch (fill) {\n    // compatibility\n    case 'bottom':\n        return 'start';\n    case 'top':\n        return 'end';\n    case 'zero':\n        return 'origin';\n    // supported boundaries\n    case 'origin':\n    case 'start':\n    case 'end':\n        return fill;\n    // invalid fill values\n    default:\n        return false;\n    }\n}\n\nfunction computeBoundary(source)\n{\n    var model = source.el._model || {};\n    var scale = source.el._scale || {};\n    var fill = source.fill;\n    var target = null;\n    var horizontal;\n\n    if (isFinite(fill)) {\n        return null;\n    }\n\n    // Backward compatibility: until v3, we still need to support boundary values set on\n    // the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n    // controllers might still use it (e.g. the Smith chart).\n\n    if (fill === 'start') {\n        target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n    } else if (fill === 'end') {\n        target = model.scaleTop === undefined ? scale.top : model.scaleTop;\n    } else if (model.scaleZero !== undefined) {\n        target = model.scaleZero;\n    } else if (scale.getBasePosition) {\n        target = scale.getBasePosition();\n    } else if (scale.getBasePixel) {\n        target = scale.getBasePixel();\n    }\n\n    if (target !== undefined && target !== null) {\n        if (target.x !== undefined && target.y !== undefined) {\n            return target;\n        }\n\n        if (typeof target === 'number' && isFinite(target)) {\n            horizontal = scale.isHorizontal();\n            return {\n                x: horizontal ? target : null,\n                y: horizontal ? null : target\n            };\n        }\n    }\n\n    return null;\n}\n\nfunction resolveTarget(sources, index, propagate)\n{\n    var source = sources[index];\n    var fill = source.fill;\n    var visited = [index];\n    var target;\n\n    if (!propagate) {\n        return fill;\n    }\n\n    while (fill !== false && visited.indexOf(fill) === -1) {\n        if (!isFinite(fill)) {\n            return fill;\n        }\n\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n\n        if (target.visible) {\n            return fill;\n        }\n\n        visited.push(fill);\n        fill = target.fill;\n    }\n\n    return false;\n}\n\nfunction createMapper(source)\n{\n    var fill = source.fill;\n    var type = 'dataset';\n\n    if (fill === false) {\n        return null;\n    }\n\n    if (!isFinite(fill)) {\n        type = 'boundary';\n    }\n\n    return mappers[type](source);\n}\n\nfunction isDrawable(point)\n{\n    return point && !point.skip;\n}\n\nfunction drawArea(ctx, curve0, curve1, len0, len1)\n{\n    var i;\n\n    if (!len0 || !len1) {\n        return;\n    }\n\n    // building first area curve (normal)\n    ctx.moveTo(curve0[0].x, curve0[0].y);\n    for (i = 1; i < len0; ++i) {\n        helpers.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n    }\n\n    // joining the two area curves\n    ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y);\n\n    // building opposite area curve (reverse)\n    for (i = len1 - 1; i > 0; --i) {\n        helpers.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n    }\n}\n\nfunction doFill(ctx, points, mapper, view, color, loop)\n{\n    var count = points.length;\n    var span = view.spanGaps;\n    var curve0 = [];\n    var curve1 = [];\n    var len0 = 0;\n    var len1 = 0;\n    var i, ilen, index, p0, p1, d0, d1;\n\n    ctx.beginPath();\n\n    for (i = 0, ilen = (count + !!loop); i < ilen; ++i) {\n        index = i % count;\n        p0 = points[index]._view;\n        p1 = mapper(p0, index, view);\n        d0 = isDrawable(p0);\n        d1 = isDrawable(p1);\n\n        if (d0 && d1) {\n            len0 = curve0.push(p0);\n            len1 = curve1.push(p1);\n        } else if (len0 && len1) {\n            if (!span) {\n                drawArea(ctx, curve0, curve1, len0, len1);\n                len0 = len1 = 0;\n                curve0 = [];\n                curve1 = [];\n            } else {\n                if (d0) {\n                    curve0.push(p0);\n                }\n                if (d1) {\n                    curve1.push(p1);\n                }\n            }\n        }\n    }\n\n    drawArea(ctx, curve0, curve1, len0, len1);\n\n    ctx.closePath();\n    ctx.fillStyle = color;\n    ctx.fill();\n}\n\nmodule.exports = {\n    id: 'filler',\n\n    afterDatasetsUpdate: function (chart, options) {\n        var count = (chart.data.datasets || []).length;\n        var propagate = options.propagate;\n        var sources = [];\n        var meta, i, el, source;\n\n        for (i = 0; i < count; ++i) {\n            meta = chart.getDatasetMeta(i);\n            el = meta.dataset;\n            source = null;\n\n            if (el && el._model && el instanceof elements.Line) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    fill: decodeFill(el, i, count),\n                    chart: chart,\n                    el: el\n                };\n            }\n\n            meta.$filler = source;\n            sources.push(source);\n        }\n\n        for (i = 0; i < count; ++i) {\n            source = sources[i];\n            if (!source) {\n                continue;\n            }\n\n            source.fill = resolveTarget(sources, i, propagate);\n            source.boundary = computeBoundary(source);\n            source.mapper = createMapper(source);\n        }\n    },\n\n    beforeDatasetDraw: function (chart, args) {\n        var meta = args.meta.$filler;\n        if (!meta) {\n            return;\n        }\n\n        var ctx = chart.ctx;\n        var el = meta.el;\n        var view = el._view;\n        var points = el._children || [];\n        var mapper = meta.mapper;\n        var color = view.backgroundColor || defaults.global.defaultColor;\n\n        if (mapper && color && points.length) {\n            helpers.canvas.clipArea(ctx, chart.chartArea);\n            doFill(ctx, points, mapper, view, color, el._loop);\n            helpers.canvas.unclipArea(ctx);\n        }\n    }\n};\n\n},{\"25\":25,\"40\":40,\"45\":45}],51:[function (require,module,exports) {\n'use strict';\n\nvar defaults = require(25);\nvar Element = require(26);\nvar helpers = require(45);\nvar layouts = require(30);\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n    legend: {\n        display: true,\n        position: 'top',\n        fullWidth: true,\n        reverse: false,\n        weight: 1000,\n\n        // a callback that will handle\n        onClick: function (e, legendItem) {\n            var index = legendItem.datasetIndex;\n            var ci = this.chart;\n            var meta = ci.getDatasetMeta(index);\n\n            // See controller.isDatasetVisible comment\n            meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null;\n\n            // We hid a dataset ... rerender the chart\n            ci.update();\n        },\n\n        onHover: null,\n\n        labels: {\n            boxWidth: 40,\n            padding: 10,\n            // Generates labels shown in the legend\n            // Valid properties to return:\n            // text : text to display\n            // fillStyle : fill of coloured box\n            // strokeStyle: stroke of coloured box\n            // hidden : if this legend item refers to a hidden item\n            // lineCap : cap style for line\n            // lineDash\n            // lineDashOffset :\n            // lineJoin :\n            // lineWidth :\n            generateLabels: function (chart) {\n                var data = chart.data;\n                return helpers.isArray(data.datasets) ? data.datasets.map(function (dataset, i) {\n                    return {\n                        text: dataset.label,\n                        fillStyle: (!helpers.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0]),\n                        hidden: !chart.isDatasetVisible(i),\n                        lineCap: dataset.borderCapStyle,\n                        lineDash: dataset.borderDash,\n                        lineDashOffset: dataset.borderDashOffset,\n                        lineJoin: dataset.borderJoinStyle,\n                        lineWidth: dataset.borderWidth,\n                        strokeStyle: dataset.borderColor,\n                        pointStyle: dataset.pointStyle,\n\n                        // Below is extra data used for toggling the datasets\n                        datasetIndex: i\n                    };\n                }, this) : [];\n            }\n        }\n    },\n\n    legendCallback: function (chart) {\n        var text = [];\n        text.push('<ul class=\"' + chart.id + '-legend\">');\n        for (var i = 0; i < chart.data.datasets.length; i++) {\n            text.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n            if (chart.data.datasets[i].label) {\n                text.push(chart.data.datasets[i].label);\n            }\n            text.push('</li>');\n        }\n        text.push('</ul>');\n        return text.join('');\n    }\n});\n\n/**\n * Helper function to get the box width based on the usePointStyle option\n * @param labelopts {Object} the label options on the legend\n * @param fontSize {Number} the label font size\n * @return {Number} width of the color box area\n */\nfunction getBoxWidth(labelOpts, fontSize)\n{\n    return labelOpts.usePointStyle ?\n        fontSize * Math.SQRT2 :\n        labelOpts.boxWidth;\n}\n\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\nvar Legend = Element.extend({\n\n    initialize: function (config) {\n        helpers.extend(this, config);\n\n        // Contains hit boxes for each dataset (in dataset order)\n        this.legendHitBoxes = [];\n\n        // Are we in doughnut mode which has a different data type\n        this.doughnutMode = false;\n    },\n\n    // These methods are ordered by lifecycle. Utilities then follow.\n    // Any function defined here is inherited by all legend types.\n    // Any function can be extended by the legend type\n\n    beforeUpdate: noop,\n    update: function (maxWidth, maxHeight, margins) {\n        var me = this;\n\n        // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n        me.beforeUpdate();\n\n        // Absorb the master measurements\n        me.maxWidth = maxWidth;\n        me.maxHeight = maxHeight;\n        me.margins = margins;\n\n        // Dimensions\n        me.beforeSetDimensions();\n        me.setDimensions();\n        me.afterSetDimensions();\n        // Labels\n        me.beforeBuildLabels();\n        me.buildLabels();\n        me.afterBuildLabels();\n\n        // Fit\n        me.beforeFit();\n        me.fit();\n        me.afterFit();\n        //\n        me.afterUpdate();\n\n        return me.minSize;\n    },\n    afterUpdate: noop,\n\n    //\n\n    beforeSetDimensions: noop,\n    setDimensions: function () {\n        var me = this;\n        // Set the unconstrained dimension before label rotation\n        if (me.isHorizontal()) {\n            // Reset position before calculating rotation\n            me.width = me.maxWidth;\n            me.left = 0;\n            me.right = me.width;\n        } else {\n            me.height = me.maxHeight;\n\n            // Reset position before calculating rotation\n            me.top = 0;\n            me.bottom = me.height;\n        }\n\n        // Reset padding\n        me.paddingLeft = 0;\n        me.paddingTop = 0;\n        me.paddingRight = 0;\n        me.paddingBottom = 0;\n\n        // Reset minSize\n        me.minSize = {\n            width: 0,\n            height: 0\n        };\n    },\n    afterSetDimensions: noop,\n\n    //\n\n    beforeBuildLabels: noop,\n    buildLabels: function () {\n        var me = this;\n        var labelOpts = me.options.labels || {};\n        var legendItems = helpers.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter(function (item) {\n                return labelOpts.filter(item, me.chart.data);\n            });\n        }\n\n        if (me.options.reverse) {\n            legendItems.reverse();\n        }\n\n        me.legendItems = legendItems;\n    },\n    afterBuildLabels: noop,\n\n    //\n\n    beforeFit: noop,\n    fit: function () {\n        var me = this;\n        var opts = me.options;\n        var labelOpts = opts.labels;\n        var display = opts.display;\n\n        var ctx = me.ctx;\n\n        var globalDefault = defaults.global;\n        var valueOrDefault = helpers.valueOrDefault;\n        var fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n        var fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n        var fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n        var labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\n        // Reset hit boxes\n        var hitboxes = me.legendHitBoxes = [];\n\n        var minSize = me.minSize;\n        var isHorizontal = me.isHorizontal();\n\n        if (isHorizontal) {\n            minSize.width = me.maxWidth; // fill all the width\n            minSize.height = display ? 10 : 0;\n        } else {\n            minSize.width = display ? 10 : 0;\n            minSize.height = me.maxHeight; // fill all the height\n        }\n\n        // Increase sizes here\n        if (display) {\n            ctx.font = labelFont;\n\n            if (isHorizontal) {\n                // Labels\n\n                // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n                var lineWidths = me.lineWidths = [0];\n                var totalHeight = me.legendItems.length ? fontSize + (labelOpts.padding) : 0;\n\n                ctx.textAlign = 'left';\n                ctx.textBaseline = 'top';\n\n                helpers.each(me.legendItems, function (legendItem, i) {\n                    var boxWidth = getBoxWidth(labelOpts, fontSize);\n                    var width = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n                    if (lineWidths[lineWidths.length - 1] + width + labelOpts.padding >= me.width) {\n                        totalHeight += fontSize + (labelOpts.padding);\n                        lineWidths[lineWidths.length] = me.left;\n                    }\n\n                    // Store the hitbox width and height here. Final position will be updated in `draw`\n                    hitboxes[i] = {\n                        left: 0,\n                        top: 0,\n                        width: width,\n                        height: fontSize\n                    };\n\n                    lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n                });\n\n                minSize.height += totalHeight;\n            } else {\n                var vPadding = labelOpts.padding;\n                var columnWidths = me.columnWidths = [];\n                var totalWidth = labelOpts.padding;\n                var currentColWidth = 0;\n                var currentColHeight = 0;\n                var itemHeight = fontSize + vPadding;\n\n                helpers.each(me.legendItems, function (legendItem, i) {\n                    var boxWidth = getBoxWidth(labelOpts, fontSize);\n                    var itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n                    // If too tall, go to new column\n                    if (currentColHeight + itemHeight > minSize.height) {\n                        totalWidth += currentColWidth + labelOpts.padding;\n                        columnWidths.push(currentColWidth); // previous column width\n\n                        currentColWidth = 0;\n                        currentColHeight = 0;\n                    }\n\n                    // Get max width\n                    currentColWidth = Math.max(currentColWidth, itemWidth);\n                    currentColHeight += itemHeight;\n\n                    // Store the hitbox width and height here. Final position will be updated in `draw`\n                    hitboxes[i] = {\n                        left: 0,\n                        top: 0,\n                        width: itemWidth,\n                        height: fontSize\n                    };\n                });\n\n                totalWidth += currentColWidth;\n                columnWidths.push(currentColWidth);\n                minSize.width += totalWidth;\n            }\n        }\n\n        me.width = minSize.width;\n        me.height = minSize.height;\n    },\n    afterFit: noop,\n\n    // Shared Methods\n    isHorizontal: function () {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n\n    // Actually draw the legend on the canvas\n    draw: function () {\n        var me = this;\n        var opts = me.options;\n        var labelOpts = opts.labels;\n        var globalDefault = defaults.global;\n        var lineDefault = globalDefault.elements.line;\n        var legendWidth = me.width;\n        var lineWidths = me.lineWidths;\n\n        if (opts.display) {\n            var ctx = me.ctx;\n            var valueOrDefault = helpers.valueOrDefault;\n            var fontColor = valueOrDefault(labelOpts.fontColor, globalDefault.defaultFontColor);\n            var fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n            var fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n            var fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n            var labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n            var cursor;\n\n            // Canvas setup\n            ctx.textAlign = 'left';\n            ctx.textBaseline = 'middle';\n            ctx.lineWidth = 0.5;\n            ctx.strokeStyle = fontColor; // for strikethrough effect\n            ctx.fillStyle = fontColor; // render in correct colour\n            ctx.font = labelFont;\n\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var hitboxes = me.legendHitBoxes;\n\n            // current position\n            var drawLegendBox = function (x, y, legendItem) {\n                if (isNaN(boxWidth) || boxWidth <= 0) {\n                    return;\n                }\n\n                // Set the ctx for the box\n                ctx.save();\n\n                ctx.fillStyle = valueOrDefault(legendItem.fillStyle, globalDefault.defaultColor);\n                ctx.lineCap = valueOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);\n                ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n                ctx.lineJoin = valueOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);\n                ctx.lineWidth = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth);\n                ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, globalDefault.defaultColor);\n                var isLineWidthZero = (valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth) === 0);\n\n                if (ctx.setLineDash) {\n                    // IE 9 and 10 do not support line dash\n                    ctx.setLineDash(valueOrDefault(legendItem.lineDash, lineDefault.borderDash));\n                }\n\n                if (opts.labels && opts.labels.usePointStyle) {\n                    // Recalculate x and y for drawPoint() because its expecting\n                    // x and y to be center of figure (instead of top left)\n                    var radius = fontSize * Math.SQRT2 / 2;\n                    var offSet = radius / Math.SQRT2;\n                    var centerX = x + offSet;\n                    var centerY = y + offSet;\n\n                    // Draw pointStyle as legend symbol\n                    helpers.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n                } else {\n                    // Draw box as legend symbol\n                    if (!isLineWidthZero) {\n                        ctx.strokeRect(x, y, boxWidth, fontSize);\n                    }\n                    ctx.fillRect(x, y, boxWidth, fontSize);\n                }\n\n                ctx.restore();\n            };\n            var fillText = function (x, y, legendItem, textWidth) {\n                var halfFontSize = fontSize / 2;\n                var xLeft = boxWidth + halfFontSize + x;\n                var yMiddle = y + halfFontSize;\n\n                ctx.fillText(legendItem.text, xLeft, yMiddle);\n\n                if (legendItem.hidden) {\n                    // Strikethrough the text if hidden\n                    ctx.beginPath();\n                    ctx.lineWidth = 2;\n                    ctx.moveTo(xLeft, yMiddle);\n                    ctx.lineTo(xLeft + textWidth, yMiddle);\n                    ctx.stroke();\n                }\n            };\n\n            // Horizontal\n            var isHorizontal = me.isHorizontal();\n            if (isHorizontal) {\n                cursor = {\n                    x: me.left + ((legendWidth - lineWidths[0]) / 2),\n                    y: me.top + labelOpts.padding,\n                    line: 0\n                };\n            } else {\n                cursor = {\n                    x: me.left + labelOpts.padding,\n                    y: me.top + labelOpts.padding,\n                    line: 0\n                };\n            }\n\n            var itemHeight = fontSize + labelOpts.padding;\n            helpers.each(me.legendItems, function (legendItem, i) {\n                var textWidth = ctx.measureText(legendItem.text).width;\n                var width = boxWidth + (fontSize / 2) + textWidth;\n                var x = cursor.x;\n                var y = cursor.y;\n\n                if (isHorizontal) {\n                    if (x + width >= legendWidth) {\n                        y = cursor.y += itemHeight;\n                        cursor.line++;\n                        x = cursor.x = me.left + ((legendWidth - lineWidths[cursor.line]) / 2);\n                    }\n                } else if (y + itemHeight > me.bottom) {\n                    x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n                    y = cursor.y = me.top + labelOpts.padding;\n                    cursor.line++;\n                }\n\n                drawLegendBox(x, y, legendItem);\n\n                hitboxes[i].left = x;\n                hitboxes[i].top = y;\n\n                // Fill the actual label\n                fillText(x, y, legendItem, textWidth);\n\n                if (isHorizontal) {\n                    cursor.x += width + (labelOpts.padding);\n                } else {\n                    cursor.y += itemHeight;\n                }\n\n            });\n        }\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     * @return {Boolean} true if a change occured\n     */\n    handleEvent: function (e) {\n        var me = this;\n        var opts = me.options;\n        var type = e.type === 'mouseup' ? 'click' : e.type;\n        var changed = false;\n\n        if (type === 'mousemove') {\n            if (!opts.onHover) {\n                return;\n            }\n        } else if (type === 'click') {\n            if (!opts.onClick) {\n                return;\n            }\n        } else {\n            return;\n        }\n\n        // Chart event already has relative position in it\n        var x = e.x;\n        var y = e.y;\n\n        if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n            // See if we are touching one of the dataset boxes\n            var lh = me.legendHitBoxes;\n            for (var i = 0; i < lh.length; ++i) {\n                var hitBox = lh[i];\n\n                if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n                    // Touching an element\n                    if (type === 'click') {\n                        // use e.native for backwards compatibility\n                        opts.onClick.call(me, e.native, me.legendItems[i]);\n                        changed = true;\n                        break;\n                    } else if (type === 'mousemove') {\n                        // use e.native for backwards compatibility\n                        opts.onHover.call(me, e.native, me.legendItems[i]);\n                        changed = true;\n                        break;\n                    }\n                }\n            }\n        }\n\n        return changed;\n    }\n});\n\nfunction createNewLegendAndAttach(chart, legendOpts)\n{\n    var legend = new Legend({\n        ctx: chart.ctx,\n        options: legendOpts,\n        chart: chart\n    });\n\n    layouts.configure(chart, legend, legendOpts);\n    layouts.addBox(chart, legend);\n    chart.legend = legend;\n}\n\nmodule.exports = {\n    id: 'legend',\n\n    /**\n     * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n     * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Legend,\n\n    beforeInit: function (chart) {\n        var legendOpts = chart.options.legend;\n\n        if (legendOpts) {\n            createNewLegendAndAttach(chart, legendOpts);\n        }\n    },\n\n    beforeUpdate: function (chart) {\n        var legendOpts = chart.options.legend;\n        var legend = chart.legend;\n\n        if (legendOpts) {\n            helpers.mergeIf(legendOpts, defaults.global.legend);\n\n            if (legend) {\n                layouts.configure(chart, legend, legendOpts);\n                legend.options = legendOpts;\n            } else {\n                createNewLegendAndAttach(chart, legendOpts);\n            }\n        } else if (legend) {\n            layouts.removeBox(chart, legend);\n            delete chart.legend;\n        }\n    },\n\n    afterEvent: function (chart, e) {\n        var legend = chart.legend;\n        if (legend) {\n            legend.handleEvent(e);\n        }\n    }\n};\n\n},{\"25\":25,\"26\":26,\"30\":30,\"45\":45}],52:[function (require,module,exports) {\n'use strict';\n\nvar defaults = require(25);\nvar Element = require(26);\nvar helpers = require(45);\nvar layouts = require(30);\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n    title: {\n        display: false,\n        fontStyle: 'bold',\n        fullWidth: true,\n        lineHeight: 1.2,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000         // by default greater than legend (1000) to be above\n    }\n});\n\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\nvar Title = Element.extend({\n    initialize: function (config) {\n        var me = this;\n        helpers.extend(me, config);\n\n        // Contains hit boxes for each dataset (in dataset order)\n        me.legendHitBoxes = [];\n    },\n\n    // These methods are ordered by lifecycle. Utilities then follow.\n\n    beforeUpdate: noop,\n    update: function (maxWidth, maxHeight, margins) {\n        var me = this;\n\n        // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n        me.beforeUpdate();\n\n        // Absorb the master measurements\n        me.maxWidth = maxWidth;\n        me.maxHeight = maxHeight;\n        me.margins = margins;\n\n        // Dimensions\n        me.beforeSetDimensions();\n        me.setDimensions();\n        me.afterSetDimensions();\n        // Labels\n        me.beforeBuildLabels();\n        me.buildLabels();\n        me.afterBuildLabels();\n\n        // Fit\n        me.beforeFit();\n        me.fit();\n        me.afterFit();\n        //\n        me.afterUpdate();\n\n        return me.minSize;\n\n    },\n    afterUpdate: noop,\n\n    //\n\n    beforeSetDimensions: noop,\n    setDimensions: function () {\n        var me = this;\n        // Set the unconstrained dimension before label rotation\n        if (me.isHorizontal()) {\n            // Reset position before calculating rotation\n            me.width = me.maxWidth;\n            me.left = 0;\n            me.right = me.width;\n        } else {\n            me.height = me.maxHeight;\n\n            // Reset position before calculating rotation\n            me.top = 0;\n            me.bottom = me.height;\n        }\n\n        // Reset padding\n        me.paddingLeft = 0;\n        me.paddingTop = 0;\n        me.paddingRight = 0;\n        me.paddingBottom = 0;\n\n        // Reset minSize\n        me.minSize = {\n            width: 0,\n            height: 0\n        };\n    },\n    afterSetDimensions: noop,\n\n    //\n\n    beforeBuildLabels: noop,\n    buildLabels: noop,\n    afterBuildLabels: noop,\n\n    //\n\n    beforeFit: noop,\n    fit: function () {\n        var me = this;\n        var valueOrDefault = helpers.valueOrDefault;\n        var opts = me.options;\n        var display = opts.display;\n        var fontSize = valueOrDefault(opts.fontSize, defaults.global.defaultFontSize);\n        var minSize = me.minSize;\n        var lineCount = helpers.isArray(opts.text) ? opts.text.length : 1;\n        var lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n        var textSize = display ? (lineCount * lineHeight) + (opts.padding * 2) : 0;\n\n        if (me.isHorizontal()) {\n            minSize.width = me.maxWidth; // fill all the width\n            minSize.height = textSize;\n        } else {\n            minSize.width = textSize;\n            minSize.height = me.maxHeight; // fill all the height\n        }\n\n        me.width = minSize.width;\n        me.height = minSize.height;\n\n    },\n    afterFit: noop,\n\n    // Shared Methods\n    isHorizontal: function () {\n        var pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    },\n\n    // Actually draw the title block on the canvas\n    draw: function () {\n        var me = this;\n        var ctx = me.ctx;\n        var valueOrDefault = helpers.valueOrDefault;\n        var opts = me.options;\n        var globalDefaults = defaults.global;\n\n        if (opts.display) {\n            var fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize);\n            var fontStyle = valueOrDefault(opts.fontStyle, globalDefaults.defaultFontStyle);\n            var fontFamily = valueOrDefault(opts.fontFamily, globalDefaults.defaultFontFamily);\n            var titleFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n            var lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n            var offset = lineHeight / 2 + opts.padding;\n            var rotation = 0;\n            var top = me.top;\n            var left = me.left;\n            var bottom = me.bottom;\n            var right = me.right;\n            var maxWidth, titleX, titleY;\n\n            ctx.fillStyle = valueOrDefault(opts.fontColor, globalDefaults.defaultFontColor); // render in correct colour\n            ctx.font = titleFont;\n\n            // Horizontal\n            if (me.isHorizontal()) {\n                titleX = left + ((right - left) / 2); // midpoint of the width\n                titleY = top + offset;\n                maxWidth = right - left;\n            } else {\n                titleX = opts.position === 'left' ? left + offset : right - offset;\n                titleY = top + ((bottom - top) / 2);\n                maxWidth = bottom - top;\n                rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n            }\n\n            ctx.save();\n            ctx.translate(titleX, titleY);\n            ctx.rotate(rotation);\n            ctx.textAlign = 'center';\n            ctx.textBaseline = 'middle';\n\n            var text = opts.text;\n            if (helpers.isArray(text)) {\n                var y = 0;\n                for (var i = 0; i < text.length; ++i) {\n                    ctx.fillText(text[i], 0, y, maxWidth);\n                    y += lineHeight;\n                }\n            } else {\n                ctx.fillText(text, 0, 0, maxWidth);\n            }\n\n            ctx.restore();\n        }\n    }\n});\n\nfunction createNewTitleBlockAndAttach(chart, titleOpts)\n{\n    var title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart: chart\n    });\n\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\n\nmodule.exports = {\n    id: 'title',\n\n    /**\n     * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n     * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Title,\n\n    beforeInit: function (chart) {\n        var titleOpts = chart.options.title;\n\n        if (titleOpts) {\n            createNewTitleBlockAndAttach(chart, titleOpts);\n        }\n    },\n\n    beforeUpdate: function (chart) {\n        var titleOpts = chart.options.title;\n        var titleBlock = chart.titleBlock;\n\n        if (titleOpts) {\n            helpers.mergeIf(titleOpts, defaults.global.title);\n\n            if (titleBlock) {\n                layouts.configure(chart, titleBlock, titleOpts);\n                titleBlock.options = titleOpts;\n            } else {\n                createNewTitleBlockAndAttach(chart, titleOpts);\n            }\n        } else if (titleBlock) {\n            layouts.removeBox(chart, titleBlock);\n            delete chart.titleBlock;\n        }\n    }\n};\n\n},{\"25\":25,\"26\":26,\"30\":30,\"45\":45}],53:[function (require,module,exports) {\n'use strict';\n\nmodule.exports = function (Chart) {\n\n    // Default config for a category scale\n    var defaultConfig = {\n        position: 'bottom'\n    };\n\n    var DatasetScale = Chart.Scale.extend({\n        /**\n         * Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n         * else fall back to data.labels\n         * @private\n         */\n        getLabels: function () {\n            var data = this.chart.data;\n            return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n        },\n\n        determineDataLimits: function () {\n            var me = this;\n            var labels = me.getLabels();\n            me.minIndex = 0;\n            me.maxIndex = labels.length - 1;\n            var findIndex;\n\n            if (me.options.ticks.min !== undefined) {\n                // user specified min value\n                findIndex = labels.indexOf(me.options.ticks.min);\n                me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n            }\n\n            if (me.options.ticks.max !== undefined) {\n                // user specified max value\n                findIndex = labels.indexOf(me.options.ticks.max);\n                me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n            }\n\n            me.min = labels[me.minIndex];\n            me.max = labels[me.maxIndex];\n        },\n\n        buildTicks: function () {\n            var me = this;\n            var labels = me.getLabels();\n            // If we are viewing some subset of labels, slice the original array\n            me.ticks = (me.minIndex === 0 && me.maxIndex === labels.length - 1) ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n        },\n\n        getLabelForIndex: function (index, datasetIndex) {\n            var me = this;\n            var data = me.chart.data;\n            var isHorizontal = me.isHorizontal();\n\n            if (data.yLabels && !isHorizontal) {\n                return me.getRightValue(data.datasets[datasetIndex].data[index]);\n            }\n            return me.ticks[index - me.minIndex];\n        },\n\n        // Used to get data value locations.  Value can either be an index or a numerical value\n        getPixelForValue: function (value, index) {\n            var me = this;\n            var offset = me.options.offset;\n            // 1 is added because we need the length but we have the indexes\n            var offsetAmt = Math.max((me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1)), 1);\n\n            // If value is a data object, then index is the index in the data array,\n            // not the index of the scale. We need to change that.\n            var valueCategory;\n            if (value !== undefined && value !== null) {\n                valueCategory = me.isHorizontal() ? value.x : value.y;\n            }\n            if (valueCategory !== undefined || (value !== undefined && isNaN(index))) {\n                var labels = me.getLabels();\n                value = valueCategory || value;\n                var idx = labels.indexOf(value);\n                index = idx !== -1 ? idx : index;\n            }\n\n            if (me.isHorizontal()) {\n                var valueWidth = me.width / offsetAmt;\n                var widthOffset = (valueWidth * (index - me.minIndex));\n\n                if (offset) {\n                    widthOffset += (valueWidth / 2);\n                }\n\n                return me.left + Math.round(widthOffset);\n            }\n            var valueHeight = me.height / offsetAmt;\n            var heightOffset = (valueHeight * (index - me.minIndex));\n\n            if (offset) {\n                heightOffset += (valueHeight / 2);\n            }\n\n            return me.top + Math.round(heightOffset);\n        },\n        getPixelForTick: function (index) {\n            return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n        },\n        getValueForPixel: function (pixel) {\n            var me = this;\n            var offset = me.options.offset;\n            var value;\n            var offsetAmt = Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n            var horz = me.isHorizontal();\n            var valueDimension = (horz ? me.width : me.height) / offsetAmt;\n\n            pixel -= horz ? me.left : me.top;\n\n            if (offset) {\n                pixel -= (valueDimension / 2);\n            }\n\n            if (pixel <= 0) {\n                value = 0;\n            } else {\n                value = Math.round(pixel / valueDimension);\n            }\n\n            return value + me.minIndex;\n        },\n        getBasePixel: function () {\n            return this.bottom;\n        }\n    });\n\n    Chart.scaleService.registerScaleType('category', DatasetScale, defaultConfig);\n\n};\n\n},{}],54:[function (require,module,exports) {\n'use strict';\n\nvar defaults = require(25);\nvar helpers = require(45);\nvar Ticks = require(34);\n\nmodule.exports = function (Chart) {\n\n    var defaultConfig = {\n        position: 'left',\n        ticks: {\n            callback: Ticks.formatters.linear\n        }\n    };\n\n    var LinearScale = Chart.LinearScaleBase.extend({\n\n        determineDataLimits: function () {\n            var me = this;\n            var opts = me.options;\n            var chart = me.chart;\n            var data = chart.data;\n            var datasets = data.datasets;\n            var isHorizontal = me.isHorizontal();\n            var DEFAULT_MIN = 0;\n            var DEFAULT_MAX = 1;\n\n            function IDMatches(meta)\n            {\n                return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n            }\n\n            // First Calculate the range\n            me.min = null;\n            me.max = null;\n\n            var hasStacks = opts.stacked;\n            if (hasStacks === undefined) {\n                helpers.each(datasets, function (dataset, datasetIndex) {\n                    if (hasStacks) {\n                        return;\n                    }\n\n                    var meta = chart.getDatasetMeta(datasetIndex);\n                    if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n                        meta.stack !== undefined) {\n                        hasStacks = true;\n                    }\n                });\n            }\n\n            if (opts.stacked || hasStacks) {\n                var valuesPerStack = {};\n\n                helpers.each(datasets, function (dataset, datasetIndex) {\n                    var meta = chart.getDatasetMeta(datasetIndex);\n                    var key = [\n                        meta.type,\n                        // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n                        ((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n                        meta.stack\n                    ].join('.');\n\n                    if (valuesPerStack[key] === undefined) {\n                        valuesPerStack[key] = {\n                            positiveValues: [],\n                            negativeValues: []\n                        };\n                    }\n\n                    // Store these per type\n                    var positiveValues = valuesPerStack[key].positiveValues;\n                    var negativeValues = valuesPerStack[key].negativeValues;\n\n                    if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n                        helpers.each(dataset.data, function (rawValue, index) {\n                            var value = +me.getRightValue(rawValue);\n                            if (isNaN(value) || meta.data[index].hidden) {\n                                return;\n                            }\n\n                            positiveValues[index] = positiveValues[index] || 0;\n                            negativeValues[index] = negativeValues[index] || 0;\n\n                            if (opts.relativePoints) {\n                                positiveValues[index] = 100;\n                            } else if (value < 0) {\n                                negativeValues[index] += value;\n                            } else {\n                                positiveValues[index] += value;\n                            }\n                        });\n                    }\n                });\n\n                helpers.each(valuesPerStack, function (valuesForType) {\n                    var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n                    var minVal = helpers.min(values);\n                    var maxVal = helpers.max(values);\n                    me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n                    me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n                });\n            } else {\n                helpers.each(datasets, function (dataset, datasetIndex) {\n                    var meta = chart.getDatasetMeta(datasetIndex);\n                    if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n                        helpers.each(dataset.data, function (rawValue, index) {\n                            var value = +me.getRightValue(rawValue);\n                            if (isNaN(value) || meta.data[index].hidden) {\n                                return;\n                            }\n\n                            if (me.min === null) {\n                                me.min = value;\n                            } else if (value < me.min) {\n                                me.min = value;\n                            }\n\n                            if (me.max === null) {\n                                me.max = value;\n                            } else if (value > me.max) {\n                                me.max = value;\n                            }\n                        });\n                    }\n                });\n            }\n\n            me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n            me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX;\n\n            // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n            this.handleTickRangeOptions();\n        },\n        getTickLimit: function () {\n            var maxTicks;\n            var me = this;\n            var tickOpts = me.options.ticks;\n\n            if (me.isHorizontal()) {\n                maxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.width / 50));\n            } else {\n                // The factor of 2 used to scale the font size has been experimentally determined.\n                var tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, defaults.global.defaultFontSize);\n                maxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.height / (2 * tickFontSize)));\n            }\n\n            return maxTicks;\n        },\n        // Called after the ticks are built. We need\n        handleDirectionalChanges: function () {\n            if (!this.isHorizontal()) {\n                // We are in a vertical orientation. The top value is the highest. So reverse the array\n                this.ticks.reverse();\n            }\n        },\n        getLabelForIndex: function (index, datasetIndex) {\n            return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n        },\n        // Utils\n        getPixelForValue: function (value) {\n            // This must be called after fit has been run so that\n            // this.left, this.top, this.right, and this.bottom have been defined\n            var me = this;\n            var start = me.start;\n\n            var rightValue = +me.getRightValue(value);\n            var pixel;\n            var range = me.end - start;\n\n            if (me.isHorizontal()) {\n                pixel = me.left + (me.width / range * (rightValue - start));\n            } else {\n                pixel = me.bottom - (me.height / range * (rightValue - start));\n            }\n            return pixel;\n        },\n        getValueForPixel: function (pixel) {\n            var me = this;\n            var isHorizontal = me.isHorizontal();\n            var innerDimension = isHorizontal ? me.width : me.height;\n            var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n            return me.start + ((me.end - me.start) * offset);\n        },\n        getPixelForTick: function (index) {\n            return this.getPixelForValue(this.ticksAsNumbers[index]);\n        }\n    });\n    Chart.scaleService.registerScaleType('linear', LinearScale, defaultConfig);\n\n};\n\n},{\"25\":25,\"34\":34,\"45\":45}],55:[function (require,module,exports) {\n'use strict';\n\nvar helpers = require(45);\n\n/**\n * Generate a set of linear ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\nfunction generateTicks(generationOptions, dataRange)\n{\n    var ticks = [];\n    // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n    // \"nice number\" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n    // for details.\n\n    var spacing;\n    if (generationOptions.stepSize && generationOptions.stepSize > 0) {\n        spacing = generationOptions.stepSize;\n    } else {\n        var niceRange = helpers.niceNum(dataRange.max - dataRange.min, false);\n        spacing = helpers.niceNum(niceRange / (generationOptions.maxTicks - 1), true);\n    }\n    var niceMin = Math.floor(dataRange.min / spacing) * spacing;\n    var niceMax = Math.ceil(dataRange.max / spacing) * spacing;\n\n    // If min, max and stepSize is set and they make an evenly spaced scale use it.\n    if (generationOptions.min && generationOptions.max && generationOptions.stepSize) {\n        // If very close to our whole number, use it.\n        if (helpers.almostWhole((generationOptions.max - generationOptions.min) / generationOptions.stepSize, spacing / 1000)) {\n            niceMin = generationOptions.min;\n            niceMax = generationOptions.max;\n        }\n    }\n\n    var numSpaces = (niceMax - niceMin) / spacing;\n    // If very close to our rounded value, use it.\n    if (helpers.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n        numSpaces = Math.round(numSpaces);\n    } else {\n        numSpaces = Math.ceil(numSpaces);\n    }\n\n    var precision = 1;\n    if (spacing < 1) {\n        precision = Math.pow(10, spacing.toString().length - 2);\n        niceMin = Math.round(niceMin * precision) / precision;\n        niceMax = Math.round(niceMax * precision) / precision;\n    }\n    ticks.push(generationOptions.min !== undefined ? generationOptions.min : niceMin);\n    for (var j = 1; j < numSpaces; ++j) {\n        ticks.push(Math.round((niceMin + j * spacing) * precision) / precision);\n    }\n    ticks.push(generationOptions.max !== undefined ? generationOptions.max : niceMax);\n\n    return ticks;\n}\n\n\nmodule.exports = function (Chart) {\n\n    var noop = helpers.noop;\n\n    Chart.LinearScaleBase = Chart.Scale.extend({\n        getRightValue: function (value) {\n            if (typeof value === 'string') {\n                return +value;\n            }\n            return Chart.Scale.prototype.getRightValue.call(this, value);\n        },\n\n        handleTickRangeOptions: function () {\n            var me = this;\n            var opts = me.options;\n            var tickOpts = opts.ticks;\n\n            // If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n            // do nothing since that would make the chart weird. If the user really wants a weird chart\n            // axis, they can manually override it\n            if (tickOpts.beginAtZero) {\n                var minSign = helpers.sign(me.min);\n                var maxSign = helpers.sign(me.max);\n\n                if (minSign < 0 && maxSign < 0) {\n                    // move the top up to 0\n                    me.max = 0;\n                } else if (minSign > 0 && maxSign > 0) {\n                    // move the bottom down to 0\n                    me.min = 0;\n                }\n            }\n\n            var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n            var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n            if (tickOpts.min !== undefined) {\n                me.min = tickOpts.min;\n            } else if (tickOpts.suggestedMin !== undefined) {\n                if (me.min === null) {\n                    me.min = tickOpts.suggestedMin;\n                } else {\n                    me.min = Math.min(me.min, tickOpts.suggestedMin);\n                }\n            }\n\n            if (tickOpts.max !== undefined) {\n                me.max = tickOpts.max;\n            } else if (tickOpts.suggestedMax !== undefined) {\n                if (me.max === null) {\n                    me.max = tickOpts.suggestedMax;\n                } else {\n                    me.max = Math.max(me.max, tickOpts.suggestedMax);\n                }\n            }\n\n            if (setMin !== setMax) {\n                // We set the min or the max but not both.\n                // So ensure that our range is good\n                // Inverted or 0 length range can happen when\n                // ticks.min is set, and no datasets are visible\n                if (me.min >= me.max) {\n                    if (setMin) {\n                        me.max = me.min + 1;\n                    } else {\n                        me.min = me.max - 1;\n                    }\n                }\n            }\n\n            if (me.min === me.max) {\n                me.max++;\n\n                if (!tickOpts.beginAtZero) {\n                    me.min--;\n                }\n            }\n        },\n        getTickLimit: noop,\n        handleDirectionalChanges: noop,\n\n        buildTicks: function () {\n            var me = this;\n            var opts = me.options;\n            var tickOpts = opts.ticks;\n\n            // Figure out what the max number of ticks we can support it is based on the size of\n            // the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n            // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n            // the graph. Make sure we always have at least 2 ticks\n            var maxTicks = me.getTickLimit();\n            maxTicks = Math.max(2, maxTicks);\n\n            var numericGeneratorOptions = {\n                maxTicks: maxTicks,\n                min: tickOpts.min,\n                max: tickOpts.max,\n                stepSize: helpers.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n            };\n            var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n\n            me.handleDirectionalChanges();\n\n            // At this point, we need to update our max and min given the tick values since we have expanded the\n            // range of the scale\n            me.max = helpers.max(ticks);\n            me.min = helpers.min(ticks);\n\n            if (tickOpts.reverse) {\n                ticks.reverse();\n\n                me.start = me.max;\n                me.end = me.min;\n            } else {\n                me.start = me.min;\n                me.end = me.max;\n            }\n        },\n        convertTicksToLabels: function () {\n            var me = this;\n            me.ticksAsNumbers = me.ticks.slice();\n            me.zeroLineIndex = me.ticks.indexOf(0);\n\n            Chart.Scale.prototype.convertTicksToLabels.call(me);\n        }\n    });\n};\n\n},{\"45\":45}],56:[function (require,module,exports) {\n'use strict';\n\nvar helpers = require(45);\nvar Ticks = require(34);\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\nfunction generateTicks(generationOptions, dataRange)\n{\n    var ticks = [];\n    var valueOrDefault = helpers.valueOrDefault;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph\n    var tickVal = valueOrDefault(generationOptions.min, Math.pow(10, Math.floor(helpers.log10(dataRange.min))));\n\n    var endExp = Math.floor(helpers.log10(dataRange.max));\n    var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n    var exp, significand;\n\n    if (tickVal === 0) {\n        exp = Math.floor(helpers.log10(dataRange.minNotZero));\n        significand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n\n        ticks.push(tickVal);\n        tickVal = significand * Math.pow(10, exp);\n    } else {\n        exp = Math.floor(helpers.log10(tickVal));\n        significand = Math.floor(tickVal / Math.pow(10, exp));\n    }\n    var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n    do {\n        ticks.push(tickVal);\n\n        ++significand;\n        if (significand === 10) {\n            significand = 1;\n            ++exp;\n            precision = exp >= 0 ? 1 : precision;\n        }\n\n        tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n    } while (exp < endExp || (exp === endExp && significand < endSignificand));\n\n    var lastTick = valueOrDefault(generationOptions.max, tickVal);\n    ticks.push(lastTick);\n\n    return ticks;\n}\n\n\nmodule.exports = function (Chart) {\n\n    var defaultConfig = {\n        position: 'left',\n\n        // label settings\n        ticks: {\n            callback: Ticks.formatters.logarithmic\n        }\n    };\n\n    var LogarithmicScale = Chart.Scale.extend({\n        determineDataLimits: function () {\n            var me = this;\n            var opts = me.options;\n            var chart = me.chart;\n            var data = chart.data;\n            var datasets = data.datasets;\n            var isHorizontal = me.isHorizontal();\n            function IDMatches(meta)\n            {\n                return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n            }\n\n            // Calculate Range\n            me.min = null;\n            me.max = null;\n            me.minNotZero = null;\n\n            var hasStacks = opts.stacked;\n            if (hasStacks === undefined) {\n                helpers.each(datasets, function (dataset, datasetIndex) {\n                    if (hasStacks) {\n                        return;\n                    }\n\n                    var meta = chart.getDatasetMeta(datasetIndex);\n                    if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n                        meta.stack !== undefined) {\n                        hasStacks = true;\n                    }\n                });\n            }\n\n            if (opts.stacked || hasStacks) {\n                var valuesPerStack = {};\n\n                helpers.each(datasets, function (dataset, datasetIndex) {\n                    var meta = chart.getDatasetMeta(datasetIndex);\n                    var key = [\n                        meta.type,\n                        // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n                        ((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n                        meta.stack\n                    ].join('.');\n\n                    if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n                        if (valuesPerStack[key] === undefined) {\n                            valuesPerStack[key] = [];\n                        }\n\n                        helpers.each(dataset.data, function (rawValue, index) {\n                            var values = valuesPerStack[key];\n                            var value = +me.getRightValue(rawValue);\n                            // invalid, hidden and negative values are ignored\n                            if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                                return;\n                            }\n                            values[index] = values[index] || 0;\n                            values[index] += value;\n                        });\n                    }\n                });\n\n                helpers.each(valuesPerStack, function (valuesForType) {\n                    if (valuesForType.length > 0) {\n                        var minVal = helpers.min(valuesForType);\n                        var maxVal = helpers.max(valuesForType);\n                        me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n                        me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n                    }\n                });\n            } else {\n                helpers.each(datasets, function (dataset, datasetIndex) {\n                    var meta = chart.getDatasetMeta(datasetIndex);\n                    if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n                        helpers.each(dataset.data, function (rawValue, index) {\n                            var value = +me.getRightValue(rawValue);\n                            // invalid, hidden and negative values are ignored\n                            if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                                return;\n                            }\n\n                            if (me.min === null) {\n                                me.min = value;\n                            } else if (value < me.min) {\n                                me.min = value;\n                            }\n\n                            if (me.max === null) {\n                                me.max = value;\n                            } else if (value > me.max) {\n                                me.max = value;\n                            }\n\n                            if (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n                                me.minNotZero = value;\n                            }\n                        });\n                    }\n                });\n            }\n\n            // Common base implementation to handle ticks.min, ticks.max\n            this.handleTickRangeOptions();\n        },\n        handleTickRangeOptions: function () {\n            var me = this;\n            var opts = me.options;\n            var tickOpts = opts.ticks;\n            var valueOrDefault = helpers.valueOrDefault;\n            var DEFAULT_MIN = 1;\n            var DEFAULT_MAX = 10;\n\n            me.min = valueOrDefault(tickOpts.min, me.min);\n            me.max = valueOrDefault(tickOpts.max, me.max);\n\n            if (me.min === me.max) {\n                if (me.min !== 0 && me.min !== null) {\n                    me.min = Math.pow(10, Math.floor(helpers.log10(me.min)) - 1);\n                    me.max = Math.pow(10, Math.floor(helpers.log10(me.max)) + 1);\n                } else {\n                    me.min = DEFAULT_MIN;\n                    me.max = DEFAULT_MAX;\n                }\n            }\n            if (me.min === null) {\n                me.min = Math.pow(10, Math.floor(helpers.log10(me.max)) - 1);\n            }\n            if (me.max === null) {\n                me.max = me.min !== 0\n                    ? Math.pow(10, Math.floor(helpers.log10(me.min)) + 1)\n                    : DEFAULT_MAX;\n            }\n            if (me.minNotZero === null) {\n                if (me.min > 0) {\n                    me.minNotZero = me.min;\n                } else if (me.max < 1) {\n                    me.minNotZero = Math.pow(10, Math.floor(helpers.log10(me.max)));\n                } else {\n                    me.minNotZero = DEFAULT_MIN;\n                }\n            }\n        },\n        buildTicks: function () {\n            var me = this;\n            var opts = me.options;\n            var tickOpts = opts.ticks;\n            var reverse = !me.isHorizontal();\n\n            var generationOptions = {\n                min: tickOpts.min,\n                max: tickOpts.max\n            };\n            var ticks = me.ticks = generateTicks(generationOptions, me);\n\n            // At this point, we need to update our max and min given the tick values since we have expanded the\n            // range of the scale\n            me.max = helpers.max(ticks);\n            me.min = helpers.min(ticks);\n\n            if (tickOpts.reverse) {\n                reverse = !reverse;\n                me.start = me.max;\n                me.end = me.min;\n            } else {\n                me.start = me.min;\n                me.end = me.max;\n            }\n            if (reverse) {\n                ticks.reverse();\n            }\n        },\n        convertTicksToLabels: function () {\n            this.tickValues = this.ticks.slice();\n\n            Chart.Scale.prototype.convertTicksToLabels.call(this);\n        },\n        // Get the correct tooltip label\n        getLabelForIndex: function (index, datasetIndex) {\n            return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n        },\n        getPixelForTick: function (index) {\n            return this.getPixelForValue(this.tickValues[index]);\n        },\n        /**\n         * Returns the value of the first tick.\n         * @param {Number} value - The minimum not zero value.\n         * @return {Number} The first tick value.\n         * @private\n         */\n        _getFirstTickValue: function (value) {\n            var exp = Math.floor(helpers.log10(value));\n            var significand = Math.floor(value / Math.pow(10, exp));\n\n            return significand * Math.pow(10, exp);\n        },\n        getPixelForValue: function (value) {\n            var me = this;\n            var reverse = me.options.ticks.reverse;\n            var log10 = helpers.log10;\n            var firstTickValue = me._getFirstTickValue(me.minNotZero);\n            var offset = 0;\n            var innerDimension, pixel, start, end, sign;\n\n            value = +me.getRightValue(value);\n            if (reverse) {\n                start = me.end;\n                end = me.start;\n                sign = -1;\n            } else {\n                start = me.start;\n                end = me.end;\n                sign = 1;\n            }\n            if (me.isHorizontal()) {\n                innerDimension = me.width;\n                pixel = reverse ? me.right : me.left;\n            } else {\n                innerDimension = me.height;\n                sign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n                pixel = reverse ? me.top : me.bottom;\n            }\n            if (value !== start) {\n                if (start === 0) { // include zero tick\n                    offset = helpers.getValueOrDefault(\n                        me.options.ticks.fontSize,\n                        Chart.defaults.global.defaultFontSize\n                    );\n                    innerDimension -= offset;\n                    start = firstTickValue;\n                }\n                if (value !== 0) {\n                    offset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n                }\n                pixel += sign * offset;\n            }\n            return pixel;\n        },\n        getValueForPixel: function (pixel) {\n            var me = this;\n            var reverse = me.options.ticks.reverse;\n            var log10 = helpers.log10;\n            var firstTickValue = me._getFirstTickValue(me.minNotZero);\n            var innerDimension, start, end, value;\n\n            if (reverse) {\n                start = me.end;\n                end = me.start;\n            } else {\n                start = me.start;\n                end = me.end;\n            }\n            if (me.isHorizontal()) {\n                innerDimension = me.width;\n                value = reverse ? me.right - pixel : pixel - me.left;\n            } else {\n                innerDimension = me.height;\n                value = reverse ? pixel - me.top : me.bottom - pixel;\n            }\n            if (value !== start) {\n                if (start === 0) { // include zero tick\n                    var offset = helpers.getValueOrDefault(\n                        me.options.ticks.fontSize,\n                        Chart.defaults.global.defaultFontSize\n                    );\n                    value -= offset;\n                    innerDimension -= offset;\n                    start = firstTickValue;\n                }\n                value *= log10(end) - log10(start);\n                value /= innerDimension;\n                value = Math.pow(10, log10(start) + value);\n            }\n            return value;\n        }\n    });\n    Chart.scaleService.registerScaleType('logarithmic', LogarithmicScale, defaultConfig);\n\n};\n\n},{\"34\":34,\"45\":45}],57:[function (require,module,exports) {\n'use strict';\n\nvar defaults = require(25);\nvar helpers = require(45);\nvar Ticks = require(34);\n\nmodule.exports = function (Chart) {\n\n    var globalDefaults = defaults.global;\n\n    var defaultConfig = {\n        display: true,\n\n        // Boolean - Whether to animate scaling the chart from the centre\n        animate: true,\n        position: 'chartArea',\n\n        angleLines: {\n            display: true,\n            color: 'rgba(0, 0, 0, 0.1)',\n            lineWidth: 1\n        },\n\n        gridLines: {\n            circular: false\n        },\n\n        // label settings\n        ticks: {\n            // Boolean - Show a backdrop to the scale label\n            showLabelBackdrop: true,\n\n            // String - The colour of the label backdrop\n            backdropColor: 'rgba(255,255,255,0.75)',\n\n            // Number - The backdrop padding above & below the label in pixels\n            backdropPaddingY: 2,\n\n            // Number - The backdrop padding to the side of the label in pixels\n            backdropPaddingX: 2,\n\n            callback: Ticks.formatters.linear\n        },\n\n        pointLabels: {\n            // Boolean - if true, show point labels\n            display: true,\n\n            // Number - Point label font size in pixels\n            fontSize: 10,\n\n            // Function - Used to convert point labels\n            callback: function (label) {\n                return label;\n            }\n        }\n    };\n\n    function getValueCount(scale)\n    {\n        var opts = scale.options;\n        return opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n    }\n\n    function getPointLabelFontOptions(scale)\n    {\n        var pointLabelOptions = scale.options.pointLabels;\n        var fontSize = helpers.valueOrDefault(pointLabelOptions.fontSize, globalDefaults.defaultFontSize);\n        var fontStyle = helpers.valueOrDefault(pointLabelOptions.fontStyle, globalDefaults.defaultFontStyle);\n        var fontFamily = helpers.valueOrDefault(pointLabelOptions.fontFamily, globalDefaults.defaultFontFamily);\n        var font = helpers.fontString(fontSize, fontStyle, fontFamily);\n\n        return {\n            size: fontSize,\n            style: fontStyle,\n            family: fontFamily,\n            font: font\n        };\n    }\n\n    function measureLabelSize(ctx, fontSize, label)\n    {\n        if (helpers.isArray(label)) {\n            return {\n                w: helpers.longestText(ctx, ctx.font, label),\n                h: (label.length * fontSize) + ((label.length - 1) * 1.5 * fontSize)\n            };\n        }\n\n        return {\n            w: ctx.measureText(label).width,\n            h: fontSize\n        };\n    }\n\n    function determineLimits(angle, pos, size, min, max)\n    {\n        if (angle === min || angle === max) {\n            return {\n                start: pos - (size / 2),\n                end: pos + (size / 2)\n            };\n        } else if (angle < min || angle > max) {\n            return {\n                start: pos - size - 5,\n                end: pos\n            };\n        }\n\n        return {\n            start: pos,\n            end: pos + size + 5\n        };\n    }\n\n    /**\n     * Helper function to fit a radial linear scale with point labels\n     */\n    function fitWithPointLabels(scale)\n    {\n        /*\n\t\t * Right, this is really confusing and there is a lot of maths going on here\n\t\t * The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n\t\t *\n\t\t * Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n\t\t *\n\t\t * Solution:\n\t\t *\n\t\t * We assume the radius of the polygon is half the size of the canvas at first\n\t\t * at each index we check if the text overlaps.\n\t\t *\n\t\t * Where it does, we store that angle and that index.\n\t\t *\n\t\t * After finding the largest index and angle we calculate how much we need to remove\n\t\t * from the shape radius to move the point inwards by that x.\n\t\t *\n\t\t * We average the left and right distances to get the maximum shape radius that can fit in the box\n\t\t * along with labels.\n\t\t *\n\t\t * Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n\t\t * on each side, removing that from the size, halving it and adding the left x protrusion width.\n\t\t *\n\t\t * This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n\t\t * and position it in the most space efficient manner\n\t\t *\n\t\t * https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\t\t */\n\n        var plFont = getPointLabelFontOptions(scale);\n\n        // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n        // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n        var largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n        var furthestLimits = {\n            r: scale.width,\n            l: 0,\n            t: scale.height,\n            b: 0\n        };\n        var furthestAngles = {};\n        var i, textSize, pointPosition;\n\n        scale.ctx.font = plFont.font;\n        scale._pointLabelSizes = [];\n\n        var valueCount = getValueCount(scale);\n        for (i = 0; i < valueCount; i++) {\n            pointPosition = scale.getPointPosition(i, largestPossibleRadius);\n            textSize = measureLabelSize(scale.ctx, plFont.size, scale.pointLabels[i] || '');\n            scale._pointLabelSizes[i] = textSize;\n\n            // Add quarter circle to make degree 0 mean top of circle\n            var angleRadians = scale.getIndexAngle(i);\n            var angle = helpers.toDegrees(angleRadians) % 360;\n            var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n            var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n            if (hLimits.start < furthestLimits.l) {\n                furthestLimits.l = hLimits.start;\n                furthestAngles.l = angleRadians;\n            }\n\n            if (hLimits.end > furthestLimits.r) {\n                furthestLimits.r = hLimits.end;\n                furthestAngles.r = angleRadians;\n            }\n\n            if (vLimits.start < furthestLimits.t) {\n                furthestLimits.t = vLimits.start;\n                furthestAngles.t = angleRadians;\n            }\n\n            if (vLimits.end > furthestLimits.b) {\n                furthestLimits.b = vLimits.end;\n                furthestAngles.b = angleRadians;\n            }\n        }\n\n        scale.setReductions(largestPossibleRadius, furthestLimits, furthestAngles);\n    }\n\n    /**\n     * Helper function to fit a radial linear scale with no point labels\n     */\n    function fit(scale)\n    {\n        var largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n        scale.drawingArea = Math.round(largestPossibleRadius);\n        scale.setCenterPoint(0, 0, 0, 0);\n    }\n\n    function getTextAlignForAngle(angle)\n    {\n        if (angle === 0 || angle === 180) {\n            return 'center';\n        } else if (angle < 180) {\n            return 'left';\n        }\n\n        return 'right';\n    }\n\n    function fillText(ctx, text, position, fontSize)\n    {\n        if (helpers.isArray(text)) {\n            var y = position.y;\n            var spacing = 1.5 * fontSize;\n\n            for (var i = 0; i < text.length; ++i) {\n                ctx.fillText(text[i], position.x, y);\n                y += spacing;\n            }\n        } else {\n            ctx.fillText(text, position.x, position.y);\n        }\n    }\n\n    function adjustPointPositionForLabelHeight(angle, textSize, position)\n    {\n        if (angle === 90 || angle === 270) {\n            position.y -= (textSize.h / 2);\n        } else if (angle > 270 || angle < 90) {\n            position.y -= textSize.h;\n        }\n    }\n\n    function drawPointLabels(scale)\n    {\n        var ctx = scale.ctx;\n        var opts = scale.options;\n        var angleLineOpts = opts.angleLines;\n        var pointLabelOpts = opts.pointLabels;\n\n        ctx.lineWidth = angleLineOpts.lineWidth;\n        ctx.strokeStyle = angleLineOpts.color;\n\n        var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n\n        // Point Label Font\n        var plFont = getPointLabelFontOptions(scale);\n\n        ctx.textBaseline = 'top';\n\n        for (var i = getValueCount(scale) - 1; i >= 0; i--) {\n            if (angleLineOpts.display) {\n                var outerPosition = scale.getPointPosition(i, outerDistance);\n                ctx.beginPath();\n                ctx.moveTo(scale.xCenter, scale.yCenter);\n                ctx.lineTo(outerPosition.x, outerPosition.y);\n                ctx.stroke();\n                ctx.closePath();\n            }\n\n            if (pointLabelOpts.display) {\n                // Extra 3px out for some label spacing\n                var pointLabelPosition = scale.getPointPosition(i, outerDistance + 5);\n\n                // Keep this in loop since we may support array properties here\n                var pointLabelFontColor = helpers.valueAtIndexOrDefault(pointLabelOpts.fontColor, i, globalDefaults.defaultFontColor);\n                ctx.font = plFont.font;\n                ctx.fillStyle = pointLabelFontColor;\n\n                var angleRadians = scale.getIndexAngle(i);\n                var angle = helpers.toDegrees(angleRadians);\n                ctx.textAlign = getTextAlignForAngle(angle);\n                adjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n                fillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.size);\n            }\n        }\n    }\n\n    function drawRadiusLine(scale, gridLineOpts, radius, index)\n    {\n        var ctx = scale.ctx;\n        ctx.strokeStyle = helpers.valueAtIndexOrDefault(gridLineOpts.color, index - 1);\n        ctx.lineWidth = helpers.valueAtIndexOrDefault(gridLineOpts.lineWidth, index - 1);\n\n        if (scale.options.gridLines.circular) {\n            // Draw circular arcs between the points\n            ctx.beginPath();\n            ctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n            ctx.closePath();\n            ctx.stroke();\n        } else {\n            // Draw straight lines connecting each index\n            var valueCount = getValueCount(scale);\n\n            if (valueCount === 0) {\n                return;\n            }\n\n            ctx.beginPath();\n            var pointPosition = scale.getPointPosition(0, radius);\n            ctx.moveTo(pointPosition.x, pointPosition.y);\n\n            for (var i = 1; i < valueCount; i++) {\n                pointPosition = scale.getPointPosition(i, radius);\n                ctx.lineTo(pointPosition.x, pointPosition.y);\n            }\n\n            ctx.closePath();\n            ctx.stroke();\n        }\n    }\n\n    function numberOrZero(param)\n    {\n        return helpers.isNumber(param) ? param : 0;\n    }\n\n    var LinearRadialScale = Chart.LinearScaleBase.extend({\n        setDimensions: function () {\n            var me = this;\n            var opts = me.options;\n            var tickOpts = opts.ticks;\n            // Set the unconstrained dimension before label rotation\n            me.width = me.maxWidth;\n            me.height = me.maxHeight;\n            me.xCenter = Math.round(me.width / 2);\n            me.yCenter = Math.round(me.height / 2);\n\n            var minSize = helpers.min([me.height, me.width]);\n            var tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n            me.drawingArea = opts.display ? (minSize / 2) - (tickFontSize / 2 + tickOpts.backdropPaddingY) : (minSize / 2);\n        },\n        determineDataLimits: function () {\n            var me = this;\n            var chart = me.chart;\n            var min = Number.POSITIVE_INFINITY;\n            var max = Number.NEGATIVE_INFINITY;\n\n            helpers.each(chart.data.datasets, function (dataset, datasetIndex) {\n                if (chart.isDatasetVisible(datasetIndex)) {\n                    var meta = chart.getDatasetMeta(datasetIndex);\n\n                    helpers.each(dataset.data, function (rawValue, index) {\n                        var value = +me.getRightValue(rawValue);\n                        if (isNaN(value) || meta.data[index].hidden) {\n                            return;\n                        }\n\n                        min = Math.min(value, min);\n                        max = Math.max(value, max);\n                    });\n                }\n            });\n\n            me.min = (min === Number.POSITIVE_INFINITY ? 0 : min);\n            me.max = (max === Number.NEGATIVE_INFINITY ? 0 : max);\n\n            // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n            me.handleTickRangeOptions();\n        },\n        getTickLimit: function () {\n            var tickOpts = this.options.ticks;\n            var tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n            return Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(this.drawingArea / (1.5 * tickFontSize)));\n        },\n        convertTicksToLabels: function () {\n            var me = this;\n\n            Chart.LinearScaleBase.prototype.convertTicksToLabels.call(me);\n\n            // Point labels\n            me.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n        },\n        getLabelForIndex: function (index, datasetIndex) {\n            return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n        },\n        fit: function () {\n            if (this.options.pointLabels.display) {\n                fitWithPointLabels(this);\n            } else {\n                fit(this);\n            }\n        },\n        /**\n         * Set radius reductions and determine new radius and center point\n         * @private\n         */\n        setReductions: function (largestPossibleRadius, furthestLimits, furthestAngles) {\n            var me = this;\n            var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n            var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n            var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n            var radiusReductionBottom = -Math.max(furthestLimits.b - me.height, 0) / Math.cos(furthestAngles.b);\n\n            radiusReductionLeft = numberOrZero(radiusReductionLeft);\n            radiusReductionRight = numberOrZero(radiusReductionRight);\n            radiusReductionTop = numberOrZero(radiusReductionTop);\n            radiusReductionBottom = numberOrZero(radiusReductionBottom);\n\n            me.drawingArea = Math.min(\n                Math.round(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n                Math.round(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)\n            );\n            me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n        },\n        setCenterPoint: function (leftMovement, rightMovement, topMovement, bottomMovement) {\n            var me = this;\n            var maxRight = me.width - rightMovement - me.drawingArea;\n            var maxLeft = leftMovement + me.drawingArea;\n            var maxTop = topMovement + me.drawingArea;\n            var maxBottom = me.height - bottomMovement - me.drawingArea;\n\n            me.xCenter = Math.round(((maxLeft + maxRight) / 2) + me.left);\n            me.yCenter = Math.round(((maxTop + maxBottom) / 2) + me.top);\n        },\n\n        getIndexAngle: function (index) {\n            var angleMultiplier = (Math.PI * 2) / getValueCount(this);\n            var startAngle = this.chart.options && this.chart.options.startAngle ?\n                this.chart.options.startAngle :\n                0;\n\n            var startAngleRadians = startAngle * Math.PI * 2 / 360;\n\n            // Start from the top instead of right, so remove a quarter of the circle\n            return index * angleMultiplier + startAngleRadians;\n        },\n        getDistanceFromCenterForValue: function (value) {\n            var me = this;\n\n            if (value === null) {\n                return 0; // null always in center\n            }\n\n            // Take into account half font size + the yPadding of the top value\n            var scalingFactor = me.drawingArea / (me.max - me.min);\n            if (me.options.ticks.reverse) {\n                return (me.max - value) * scalingFactor;\n            }\n            return (value - me.min) * scalingFactor;\n        },\n        getPointPosition: function (index, distanceFromCenter) {\n            var me = this;\n            var thisAngle = me.getIndexAngle(index) - (Math.PI / 2);\n            return {\n                x: Math.round(Math.cos(thisAngle) * distanceFromCenter) + me.xCenter,\n                y: Math.round(Math.sin(thisAngle) * distanceFromCenter) + me.yCenter\n            };\n        },\n        getPointPositionForValue: function (index, value) {\n            return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n        },\n\n        getBasePosition: function () {\n            var me = this;\n            var min = me.min;\n            var max = me.max;\n\n            return me.getPointPositionForValue(\n                0,\n                me.beginAtZero ? 0 :\n                min < 0 && max < 0 ? max :\n                min > 0 && max > 0 ? min :\n                0\n            );\n        },\n\n        draw: function () {\n            var me = this;\n            var opts = me.options;\n            var gridLineOpts = opts.gridLines;\n            var tickOpts = opts.ticks;\n            var valueOrDefault = helpers.valueOrDefault;\n\n            if (opts.display) {\n                var ctx = me.ctx;\n                var startAngle = this.getIndexAngle(0);\n\n                // Tick Font\n                var tickFontSize = valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n                var tickFontStyle = valueOrDefault(tickOpts.fontStyle, globalDefaults.defaultFontStyle);\n                var tickFontFamily = valueOrDefault(tickOpts.fontFamily, globalDefaults.defaultFontFamily);\n                var tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\n\n                helpers.each(me.ticks, function (label, index) {\n                    // Don't draw a centre value (if it is minimum)\n                    if (index > 0 || tickOpts.reverse) {\n                        var yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]);\n\n                        // Draw circular lines around the scale\n                        if (gridLineOpts.display && index !== 0) {\n                            drawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n                        }\n\n                        if (tickOpts.display) {\n                            var tickFontColor = valueOrDefault(tickOpts.fontColor, globalDefaults.defaultFontColor);\n                            ctx.font = tickLabelFont;\n\n                            ctx.save();\n                            ctx.translate(me.xCenter, me.yCenter);\n                            ctx.rotate(startAngle);\n\n                            if (tickOpts.showLabelBackdrop) {\n                                var labelWidth = ctx.measureText(label).width;\n                                ctx.fillStyle = tickOpts.backdropColor;\n                                ctx.fillRect(\n                                    -labelWidth / 2 - tickOpts.backdropPaddingX,\n                                    -yCenterOffset - tickFontSize / 2 - tickOpts.backdropPaddingY,\n                                    labelWidth + tickOpts.backdropPaddingX * 2,\n                                    tickFontSize + tickOpts.backdropPaddingY * 2\n                                );\n                            }\n\n                            ctx.textAlign = 'center';\n                            ctx.textBaseline = 'middle';\n                            ctx.fillStyle = tickFontColor;\n                            ctx.fillText(label, 0, -yCenterOffset);\n                            ctx.restore();\n                        }\n                    }\n                });\n\n                if (opts.angleLines.display || opts.pointLabels.display) {\n                    drawPointLabels(me);\n                }\n            }\n        }\n    });\n    Chart.scaleService.registerScaleType('radialLinear', LinearRadialScale, defaultConfig);\n\n};\n\n},{\"25\":25,\"34\":34,\"45\":45}],58:[function (require,module,exports) {\n/* global window: false */\n'use strict';\n\nvar moment = require(6);\nmoment = typeof moment === 'function' ? moment : window.moment;\n\nvar defaults = require(25);\nvar helpers = require(45);\n\n// Integer constants are from the ES6 spec.\nvar MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\nvar MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n\nvar INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: [1, 2, 5, 10, 30]\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: [1, 2, 5, 10, 30]\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: [1, 2, 3, 6, 12]\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: [1, 2, 5]\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: [1, 2, 3, 4]\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: [1, 2, 3]\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: [1, 2, 3, 4]\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n\nvar UNITS = Object.keys(INTERVALS);\n\nfunction sorter(a, b)\n{\n    return a - b;\n}\n\nfunction arrayUnique(items)\n{\n    var hash = {};\n    var out = [];\n    var i, ilen, item;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n        item = items[i];\n        if (!hash[item]) {\n            hash[item] = true;\n            out.push(item);\n        }\n    }\n\n    return out;\n}\n\n/**\n * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n * extremity (left + width or top + height). Note that it would be more optimized to directly\n * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n *\n * @param {Number[]} timestamps - timestamps sorted from lowest to highest.\n * @param {String} distribution - If 'linear', timestamps will be spread linearly along the min\n * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n * If 'series', timestamps will be positioned at the same distance from each other. In this\n * case, only timestamps that break the time linearity are registered, meaning that in the\n * best case, all timestamps are linear, the table contains only min and max.\n */\nfunction buildLookupTable(timestamps, min, max, distribution)\n{\n    if (distribution === 'linear' || !timestamps.length) {\n        return [\n            {time: min, pos: 0},\n            {time: max, pos: 1}\n        ];\n    }\n\n    var table = [];\n    var items = [min];\n    var i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        curr = timestamps[i];\n        if (curr > min && curr < max) {\n            items.push(curr);\n        }\n    }\n\n    items.push(max);\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n        next = items[i + 1];\n        prev = items[i - 1];\n        curr = items[i];\n\n        // only add points that breaks the scale linearity\n        if (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n            table.push({time: curr, pos: i / (ilen - 1)});\n        }\n    }\n\n    return table;\n}\n\n// @see adapted from http://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\nfunction lookup(table, key, value)\n{\n    var lo = 0;\n    var hi = table.length - 1;\n    var mid, i0, i1;\n\n    while (lo >= 0 && lo <= hi) {\n        mid = (lo + hi) >> 1;\n        i0 = table[mid - 1] || null;\n        i1 = table[mid];\n\n        if (!i0) {\n            // given value is outside table (before first item)\n            return {lo: null, hi: i1};\n        } else if (i1[key] < value) {\n            lo = mid + 1;\n        } else if (i0[key] > value) {\n            hi = mid - 1;\n        } else {\n            return {lo: i0, hi: i1};\n        }\n    }\n\n    // given value is outside table (after last item)\n    return {lo: i1, hi: null};\n}\n\n/**\n * Linearly interpolates the given source `value` using the table items `skey` values and\n * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n * index [0, 1] or [n - 1, n] are used for the interpolation.\n */\nfunction interpolate(table, skey, sval, tkey)\n{\n    var range = lookup(table, skey, sval);\n\n    // Note: the lookup table ALWAYS contains at least 2 items (min and max)\n    var prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n    var next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n\n    var span = next[skey] - prev[skey];\n    var ratio = span ? (sval - prev[skey]) / span : 0;\n    var offset = (next[tkey] - prev[tkey]) * ratio;\n\n    return prev[tkey] + offset;\n}\n\n/**\n * Convert the given value to a moment object using the given time options.\n * @see http://momentjs.com/docs/#/parsing/\n */\nfunction momentify(value, options)\n{\n    var parser = options.parser;\n    var format = options.parser || options.format;\n\n    if (typeof parser === 'function') {\n        return parser(value);\n    }\n\n    if (typeof value === 'string' && typeof format === 'string') {\n        return moment(value, format);\n    }\n\n    if (!(value instanceof moment)) {\n        value = moment(value);\n    }\n\n    if (value.isValid()) {\n        return value;\n    }\n\n    // Labels are in an incompatible moment format and no `parser` has been provided.\n    // The user might still use the deprecated `format` option to convert his inputs.\n    if (typeof format === 'function') {\n        return format(value);\n    }\n\n    return value;\n}\n\nfunction parse(input, scale)\n{\n    if (helpers.isNullOrUndef(input)) {\n        return null;\n    }\n\n    var options = scale.options.time;\n    var value = momentify(scale.getRightValue(input), options);\n    if (!value.isValid()) {\n        return null;\n    }\n\n    if (options.round) {\n        value.startOf(options.round);\n    }\n\n    return value.valueOf();\n}\n\n/**\n * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n */\nfunction determineStepSize(min, max, unit, capacity)\n{\n    var range = max - min;\n    var interval = INTERVALS[unit];\n    var milliseconds = interval.size;\n    var steps = interval.steps;\n    var i, ilen, factor;\n\n    if (!steps) {\n        return Math.ceil(range / (capacity * milliseconds));\n    }\n\n    for (i = 0, ilen = steps.length; i < ilen; ++i) {\n        factor = steps[i];\n        if (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n            break;\n        }\n    }\n\n    return factor;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity)\n{\n    var ilen = UNITS.length;\n    var i, interval, factor;\n\n    for (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n        interval = INTERVALS[UNITS[i]];\n        factor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n\n    return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n */\nfunction determineUnitForFormatting(ticks, minUnit, min, max)\n{\n    var duration = moment.duration(moment(max).diff(moment(min)));\n    var ilen = UNITS.length;\n    var i, unit;\n\n    for (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n        unit = UNITS[i];\n        if (INTERVALS[unit].common && duration.as(unit) >= ticks.length) {\n            return unit;\n        }\n    }\n\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit)\n{\n    for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n\n/**\n * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n * Important: this method can return ticks outside the min and max range, it's the\n * responsibility of the calling code to clamp values if needed.\n */\nfunction generate(min, max, capacity, options)\n{\n    var timeOpts = options.time;\n    var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n    var major = determineMajorUnit(minor);\n    var stepSize = helpers.valueOrDefault(timeOpts.stepSize, timeOpts.unitStepSize);\n    var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    var majorTicksEnabled = options.ticks.major.enabled;\n    var interval = INTERVALS[minor];\n    var first = moment(min);\n    var last = moment(max);\n    var ticks = [];\n    var time;\n\n    if (!stepSize) {\n        stepSize = determineStepSize(min, max, minor, capacity);\n    }\n\n    // For 'week' unit, handle the first day of week option\n    if (weekday) {\n        first = first.isoWeekday(weekday);\n        last = last.isoWeekday(weekday);\n    }\n\n    // Align first/last ticks on unit\n    first = first.startOf(weekday ? 'day' : minor);\n    last = last.startOf(weekday ? 'day' : minor);\n\n    // Make sure that the last tick include max\n    if (last < max) {\n        last.add(1, minor);\n    }\n\n    time = moment(first);\n\n    if (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n        // Align the first tick on the previous `minor` unit aligned on the `major` unit:\n        // we first aligned time on the previous `major` unit then add the number of full\n        // stepSize there is between first and the previous major time.\n        time.startOf(major);\n        time.add(~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n    }\n\n    for (; time < last; time.add(stepSize, minor)) {\n        ticks.push(+time);\n    }\n\n    ticks.push(+time);\n\n    return ticks;\n}\n\n/**\n * Returns the right and left offsets from edges in the form of {left, right}.\n * Offsets are added when the `offset` option is true.\n */\nfunction computeOffsets(table, ticks, min, max, options)\n{\n    var left = 0;\n    var right = 0;\n    var upper, lower;\n\n    if (options.offset && ticks.length) {\n        if (!options.time.min) {\n            upper = ticks.length > 1 ? ticks[1] : max;\n            lower = ticks[0];\n            left = (\n                interpolate(table, 'time', upper, 'pos') -\n                interpolate(table, 'time', lower, 'pos')\n            ) / 2;\n        }\n        if (!options.time.max) {\n            upper = ticks[ticks.length - 1];\n            lower = ticks.length > 1 ? ticks[ticks.length - 2] : min;\n            right = (\n                interpolate(table, 'time', upper, 'pos') -\n                interpolate(table, 'time', lower, 'pos')\n            ) / 2;\n        }\n    }\n\n    return {left: left, right: right};\n}\n\nfunction ticksFromTimestamps(values, majorUnit)\n{\n    var ticks = [];\n    var i, ilen, value, major;\n\n    for (i = 0, ilen = values.length; i < ilen; ++i) {\n        value = values[i];\n        major = majorUnit ? value === +moment(value).startOf(majorUnit) : false;\n\n        ticks.push({\n            value: value,\n            major: major\n        });\n    }\n\n    return ticks;\n}\n\nfunction determineLabelFormat(data, timeOpts)\n{\n    var i, momentDate, hasTime;\n    var ilen = data.length;\n\n    // find the label with the most parts (milliseconds, minutes, etc.)\n    // format all labels with the same level of detail as the most specific label\n    for (i = 0; i < ilen; i++) {\n        momentDate = momentify(data[i], timeOpts);\n        if (momentDate.millisecond() !== 0) {\n            return 'MMM D, YYYY h:mm:ss.SSS a';\n        }\n        if (momentDate.second() !== 0 || momentDate.minute() !== 0 || momentDate.hour() !== 0) {\n            hasTime = true;\n        }\n    }\n    if (hasTime) {\n        return 'MMM D, YYYY h:mm:ss a';\n    }\n    return 'MMM D, YYYY';\n}\n\nmodule.exports = function (Chart) {\n\n    var defaultConfig = {\n        position: 'bottom',\n\n        /**\n         * Data distribution along the scale:\n         * - 'linear': data are spread according to their time (distances can vary),\n         * - 'series': data are spread at the same distance from each other.\n         * @see https://github.com/chartjs/Chart.js/pull/4507\n         * @since 2.7.0\n         */\n        distribution: 'linear',\n\n        /**\n         * Scale boundary strategy (bypassed by min/max time options)\n         * - `data`: make sure data are fully visible, ticks outside are removed\n         * - `ticks`: make sure ticks are fully visible, data outside are truncated\n         * @see https://github.com/chartjs/Chart.js/pull/4556\n         * @since 2.7.0\n         */\n        bounds: 'data',\n\n        time: {\n            parser: false, // false == a pattern string from http://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n            format: false, // DEPRECATED false == date objects, moment object, callback or a pattern string from http://momentjs.com/docs/#/parsing/string-format/\n            unit: false, // false == automatic or override with week, month, year, etc.\n            round: false, // none, or override with week, month, year, etc.\n            displayFormat: false, // DEPRECATED\n            isoWeekday: false, // override week start day - see http://momentjs.com/docs/#/get-set/iso-weekday/\n            minUnit: 'millisecond',\n\n            // defaults to unit's corresponding unitFormat below or override using pattern string from http://momentjs.com/docs/#/displaying/format/\n            displayFormats: {\n                millisecond: 'h:mm:ss.SSS a', // 11:20:01.123 AM,\n                second: 'h:mm:ss a', // 11:20:01 AM\n                minute: 'h:mm a', // 11:20 AM\n                hour: 'hA', // 5PM\n                day: 'MMM D', // Sep 4\n                week: 'll', // Week 46, or maybe \"[W]WW - YYYY\" ?\n                month: 'MMM YYYY', // Sept 2015\n                quarter: '[Q]Q - YYYY', // Q3\n                year: 'YYYY' // 2015\n            },\n        },\n        ticks: {\n            autoSkip: false,\n\n            /**\n             * Ticks generation input values:\n             * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n             * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n             * - 'labels': generates ticks from user given `data.labels` values ONLY.\n             * @see https://github.com/chartjs/Chart.js/pull/4507\n             * @since 2.7.0\n             */\n            source: 'auto',\n\n            major: {\n                enabled: false\n            }\n        }\n    };\n\n    var TimeScale = Chart.Scale.extend({\n        initialize: function () {\n            if (!moment) {\n                throw new Error('Chart.js - Moment.js could not be found! You must include it before Chart.js to use the time scale. Download at https://momentjs.com');\n            }\n\n            this.mergeTicksOptions();\n\n            Chart.Scale.prototype.initialize.call(this);\n        },\n\n        update: function () {\n            var me = this;\n            var options = me.options;\n\n            // DEPRECATIONS: output a message only one time per update\n            if (options.time && options.time.format) {\n                console.warn('options.time.format is deprecated and replaced by options.time.parser.');\n            }\n\n            return Chart.Scale.prototype.update.apply(me, arguments);\n        },\n\n        /**\n         * Allows data to be referenced via 't' attribute\n         */\n        getRightValue: function (rawValue) {\n            if (rawValue && rawValue.t !== undefined) {\n                rawValue = rawValue.t;\n            }\n            return Chart.Scale.prototype.getRightValue.call(this, rawValue);\n        },\n\n        determineDataLimits: function () {\n            var me = this;\n            var chart = me.chart;\n            var timeOpts = me.options.time;\n            var unit = timeOpts.unit || 'day';\n            var min = MAX_INTEGER;\n            var max = MIN_INTEGER;\n            var timestamps = [];\n            var datasets = [];\n            var labels = [];\n            var i, j, ilen, jlen, data, timestamp;\n\n            // Convert labels to timestamps\n            for (i = 0, ilen = chart.data.labels.length; i < ilen; ++i) {\n                labels.push(parse(chart.data.labels[i], me));\n            }\n\n            // Convert data to timestamps\n            for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n                if (chart.isDatasetVisible(i)) {\n                    data = chart.data.datasets[i].data;\n\n                    // Let's consider that all data have the same format.\n                    if (helpers.isObject(data[0])) {\n                        datasets[i] = [];\n\n                        for (j = 0, jlen = data.length; j < jlen; ++j) {\n                            timestamp = parse(data[j], me);\n                            timestamps.push(timestamp);\n                            datasets[i][j] = timestamp;\n                        }\n                    } else {\n                        timestamps.push.apply(timestamps, labels);\n                        datasets[i] = labels.slice(0);\n                    }\n                } else {\n                    datasets[i] = [];\n                }\n            }\n\n            if (labels.length) {\n                // Sort labels **after** data have been converted\n                labels = arrayUnique(labels).sort(sorter);\n                min = Math.min(min, labels[0]);\n                max = Math.max(max, labels[labels.length - 1]);\n            }\n\n            if (timestamps.length) {\n                timestamps = arrayUnique(timestamps).sort(sorter);\n                min = Math.min(min, timestamps[0]);\n                max = Math.max(max, timestamps[timestamps.length - 1]);\n            }\n\n            min = parse(timeOpts.min, me) || min;\n            max = parse(timeOpts.max, me) || max;\n\n            // In case there is no valid min/max, set limits based on unit time option\n            min = min === MAX_INTEGER ? +moment().startOf(unit) : min;\n            max = max === MIN_INTEGER ? +moment().endOf(unit) + 1 : max;\n\n            // Make sure that max is strictly higher than min (required by the lookup table)\n            me.min = Math.min(min, max);\n            me.max = Math.max(min + 1, max);\n\n            // PRIVATE\n            me._horizontal = me.isHorizontal();\n            me._table = [];\n            me._timestamps = {\n                data: timestamps,\n                datasets: datasets,\n                labels: labels\n            };\n        },\n\n        buildTicks: function () {\n            var me = this;\n            var min = me.min;\n            var max = me.max;\n            var options = me.options;\n            var timeOpts = options.time;\n            var timestamps = [];\n            var ticks = [];\n            var i, ilen, timestamp;\n\n            switch (options.ticks.source) {\n            case 'data':\n                timestamps = me._timestamps.data;\n                break;\n            case 'labels':\n                timestamps = me._timestamps.labels;\n                break;\n            case 'auto':\n            default:\n                timestamps = generate(min, max, me.getLabelCapacity(min), options);\n            }\n\n            if (options.bounds === 'ticks' && timestamps.length) {\n                min = timestamps[0];\n                max = timestamps[timestamps.length - 1];\n            }\n\n            // Enforce limits with user min/max options\n            min = parse(timeOpts.min, me) || min;\n            max = parse(timeOpts.max, me) || max;\n\n            // Remove ticks outside the min/max range\n            for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n                timestamp = timestamps[i];\n                if (timestamp >= min && timestamp <= max) {\n                    ticks.push(timestamp);\n                }\n            }\n\n            me.min = min;\n            me.max = max;\n\n            // PRIVATE\n            me._unit = timeOpts.unit || determineUnitForFormatting(ticks, timeOpts.minUnit, me.min, me.max);\n            me._majorUnit = determineMajorUnit(me._unit);\n            me._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n            me._offsets = computeOffsets(me._table, ticks, min, max, options);\n            me._labelFormat = determineLabelFormat(me._timestamps.data, timeOpts);\n\n            return ticksFromTimestamps(ticks, me._majorUnit);\n        },\n\n        getLabelForIndex: function (index, datasetIndex) {\n            var me = this;\n            var data = me.chart.data;\n            var timeOpts = me.options.time;\n            var label = data.labels && index < data.labels.length ? data.labels[index] : '';\n            var value = data.datasets[datasetIndex].data[index];\n\n            if (helpers.isObject(value)) {\n                label = me.getRightValue(value);\n            }\n            if (timeOpts.tooltipFormat) {\n                return momentify(label, timeOpts).format(timeOpts.tooltipFormat);\n            }\n            if (typeof label === 'string') {\n                return label;\n            }\n\n            return momentify(label, timeOpts).format(me._labelFormat);\n        },\n\n        /**\n         * Function to format an individual tick mark\n         * @private\n         */\n        tickFormatFunction: function (tick, index, ticks, formatOverride) {\n            var me = this;\n            var options = me.options;\n            var time = tick.valueOf();\n            var formats = options.time.displayFormats;\n            var minorFormat = formats[me._unit];\n            var majorUnit = me._majorUnit;\n            var majorFormat = formats[majorUnit];\n            var majorTime = tick.clone().startOf(majorUnit).valueOf();\n            var majorTickOpts = options.ticks.major;\n            var major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n            var label = tick.format(formatOverride ? formatOverride : major ? majorFormat : minorFormat);\n            var tickOpts = major ? majorTickOpts : options.ticks.minor;\n            var formatter = helpers.valueOrDefault(tickOpts.callback, tickOpts.userCallback);\n\n            return formatter ? formatter(label, index, ticks) : label;\n        },\n\n        convertTicksToLabels: function (ticks) {\n            var labels = [];\n            var i, ilen;\n\n            for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n                labels.push(this.tickFormatFunction(moment(ticks[i].value), i, ticks));\n            }\n\n            return labels;\n        },\n\n        /**\n         * @private\n         */\n        getPixelForOffset: function (time) {\n            var me = this;\n            var size = me._horizontal ? me.width : me.height;\n            var start = me._horizontal ? me.left : me.top;\n            var pos = interpolate(me._table, 'time', time, 'pos');\n\n            return start + size * (me._offsets.left + pos) / (me._offsets.left + 1 + me._offsets.right);\n        },\n\n        getPixelForValue: function (value, index, datasetIndex) {\n            var me = this;\n            var time = null;\n\n            if (index !== undefined && datasetIndex !== undefined) {\n                time = me._timestamps.datasets[datasetIndex][index];\n            }\n\n            if (time === null) {\n                time = parse(value, me);\n            }\n\n            if (time !== null) {\n                return me.getPixelForOffset(time);\n            }\n        },\n\n        getPixelForTick: function (index) {\n            var ticks = this.getTicks();\n            return index >= 0 && index < ticks.length ?\n                this.getPixelForOffset(ticks[index].value) :\n                null;\n        },\n\n        getValueForPixel: function (pixel) {\n            var me = this;\n            var size = me._horizontal ? me.width : me.height;\n            var start = me._horizontal ? me.left : me.top;\n            var pos = (size ? (pixel - start) / size : 0) * (me._offsets.left + 1 + me._offsets.left) - me._offsets.right;\n            var time = interpolate(me._table, 'pos', pos, 'time');\n\n            return moment(time);\n        },\n\n        /**\n         * Crude approximation of what the label width might be\n         * @private\n         */\n        getLabelWidth: function (label) {\n            var me = this;\n            var ticksOpts = me.options.ticks;\n            var tickLabelWidth = me.ctx.measureText(label).width;\n            var angle = helpers.toRadians(ticksOpts.maxRotation);\n            var cosRotation = Math.cos(angle);\n            var sinRotation = Math.sin(angle);\n            var tickFontSize = helpers.valueOrDefault(ticksOpts.fontSize, defaults.global.defaultFontSize);\n\n            return (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation);\n        },\n\n        /**\n         * @private\n         */\n        getLabelCapacity: function (exampleTime) {\n            var me = this;\n\n            var formatOverride = me.options.time.displayFormats.millisecond;    // Pick the longest format for guestimation\n\n            var exampleLabel = me.tickFormatFunction(moment(exampleTime), 0, [], formatOverride);\n            var tickLabelWidth = me.getLabelWidth(exampleLabel);\n            var innerWidth = me.isHorizontal() ? me.width : me.height;\n\n            var capacity = Math.floor(innerWidth / tickLabelWidth);\n            return capacity > 0 ? capacity : 1;\n        }\n    });\n\n    Chart.scaleService.registerScaleType('time', TimeScale, defaultConfig);\n};\n\n},{\"25\":25,\"45\":45,\"6\":6}]},{},[7])(7)\n});","Webkul_Marketplace/js/earning/date-range.js":"/**\n * Webkul Software.\n *\n * @category  Webkul\n * @package   Webkul_Marketplace\n * @author    Webkul Software Private Limited\n * @copyright Webkul Software Private Limited (https://webkul.com)\n * @license   https://store.webkul.com/license.html\n */\n /*jshint jquery:true*/\n define([\n    \"jquery\",\n    \"jquery/ui\",\n    'mage/calendar'\n], function ($) {\n    'use strict';\n    $.widget('mage.earningDateRange', {\n        _create: function () {\n            var self = this;\n            $(\".wk-mp-design\").dateRange({\n                'dateFormat':'mm/dd/yy',\n                'from': {\n                    'id': 'earning-from-date'\n                },\n                'to': {\n                    'id': 'earning-to-date'\n                }\n            });\n        }\n    });\n    return $.mage.earningDateRange;\n});\n","Webkul_Marketplace/js/earning/utils.js":"/**\n * Webkul Software.\n *\n * @category  Webkul\n * @package   Webkul_Marketplace\n * @author    Webkul Software Private Limited\n * @copyright Webkul Software Private Limited (https://webkul.com)\n * @license   https://store.webkul.com/license.html\n */\n\n'use strict';\n\nwindow.chartColors = {\n    red: 'rgb(255, 99, 132)',\n    orange: 'rgb(255, 159, 64)',\n    yellow: 'rgb(255, 205, 86)',\n    green: 'rgb(75, 192, 192)',\n    blue: 'rgb(54, 162, 235)',\n    purple: 'rgb(153, 102, 255)',\n    grey: 'rgb(201, 203, 207)'\n};\n\n(function (global) {\n    var Months = [\n        'January',\n        'February',\n        'March',\n        'April',\n        'May',\n        'June',\n        'July',\n        'August',\n        'September',\n        'October',\n        'November',\n        'December'\n    ];\n\n    var COLORS = [\n        '#4dc9f6',\n        '#f67019',\n        '#f53794',\n        '#537bc4',\n        '#acc236',\n        '#166a8f',\n        '#00a950',\n        '#58595b',\n        '#8549ba'\n    ];\n\n    if (typeof global == \"undefined\") {\n        global=[];\n    }\n    var Samples = global.Samples || (global.Samples = {});\n    var Color = global.Color;\n\n    Samples.utils = {\n        srand: function (seed) {\n            this._seed = seed;\n        },\n\n        rand: function (min, max) {\n            var seed = this._seed;\n            min = min === undefined ? 0 : min;\n            max = max === undefined ? 1 : max;\n            this._seed = (seed * 9301 + 49297) % 233280;\n            return min + (this._seed / 233280) * (max - min);\n        },\n\n        numbers: function (config) {\n            var cfg = config || {};\n            var min = cfg.min || 0;\n            var max = cfg.max || 1;\n            var from = cfg.from || [];\n            var count = cfg.count || 8;\n            var decimals = cfg.decimals || 8;\n            var continuity = cfg.continuity || 1;\n            var dfactor = Math.pow(10, decimals) || 0;\n            var data = [];\n            var i, value;\n\n            for (i = 0; i < count; ++i) {\n                value = (from[i] || 0) + this.rand(min, max);\n                if (this.rand() <= continuity) {\n                    data.push(Math.round(dfactor * value) / dfactor);\n                } else {\n                    data.push(null);\n                }\n            }\n\n            return data;\n        },\n\n        labels: function (config) {\n            var cfg = config || {};\n            var min = cfg.min || 0;\n            var max = cfg.max || 100;\n            var count = cfg.count || 8;\n            var step = (max - min) / count;\n            var decimals = cfg.decimals || 8;\n            var dfactor = Math.pow(10, decimals) || 0;\n            var prefix = cfg.prefix || '';\n            var values = [];\n            var i;\n\n            for (i = min; i < max; i += step) {\n                values.push(prefix + Math.round(dfactor * i) / dfactor);\n            }\n\n            return values;\n        },\n\n        months: function (config) {\n            var cfg = config || {};\n            var count = cfg.count || 12;\n            var section = cfg.section;\n            var values = [];\n            var i, value;\n\n            for (i = 0; i < count; ++i) {\n                value = Months[Math.ceil(i) % 12];\n                values.push(value.substring(0, section));\n            }\n\n            return values;\n        },\n\n        color: function (index) {\n            return COLORS[index % COLORS.length];\n        },\n\n        transparentize: function (color, opacity) {\n            var alpha = opacity === undefined ? 0.5 : 1 - opacity;\n            return Color(color).alpha(alpha).rgbString();\n        }\n    };\n\n    // DEPRECATED\n    window.randomScalingFactor = function () {\n        return Math.round(Samples.utils.rand(-100, 100));\n    };\n\n    // INITIALIZATION\n\n    Samples.utils.srand(Date.now());\n\n    // Google Analytics\n    /* eslint-disable */\n    if (document.location.hostname.match(/^(www\\.)?chartjs\\.org$/)) {\n        (function (i,s,o,g,r,a,m) {\n            i['GoogleAnalyticsObject']=r;i[r]=i[r] || function () {\n            (i[r].q=i[r].q || []).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n            m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n            })(window,document,'script','//www.google-analytics.com/analytics.js','ga');\n            ga('create', 'UA-28909194-3', 'auto');\n            ga('send', 'pageview');\n        }\n    /* eslint-enable */\n\n}(this));\n","Webkul_Marketplace/js/form/element/date.js":"/**\n * Webkul Software.\n *\n * @category  Webkul\n * @package   Webkul_Marketplace\n * @author    Webkul Software Private Limited\n * @copyright Webkul Software Private Limited (https://webkul.com)\n * @license   https://store.webkul.com/license.html\n */\ndefine([\n    'moment',\n    'mageUtils',\n    'Magento_Ui/js/form/element/abstract',\n    'moment-timezone-with-data'\n], function (moment, utils, Abstract) {\n    'use strict';\n\n    return Abstract.extend({\n        defaults: {\n            options: {},\n\n            storeTimeZone: 'UTC',\n\n            validationParams: {\n                dateFormat: '${ $.outputDateFormat }'\n            },\n\n            /**\n             * Format of date that comes from the\n             * server (ICU Date Format).\n             *\n             * Used only in date picker mode\n             * (this.options.showsTime == false).\n             *\n             * @type {String}\n             */\n            inputDateFormat: 'y-MM-dd',\n\n            /**\n             * Format of date that should be sent to the\n             * server (ICU Date Format).\n             *\n             * Used only in date picker mode\n             * (this.options.showsTime == false).\n             *\n             * @type {String}\n             */\n            outputDateFormat: 'MM/dd/y',\n\n            /**\n             * Date/time format that is used to display date in\n             * the input field.\n             *\n             * @type {String}\n             */\n            pickerDateTimeFormat: '',\n\n            pickerDefaultDateFormat: 'MM/dd/y', // ICU Date Format\n            pickerDefaultTimeFormat: 'h:mm a', // ICU Time Format\n\n            elementTmpl: 'Webkul_Marketplace/form/element/date',\n\n            /**\n             * Format needed by moment timezone for conversion\n             */\n            timezoneFormat: 'YYYY-MM-DD HH:mm',\n\n            listens: {\n                'value': 'onValueChange',\n                'shiftedValue': 'onShiftedValueChange'\n            },\n\n            /**\n             * Date/time value shifted to corresponding timezone\n             * according to this.storeTimeZone property. This value\n             * will be sent to the server.\n             *\n             * @type {String}\n             */\n            shiftedValue: ''\n        },\n\n        /**\n         * Initializes regular properties of instance.\n         *\n         * @returns {Object} Chainable.\n         */\n        initConfig: function () {\n            this._super();\n\n            if (!this.options.dateFormat) {\n                this.options.dateFormat = this.pickerDefaultDateFormat;\n            }\n\n            if (!this.options.timeFormat) {\n                this.options.timeFormat = this.pickerDefaultTimeFormat;\n            }\n\n            this.prepareDateTimeFormats();\n\n            return this;\n        },\n\n        /**\n         * @inheritdoc\n         */\n        initObservable: function () {\n            return this._super().observe(['shiftedValue']);\n        },\n\n        /**\n         * Prepares and sets date/time value that will be displayed\n         * in the input field.\n         *\n         * @param {String} value\n         */\n        onValueChange: function (value) {\n            var dateFormat,\n                shiftedValue;\n\n            if (value) {\n                if (this.options.showsTime) {\n                    shiftedValue = moment.tz(value, 'UTC').tz(this.storeTimeZone);\n                } else {\n                    dateFormat = this.shiftedValue() ? this.outputDateFormat : this.inputDateFormat;\n\n                    shiftedValue = moment(value, dateFormat);\n                }\n\n                shiftedValue = shiftedValue.format(this.pickerDateTimeFormat);\n            } else {\n                shiftedValue = '';\n            }\n\n            if (shiftedValue !== this.shiftedValue()) {\n                this.shiftedValue(shiftedValue);\n            }\n        },\n\n        /**\n         * Prepares and sets date/time value that will be sent\n         * to the server.\n         *\n         * @param {String} shiftedValue\n         */\n        onShiftedValueChange: function (shiftedValue) {\n            var value,\n                formattedValue,\n                momentValue;\n\n            if (shiftedValue) {\n                momentValue = moment(shiftedValue, this.pickerDateTimeFormat);\n\n                if (this.options.showsTime) {\n                    formattedValue = moment(momentValue).format(this.timezoneFormat);\n                    value = moment.tz(formattedValue, this.storeTimeZone).tz('UTC').toISOString();\n                } else {\n                    value = momentValue.format(this.outputDateFormat);\n                }\n            } else {\n                value = '';\n            }\n\n            if (value !== this.value()) {\n                this.value(value);\n            }\n        },\n\n        /**\n         * Prepares and converts all date/time formats to be compatible\n         * with moment.js library.\n         */\n        prepareDateTimeFormats: function () {\n            this.pickerDateTimeFormat = this.options.dateFormat;\n\n            if (this.options.showsTime) {\n                this.pickerDateTimeFormat += ' ' + this.options.timeFormat;\n            }\n\n            this.pickerDateTimeFormat = utils.convertToMomentFormat(this.pickerDateTimeFormat);\n\n            if (this.options.dateFormat) {\n                this.outputDateFormat = this.options.dateFormat;\n            }\n\n            this.inputDateFormat = utils.convertToMomentFormat(this.inputDateFormat);\n            this.outputDateFormat = utils.convertToMomentFormat(this.outputDateFormat);\n\n            this.validationParams.dateFormat = this.outputDateFormat;\n        }\n    });\n});\n","Webkul_Marketplace/js/form/element/price.js":"/**\n * Webkul Software.\n *\n * @category  Webkul\n * @package   Webkul_Marketplace\n * @author    Webkul Software Private Limited\n * @copyright Webkul Software Private Limited (https://webkul.com)\n * @license   https://store.webkul.com/license.html\n */\ndefine([\n    'underscore',\n    'Magento_Ui/js/form/element/abstract',\n], function (_, Element) {\n    'use strict';\n\n    return Element.extend({\n        defaults: {\n            valueUpdate: 'afterkeydown',\n        },\n        initialize: function () {\n            this._super();\n            this.value(this.normalizePrice());\n            return this;\n        },\n        onUpdate: function () {\n            this._super();\n            this.value(this.normalizePrice());\n            return this;\n        },\n        normalizePrice: function () {\n            var value = this.value();\n            var regexp = /\\d+.+\\d/;\n            var result = regexp.exec(value);\n            return result[0];\n        }\n    });\n});","Webkul_Marketplace/js/grid/listing.js":"/**\n * Webkul Software.\n *\n * @category  Webkul\n * @package   Webkul_Marketplace\n * @author    Webkul Software Private Limited\n * @copyright Webkul Software Private Limited (https://webkul.com)\n * @license   https://store.webkul.com/license.html\n */\ndefine([\n    'Magento_Ui/js/grid/listing'\n],function(Component){\n    'use strict';\n    \n    return Component.extend({\n        defaults: {\n            editorConfig: {\n                component: 'Webkul_Marketplace/js/grid/editing/editor'\n            }\n        }\n    })\n}\n)","Webkul_Marketplace/js/grid/provider.js":"/**\n * Webkul Software.\n *\n * @category  Webkul\n * @package   Webkul_Marketplace\n * @author    Webkul Software Private Limited\n * @copyright Webkul Software Private Limited (https://webkul.com)\n * @license   https://store.webkul.com/license.html\n */\ndefine([\n    'jquery',\n    'underscore',\n    'mageUtils',\n    'rjsResolver',\n    'uiLayout',\n    'Magento_Ui/js/modal/alert',\n    'mage/translate',\n    'uiElement',\n    'notification',\n    'Magento_Ui/js/grid/data-storage'\n], function ($, _, utils, resolver, layout, alert, $t, Element, notification) {\n    'use strict';\n\n    return Element.extend({\n        defaults: {\n            firstLoad: true,\n            storageConfig: {\n                component: 'Magento_Ui/js/grid/data-storage',\n                provider: '${ $.storageConfig.name }',\n                name: '${ $.name }_storage',\n                updateUrl: '${ $.update_url }'\n            },\n            listens: {\n                params: 'onParamsChange',\n                requestConfig: 'updateRequestConfig'\n            }\n        },\n\n        /**\n         * Initializes provider component.\n         *\n         * @returns {Provider} Chainable.\n         */\n        initialize: function () {\n            utils.limit(this, 'onParamsChange', 5);\n            _.bindAll(this, 'onReload');\n\n            this._super()\n                .initStorage()\n                .clearData();\n\n            // Load data when there will\n            // be no more pending assets.\n            resolver(this.reload, this);\n            notification({}, $('body'));\n            return this;\n        },\n\n        /**\n         * Initializes storage component.\n         *\n         * @returns {Provider} Chainable.\n         */\n        initStorage: function () {\n            layout([this.storageConfig]);\n\n            return this;\n        },\n\n        /**\n         * Clears provider's data properties.\n         *\n         * @returns {Provider} Chainable.\n         */\n        clearData: function () {\n            this.setData({\n                items: [],\n                totalRecords: 0\n            });\n\n            return this;\n        },\n\n        /**\n         * Overrides current data with a provided one.\n         *\n         * @param {Object} data - New data object.\n         * @returns {Provider} Chainable.\n         */\n        setData: function (data) {\n            data = this.processData(data);\n\n            this.set('data', data);\n\n            return this;\n        },\n\n        /**\n         * Processes data before applying it.\n         *\n         * @param {Object} data - Data to be processed.\n         * @returns {Object}\n         */\n        processData: function (data) {\n            var items = data.items;\n\n            _.each(items, function (record, index) {\n                record._rowIndex = index;\n            });\n\n            return data;\n        },\n\n        /**\n         * Reloads data with current parameters.\n         *\n         * @returns {Promise} Reload promise object.\n         */\n        reload: function (options) {\n            if (this.params.namespace=='marketplace_related_product_listing') {\n                this.params.current_product_id = $(\"input[name='product_id']\").val();\n            } else if (this.params.namespace=='marketplace_crosssell_product_listing') {\n                this.params.current_product_id = $(\"input[name='product_id']\").val();\n            } else if (this.params.namespace=='marketplace_upsell_product_listing') {\n                this.params.current_product_id = $(\"input[name='product_id']\").val();\n            } else if (this.params.namespace=='marketplace_orders_listing') {\n                var arr = window.location.pathname.split('/customer_id/');\n                if (arr[1] !== undefined) {\n                    if (parseInt(arr[1])) {\n                        this.params.customer_id = parseInt(arr[1]);\n                    }\n                }\n            }\n            \n            var request = this.storage().getData(this.params, options);\n\n            this.trigger('reload');\n\n            request\n                .done(this.onReload)\n                .fail(this.onError);\n\n            return request;\n        },\n\n        /**\n         * Handles changes of 'params' object.\n         */\n        onParamsChange: function () {\n            // It's necessary to make a reload only\n            // after the initial loading has been made.\n            if (!this.firstLoad) {\n                this.reload();\n            }\n        },\n\n        /**\n         * Handles reload error.\n         */\n        onError: function (xhr) {\n            if (xhr.statusText === 'abort') {\n                return;\n            }\n\n            alert({\n                content: $t('Something went wrong.')\n            });\n        },\n\n        /**\n         * Handles successful data reload.\n         *\n         * @param {Object} data - Retrieved data object.\n         */\n        onReload: function (data) {\n            this.firstLoad = false;\n\n            this.setData(data)\n                .trigger('reloaded');\n        },\n\n        /**\n         * Updates storage's request configuration\n         *\n         * @param {Object} requestConfig\n         */\n        updateRequestConfig: function (requestConfig) {\n            if (this.storage()) {\n                _.extend(this.storage().requestConfig, requestConfig);\n            }\n        }\n    });\n});\n","Webkul_Marketplace/js/grid/columns/actionlink.js":"/**\n * Webkul Software.\n *\n * @category  Webkul\n * @package   Webkul_Marketplace\n * @author    Webkul Software Private Limited\n * @copyright Webkul Software Private Limited (https://webkul.com)\n * @license   https://store.webkul.com/license.html\n */\ndefine([\n    './column',\n    'jquery',\n], function (Column, $) {\n    'use strict';\n    return Column.extend({\n        defaults: {\n            bodyTmpl: 'ui/grid/cells/html',\n            fieldClass: {\n                'data-grid-html-cell': true\n            }\n        },\n        gethtml: function (row) {\n            return row[this.index + '_html'];\n        },\n        getLabel: function (row) {\n            return row[this.index + '_html']\n        },\n        getFieldHandler: function (row) {\n            return false;\n        }\n    });\n});\n","Webkul_Marketplace/js/grid/columns/attributeSet.js":"/**\n * Webkul Software.\n *\n * @category  Webkul\n * @package   Webkul_Marketplace\n * @author    Webkul Software Private Limited\n * @copyright Webkul Software Private Limited (https://webkul.com)\n * @license   https://store.webkul.com/license.html\n */\ndefine([\n    'underscore',\n    './column'\n], function (_, Column) {\n    'use strict';\n\n    return Column.extend({\n        defaults: {\n            fieldClass: {\n                'wk-mp-grid-attributeset-cell': true\n            }\n        },\n        /*eslint-disable eqeqeq*/\n        /**\n         * Retrieves label associated with a provided value.\n         *\n         * @returns {String}\n         */\n        getLabel: function () {\n            var options = this.options || [],\n                values = this._super(),\n                label = [];\n\n            if (_.isString(values)) {\n                values = values.split(',');\n            }\n\n            if (!Array.isArray(values)) {\n                values = [values];\n            }\n\n            values = values.map(function (value) {\n                return value + '';\n            });\n\n            options.forEach(function (item) {\n                if (_.contains(values, item.value + '')) {\n                    label.push(item.label);\n                }\n            });\n\n            return label.join(', ');\n        }\n\n        /*eslint-enable eqeqeq*/\n    });\n});\n","Webkul_Marketplace/js/grid/columns/column.js":"/**\n * Webkul Software.\n *\n * @category  Webkul\n * @package   Webkul_Marketplace\n * @author    Webkul Software Private Limited\n * @copyright Webkul Software Private Limited (https://webkul.com)\n * @license   https://store.webkul.com/license.html\n */\ndefine([\n    'underscore',\n    'uiRegistry',\n    'mageUtils',\n    'uiElement'\n], function (_, registry, utils, Element) {\n    'use strict';\n\n    return Element.extend({\n        defaults: {\n            headerTmpl: 'ui/grid/columns/text',\n            bodyTmpl: 'ui/grid/cells/text',\n            disableAction: false,\n            controlVisibility: true,\n            sortable: true,\n            sorting: false,\n            visible: true,\n            draggable: true,\n            fieldClass: {},\n            ignoreTmpls: {\n                fieldAction: true\n            },\n            statefull: {\n                visible: true,\n                sorting: true\n            },\n            imports: {\n                exportSorting: 'sorting'\n            },\n            listens: {\n                '${ $.provider }:params.sorting.field': 'onSortChange'\n            },\n            modules: {\n                source: '${ $.provider }'\n            }\n        },\n\n        /**\n         * Initializes column component.\n         *\n         * @returns {Column} Chainable.\n         */\n        initialize: function () {\n            this._super()\n                .initFieldClass();\n\n            return this;\n        },\n\n        /**\n         * Initializes observable properties.\n         *\n         * @returns {Column} Chainable.\n         */\n        initObservable: function () {\n            this._super()\n                .track([\n                    'visible',\n                    'sorting',\n                    'disableAction'\n                ])\n                .observe([\n                    'dragging'\n                ]);\n\n            return this;\n        },\n\n        /**\n         * Extends list of field classes.\n         *\n         * @returns {Column} Chainable.\n         */\n        initFieldClass: function () {\n            _.extend(this.fieldClass, {\n                _dragging: this.dragging\n            });\n\n            return this;\n        },\n\n        /**\n         * Applies specified stored state of a column or one of its' properties.\n         *\n         * @param {String} state - Defines what state should be used: saved or default.\n         * @param {String} [property] - Defines what columns' property should be applied.\n         *      If not specified, then all columns stored properties will be used.\n         * @returns {Column} Chainable.\n         */\n        applyState: function (state, property) {\n            var namespace = this.storageConfig.root;\n\n            if (property) {\n                namespace += '.' + property;\n            }\n\n            this.storage('applyStateOf', state, namespace);\n\n            return this;\n        },\n\n        /**\n         * Sets columns' sorting. If column is currently sorted,\n         * than its' direction will be toggled.\n         *\n         * @param {*} [enable=true] - If false, than sorting will\n         *      be removed from a column.\n         * @returns {Column} Chainable.\n         */\n        sort: function (enable) {\n            if (!this.sortable) {\n                return this;\n            }\n\n            enable !== false ?\n                this.toggleSorting() :\n                this.sorting = false;\n\n            return this;\n        },\n\n        /**\n         * Sets descending columns' sorting.\n         *\n         * @returns {Column} Chainable.\n         */\n        sortDescending: function () {\n            if (this.sortable) {\n                this.sorting = 'desc';\n            }\n\n            return this;\n        },\n\n        /**\n         * Sets ascending columns' sorting.\n         *\n         * @returns {Column} Chainable.\n         */\n        sortAscending: function () {\n            if (this.sortable) {\n                this.sorting = 'asc';\n            }\n\n            return this;\n        },\n\n        /**\n         * Toggles sorting direction.\n         *\n         * @returns {Column} Chainable.\n         */\n        toggleSorting: function () {\n            this.sorting === 'asc' ?\n                this.sortDescending() :\n                this.sortAscending();\n\n            return this;\n        },\n\n        /**\n         * Checks if column is sorted.\n         *\n         * @returns {Boolean}\n         */\n        isSorted: function () {\n            return !!this.sorting;\n        },\n\n        /**\n         * Exports sorting data to the dataProvider if\n         * sorting of a column is enabled.\n         */\n        exportSorting: function () {\n            if (!this.sorting) {\n                return;\n            }\n\n            this.source('set', 'params.sorting', {\n                field: this.index,\n                direction: this.sorting\n            });\n        },\n\n        /**\n         * Checks if column has an assigned action that will\n         * be performed when clicking on one of its' fields.\n         *\n         * @returns {Boolean}\n         */\n        hasFieldAction: function () {\n            return !!this.fieldAction;\n        },\n\n        /**\n         * Applies action described in a 'fieldAction' property.\n         *\n         * @param {Number} rowIndex - Index of a row which initiates action.\n         * @returns {Column} Chainable.\n         *\n         * @example Example of fieldAction definition, which is equivalent to\n         *      referencing to external component named 'listing.multiselect'\n         *      and calling its' method 'toggleSelect' with params [rowIndex, true] =>\n         *\n         *      {\n         *          provider: 'listing.multiselect',\n         *          target: 'toggleSelect',\n         *          params: ['${ $.$data.rowIndex }', true]\n         *      }\n         */\n        applyFieldAction: function (rowIndex) {\n            var action = this.fieldAction,\n                callback;\n\n            if (!this.hasFieldAction() || this.disableAction) {\n                return this;\n            }\n\n            action = utils.template(action, {\n                column: this,\n                rowIndex: rowIndex\n            }, true);\n\n            callback = this._getFieldCallback(action);\n\n            if (_.isFunction(callback)) {\n                callback();\n            }\n\n            return this;\n        },\n\n        /**\n         * Returns field action handler if it was specified.\n         *\n         * @param {Object} record - Record object with which action is associated.\n         * @returns {Function|Undefined}\n         */\n        getFieldHandler: function (record) {\n            if (this.hasFieldAction()) {\n                return this.applyFieldAction.bind(this, record._rowIndex);\n            }\n        },\n\n        /**\n         * Creates action callback based on its' data.\n         *\n         * @param {Object} action - Actions' object.\n         * @returns {Function|Boolean} Callback function or false\n         *      value if it was impossible create a callback.\n         */\n        _getFieldCallback: function (action) {\n            var args     = action.params || [],\n                callback = action.target;\n\n            if (action.provider && action.target) {\n                args.unshift(action.target);\n\n                callback = registry.async(action.provider);\n            }\n\n            if (!_.isFunction(callback)) {\n                return false;\n            }\n\n            return function () {\n                callback.apply(callback, args);\n            };\n        },\n\n        /**\n         * Ment to preprocess data associated with a current columns' field.\n         *\n         * @param {Object} record - Data to be preprocessed.\n         * @returns {String}\n         */\n        getLabel: function (record) {\n            return record[this.index];\n        },\n\n        /**\n         * Returns list of classes that should be applied to a field.\n         *\n         * @returns {Object}\n         */\n        getFieldClass: function () {\n            return this.fieldClass;\n        },\n\n        /**\n         * Returns path to the columns' header template.\n         *\n         * @returns {String}\n         */\n        getHeader: function () {\n            return this.headerTmpl;\n        },\n\n        /**\n         * Returns path to the columns' body template.\n         *\n         * @returns {String}\n         */\n        getBody: function () {\n            return this.bodyTmpl;\n        },\n\n        /**\n         * Listener of the providers' sorting state changes.\n         *\n         * @param {Srting} field - Field by which current sorting is performed.\n         */\n        onSortChange: function (field) {\n            if (field !== this.index) {\n                this.sort(false);\n            }\n        },\n        /**\n         * UnsanitizedHtml version of getLabel.\n         *\n         * @param {Object} record - Data to be preprocessed.\n         * @returns {String}\n         */\n         getLabelUnsanitizedHtml: function (record) {\n            return this.getLabel(record);\n        },\n    });\n});\n","Webkul_Marketplace/js/grid/columns/id.js":"/**\n * Webkul Software.\n *\n * @category  Webkul\n * @package   Webkul_Marketplace\n * @author    Webkul Software Private Limited\n * @copyright Webkul Software Private Limited (https://webkul.com)\n * @license   https://store.webkul.com/license.html\n */\ndefine([\n    './column',\n    'jquery'\n], function (Column, $) {\n    'use strict';\n\n    return Column.extend({\n        defaults: {\n            fieldClass: {\n                'wk-mp-grid-id-cell': true\n            }\n        }\n    });\n});\n","Webkul_Marketplace/js/grid/columns/link.js":"/**\n * Webkul Software.\n *\n * @category  Webkul\n * @package   Webkul_Marketplace\n * @author    Webkul Software Private Limited\n * @copyright Webkul Software Private Limited (https://webkul.com)\n * @license   https://store.webkul.com/license.html\n */\ndefine([\n    './column',\n    'jquery',\n], function (Column, $) {\n    'use strict';\n    return Column.extend({\n        defaults: {\n            bodyTmpl: 'ui/grid/cells/html',\n            fieldClass: {\n                'data-grid-html-cell': true\n            }\n        },\n        getFieldHandler: function (row) {\n            return false;\n        }\n    });\n});\n","Webkul_Marketplace/js/grid/columns/multiselect.js":"/**\n * Webkul Software.\n *\n * @category  Webkul\n * @package   Webkul_Marketplace\n * @author    Webkul Software Private Limited\n * @copyright Webkul Software Private Limited (https://webkul.com)\n * @license   https://store.webkul.com/license.html\n */\ndefine([\n    'underscore',\n    'mage/translate',\n    './column',\n    'Magento_Catalog/js/price-utils',\n    \"jquery\"\n], function (_, $t, Column, utils, $) {\n    'use strict';\n\n    return Column.extend({\n        defaults: {\n            headerTmpl: 'ui/grid/columns/multiselect',\n            bodyTmpl: 'ui/grid/cells/multiselect',\n            controlVisibility: false,\n            sortable: false,\n            draggable: false,\n            menuVisible: false,\n            excludeMode: false,\n            allSelected: false,\n            indetermine: false,\n            preserveSelectionsOnFilter: false,\n            disabled: [],\n            selected: [],\n            excluded: [],\n            fieldClass: {\n                'data-grid-checkbox-cell': true\n            },\n            actions: [{\n                value: 'selectAll',\n                label: $t('Select All')\n            }, {\n                value: 'deselectAll',\n                label: $t('Deselect All')\n            }, {\n                value: 'selectPage',\n                label: $t('Select All on This Page')\n            }, {\n                value: 'deselectPage',\n                label: $t('Deselect All on This Page')\n            }],\n\n            imports: {\n                totalRecords: '${ $.provider }:data.totalRecords',\n                rows: '${ $.provider }:data.items'\n            },\n\n            listens: {\n                '${ $.provider }:params.filters': 'onFilter',\n                selected: 'onSelectedChange',\n                rows: 'onRowsChange'\n            },\n\n            modules: {\n                source: '${ $.provider }'\n            }\n        },\n\n        /**\n         * Initializes observable properties.\n         *\n         * @returns {Multiselect} Chainable.\n         */\n        initObservable: function () {\n            this._super()\n                .observe([\n                    'disabled',\n                    'selected',\n                    'excluded',\n                    'excludeMode',\n                    'totalSelected',\n                    'allSelected',\n                    'indetermine',\n                    'totalRecords',\n                    'rows',\n                    'totalSellerPrice'\n                ]);\n\n            this.totalSellerPrice(utils.formatPrice(\"0.00\", this.priceFormat));\n            return this;\n        },\n\n        /**\n         * Selects specified record.\n         *\n         * @param {*} id - See definition of 'getId' method.\n         * @param {Boolean} [isIndex=false] - See definition of 'getId' method.\n         * @returns {Multiselect} Chainable.\n         */\n        select: function (id, isIndex) {\n            this._setSelection(id, isIndex, true);\n\n            return this;\n        },\n\n        /**\n         * Deselects specified record.\n         *\n         * @param {*} id - See definition of 'getId' method.\n         * @param {Boolean} [isIndex=false] - See definition of 'getId' method.\n         * @returns {Multiselect} Chainable.\n         */\n        deselect: function (id, isIndex) {\n            this._setSelection(id, isIndex, false);\n\n            return this;\n        },\n\n        /**\n         * Toggles selection of a specified record.\n         *\n         * @param {*} id - See definition of 'getId' method.\n         * @param {Boolean} [isIndex=false] - See definition of 'getId' method.\n         * @returns {Multiselect} Chainable.\n         */\n        toggleSelect: function (id, isIndex) {\n            this._setSelection(id, isIndex, !this.isSelected(id, isIndex));\n\n            return this;\n        },\n\n        /**\n         * Checks if specified record is selected.\n         *\n         * @param {*} id - See definition of 'getId' method.\n         * @param {Boolean} [isIndex=false] - See definition of 'getId' method.\n         * @returns {Boolean}\n         */\n        isSelected: function (id, isIndex) {\n            id = this.getId(id, isIndex);\n\n            return this.selected.contains(id);\n        },\n\n        /**\n         * Selects/deselects specified record base on a 'select' parameter value.\n         *\n         * @param {*} id - See definition of 'getId' method.\n         * @param {Boolean} [isIndex=false] - See definition of 'getId' method.\n         * @param {Boolean} select - Whether to select/deselect record.\n         * @returns {Multiselect} Chainable.\n         */\n        _setSelection: function (id, isIndex, select) {\n            var selected = this.selected;\n\n            id = this.getId(id, isIndex);\n\n            if (!select && this.isSelected(id)) {\n                selected.remove(id);\n            } else if (select) {\n                selected.push(id);\n            }\n\n            return this;\n        },\n\n        /**\n         * Selects all records, even those that\n         * are not visible on the page.\n         *\n         * @returns {Multiselect} Chainable.\n         */\n        selectAll: function () {\n            this.excludeMode(true);\n\n            this.clearExcluded()\n                .selectPage();\n\n            return this;\n        },\n\n        /**\n         * Deselects all records.\n         *\n         * @returns {Multiselect} Chainable.\n         */\n        deselectAll: function () {\n            this.excludeMode(false);\n\n            this.clearExcluded();\n            this.selected.removeAll();\n\n            return this;\n        },\n\n        /**\n         * Selects or deselects all records.\n         *\n         * @returns {Multiselect} Chainable.\n         */\n        toggleSelectAll: function () {\n            this.allSelected() ?\n                this.deselectAll() :\n                this.selectAll();\n\n            return this;\n        },\n\n        /**\n         * Selects all records on the current page.\n         *\n         * @returns {Multiselect} Chainable.\n         */\n        selectPage: function () {\n            var selected = _.union(this.selected(), this.getIds());\n\n            selected = _.difference(selected, this.disabled());\n\n            this.selected(selected);\n\n            return this;\n        },\n\n        /**\n         * Deselects all records on the current page.\n         *\n         * @returns {Multiselect} Chainable.\n         */\n        deselectPage: function () {\n            var pageIds = this.getIds();\n\n            this.selected.remove(function (value) {\n                return !!~pageIds.indexOf(value);\n            });\n\n            return this;\n        },\n        \n        /**\n         * Selects or deselects all records on the current page.\n         *\n         * @returns {Multiselect} Chainable.\n         */\n        togglePage: function () {\n            return this.isPageSelected() ? this.deselectPage() : this.selectPage();\n        },\n\n        /**\n         * Clears the array of not selected records.\n         *\n         * @returns {Multiselect} Chainable.\n         */\n        clearExcluded: function () {\n            this.excluded.removeAll();\n\n            return this;\n        },\n\n        /**\n         * Retrieve all id's from available records.\n         *\n         * @param {Boolean} [exclude] - Whether to exclude not selected ids' from result.\n         * @returns {Array} An array of ids'.\n         */\n        getIds: function (exclude) {\n            var items = this.rows(),\n                ids = _.pluck(items, this.indexField);\n\n            return exclude ?\n                _.difference(ids, this.excluded()) :\n                ids;\n        },\n\n        /**\n         * Returns identifier of a record.\n         *\n         * @param {*} id - Id of a record or its' index in a rows array.\n         * @param {Boolean} [isIndex=false] - Flag that specifies whith what\n         *      kind of identifier we are dealing with.\n         * @returns {*}\n         */\n        getId: function (id, isIndex) {\n            var record = this.rows()[id];\n\n            if (isIndex && record) {\n                id = record[this.indexField];\n            }\n\n            return id;\n        },\n\n        /**\n         * Recalculates list of the excluded records.\n         * Changes value of `excluded`.\n         *\n         * @param {Array} selected - List of the currently selected records.\n         * @returns {Multiselect} Chainable.\n         */\n        updateExcluded: function (selected) {\n            var excluded = this.excluded(),\n                fromPage = _.difference(this.getIds(), selected);\n\n            excluded = _.union(excluded, fromPage);\n            excluded = _.difference(excluded, selected);\n\n            this.excluded(excluded);\n\n            return this;\n        },\n\n        /**\n         * Calculates number of selected records and\n         * updates 'totalSelected' property.\n         *\n         * @returns {Multiselect} Chainable.\n         */\n        countSelected: function () {\n            var total = this.totalRecords(),\n                excluded = this.excluded().length,\n                selected = this.selected().length;\n\n            if (this.excludeMode()) {\n                selected = total - excluded;\n            }\n\n            this.totalSelected(selected);\n\n            return this;\n        },\n\n        /**\n         * Returns selected items on a current page.\n         *\n         * @returns {Array}\n         */\n        getPageSelections: function () {\n            var ids = this.getIds();\n\n            return this.selected.filter(function (id) {\n                return _.contains(ids, id);\n            });\n        },\n\n        /**\n         * Returns selections data.\n         *\n         * @returns {Object}\n         */\n        getSelections: function () {\n            return {\n                excluded: this.excluded(),\n                selected: this.selected(),\n                total: this.totalSelected(),\n                excludeMode: this.excludeMode(),\n                params: this.getFiltering()\n            };\n        },\n\n        /**\n         * Extracts filtering data from data provider.\n         *\n         * @returns {Object} Current filters state.\n         */\n        getFiltering: function () {\n            var source = this.source(),\n                keys = ['filters', 'search', 'namespace'];\n\n            if (!source) {\n                return {};\n            }\n\n            return _.pick(source.get('params'), keys);\n        },\n\n        /**\n         * Defines if provided select/deselect actions is relevant.\n         * E.g. there is no need in a 'select page' action if only one\n         * page is available.\n         *\n         * @param {String} actionId - Id of the action to be checked.\n         * @returns {Boolean}\n         */\n        isActionRelevant: function (actionId) {\n            var pageIds         = this.getIds().length,\n                multiplePages   = pageIds < this.totalRecords(),\n                relevant        = true;\n\n            switch (actionId) {\n                case 'selectPage':\n                    relevant = multiplePages && !this.isPageSelected(true);\n                    break;\n\n                case 'deselectPage':\n                    relevant =  multiplePages && this.isPageSelected();\n                    break;\n\n                case 'selectAll':\n                    relevant = !this.allSelected();\n                    break;\n\n                case 'deselectAll':\n                    relevant = this.totalSelected() > 0;\n            }\n\n            return relevant;\n        },\n\n        /**\n         * Checks if current page has selected records.\n         *\n         * @param {Boolean} [all=false] - If set to 'true' checks that every\n         *      record on the page is selected. Otherwise checks that\n         *      page has some selected records.\n         * @returns {Boolean}\n         */\n        isPageSelected: function (all) {\n            var pageIds = this.getIds(),\n                selected = this.selected(),\n                excluded = this.excluded(),\n                iterator = all ? 'every' : 'some';\n\n            if (this.allSelected()) {\n                return true;\n            }\n\n            if (this.excludeMode()) {\n                return pageIds[iterator](function (id) {\n                    return !~excluded.indexOf(id);\n                });\n            }\n\n            return pageIds[iterator](function (id) {\n                return !!~selected.indexOf(id);\n            });\n        },\n\n        /**\n         * Updates values of the 'allSelected'\n         * and 'indetermine' properties.\n         *\n         * @returns {Multiselect} Chainable.\n         */\n        updateState: function () {\n            var selected        = this.selected().length,\n                excluded        = this.excluded().length,\n                totalSelected   = this.totalSelected(),\n                totalRecords    = this.totalRecords(),\n                totalSellerPrice  = 0.00,\n                selectedIdsToPay = [],\n                allSelected     = totalRecords && totalSelected === totalRecords;\n            if (totalSelected) {\n                var rows = this.rows();\n                if (this.rows().length > 0) {\n                    $.each(this.selected(), function ( index, value ) {\n                        var index = $(\"#idscheck\"+value).parents('tr').attr('data-repeat-index');\n                        totalSellerPrice = parseFloat(totalSellerPrice) +\n                        parseFloat(rows[index]['actual_seller_amount_to_pay']);\n                        if (parseInt(rows[index]['actual_seller_amount_to_pay']) != 0) {\n                            selectedIdsToPay.push(value);\n                        }\n                    });\n                }\n            }\n            this.totalSellerPrice(utils.formatPrice(totalSellerPrice, this.priceFormat));\n            $('#wk_totalSellerPrice').text(this.totalSellerPrice());\n            $('#wksellerorderids').val(selectedIdsToPay.join(\",\"));\n\n            if (this.excludeMode()) {\n                if (excluded === totalRecords && !this.preserveSelectionsOnFilter) {\n                    this.deselectAll();\n                }\n            } else if (totalRecords && selected === totalRecords && !this.preserveSelectionsOnFilter) {\n                this.selectAll();\n            }\n\n            this.allSelected(allSelected);\n            this.indetermine(totalSelected && !allSelected);\n\n            return this;\n        },\n\n        /**\n         * Overrides base method, because this component\n         * can't have global field action.\n         *\n         * @returns {Boolean} False.\n         */\n        hasFieldAction: function () {\n            return false;\n        },\n\n        /**\n         * Callback method to handle changes of selected items.\n         *\n         * @param {Array} selected - An array of currently selected items.\n         */\n        onSelectedChange: function (selected) {\n            this.updateExcluded(selected)\n                .countSelected()\n                .updateState();\n        },\n\n        /**\n         * Is invoked when rows has changed. Recalculates selected items\n         * based on \"selectMode\" property.\n         */\n        onRowsChange: function () {\n            var newSelections;\n\n            if (this.excludeMode()) {\n                newSelections = _.union(this.getIds(true), this.selected());\n\n                this.selected(newSelections);\n            }\n        },\n\n        /**\n         * Is invoked when filtration is applied or removed\n         */\n        onFilter: function () {\n            if (!this.preserveSelectionsOnFilter) {\n                this.deselectAll();\n            }\n        }\n    });\n});\n","Webkul_Marketplace/js/grid/columns/name.js":"/**\n * Webkul Software.\n *\n * @category  Webkul\n * @package   Webkul_Marketplace\n * @author    Webkul Software Private Limited\n * @copyright Webkul Software Private Limited (https://webkul.com)\n * @license   https://store.webkul.com/license.html\n */\ndefine([\n    './column',\n    'jquery'\n], function (Column, $) {\n    'use strict';\n\n    return Column.extend({\n        defaults: {\n            fieldClass: {\n                'wk-mp-grid-name-cell': true\n            }\n        }\n    });\n});\n","Webkul_Marketplace/js/grid/columns/price.js":"/**\n * Webkul Software.\n *\n * @category  Webkul\n * @package   Webkul_Marketplace\n * @author    Webkul Software Private Limited\n * @copyright Webkul Software Private Limited (https://webkul.com)\n * @license   https://store.webkul.com/license.html\n */\ndefine([\n    './column',\n    'jquery'\n], function (Column, $) {\n    'use strict';\n\n    return Column.extend({\n        defaults: {\n            fieldClass: {\n                'wk-mp-grid-price-cell': true\n            }\n        }\n    });\n});\n","Webkul_Marketplace/js/grid/columns/prodeny.js":"/**\n * Webkul Software.\n *\n * @category  Webkul\n * @package   Webkul_Marketplace\n * @author    Webkul Software Private Limited\n * @copyright Webkul Software Private Limited (https://webkul.com)\n * @license   https://store.webkul.com/license.html\n */\ndefine([\n    './column',\n    'jquery',\n    'mage/template',\n    'text!Webkul_Marketplace/templates/grid/cells/deny/product.html',\n    'Magento_Ui/js/modal/modal'\n], function (Column, $, mageTemplate, denyPreviewTemplate) {\n    'use strict';\n\n    return Column.extend({\n        defaults: {\n            bodyTmpl: 'ui/grid/cells/html',\n            fieldClass: {\n                'data-grid-html-cell': true\n            }\n        },\n        gethtml: function (row) {\n            return row[this.index + '_html'];\n        },\n        getFormaction: function (row) {\n            return row[this.index + '_formaction'];\n        },\n        getProductid: function (row) {\n            return row[this.index + '_productid'];\n        },\n        getSellerid: function (row) {\n            return row[this.index + '_sellerid'];\n        },\n        getLabel: function (row) {\n            return row[this.index + '_html']\n        },\n        getTitle: function (row) {\n            return row[this.index + '_title']\n        },\n        getSubmitlabel: function (row) {\n            return row[this.index + '_submitlabel']\n        },\n        getCancellabel: function (row) {\n            return row[this.index + '_cancellabel']\n        },\n        preview: function (row) {\n            var modalHtml = mageTemplate(\n                denyPreviewTemplate,\n                {\n                    html: this.gethtml(row),\n                    title: this.getTitle(row),\n                    label: this.getLabel(row),\n                    formaction: this.getFormaction(row),\n                    productid: this.getProductid(row),\n                    sellerid: this.getSellerid(row),\n                    submitlabel: this.getSubmitlabel(row),\n                    cancellabel: this.getCancellabel(row),\n                    linkText: $.mage.__('Go to Details Page'),\n                    notifyMsg: $.mage.__(' Notify Seller by Email')\n                }\n            );\n            var previewPopup = $('<div></div>').html(modalHtml);\n            previewPopup.modal({\n                title: this.getTitle(row),\n                innerScroll: true,\n                modalClass: '_image-box',\n                buttons: []}).trigger('openModal');\n        },\n        getFieldHandler: function (row) {\n            return this.preview.bind(this, row);\n        }\n    });\n});\n","Webkul_Marketplace/js/grid/columns/proview.js":"/**\n * Webkul Software.\n *\n * @category  Webkul\n * @package   Webkul_Marketplace\n * @author    Webkul Software Private Limited\n * @copyright Webkul Software Private Limited (https://webkul.com)\n * @license   https://store.webkul.com/license.html\n */\ndefine([\n    './column',\n    'jquery',\n    'mage/template',\n    'Magento_Ui/js/modal/modal'\n], function (Column, $, mageTemplate) {\n    'use strict';\n\n    return Column.extend({\n        defaults: {\n            bodyTmpl: 'ui/grid/cells/html',\n            fieldClass: {\n                'data-grid-html-cell': true\n            }\n        },\n        gethtml: function (row) {\n            return row[this.index + '_html'];\n        },\n        getLabel: function (row) {\n            return row[this.index + '_html']\n        },\n        getFieldHandler: function (row) {\n            return true;\n        }\n    });\n});\n","Webkul_Marketplace/js/grid/columns/selectLink.js":"/**\n * Webkul Software.\n *\n * @category  Webkul\n * @package   Webkul_Marketplace\n * @author    Webkul Software Private Limited\n * @copyright Webkul Software Private Limited (https://webkul.com)\n * @license   https://store.webkul.com/license.html\n */\ndefine([\n    'underscore',\n    './column',\n    'jquery',\n], function (_, Column, $) {\n    'use strict';\n    return Column.extend({\n        defaults: {\n            bodyTmpl: 'ui/grid/cells/html',\n            fieldClass: {\n                'data-grid-html-cell': true\n            }\n        },\n        getLabel: function () {\n            var options = this.options || [],\n                values = this._super(),\n                label = [];\n\n            if (_.isString(values)) {\n                values = values.split(',');\n            }\n\n            if (!Array.isArray(values)) {\n                values = [values];\n            }\n\n            values = values.map(function (value) {\n                return value + '';\n            });\n\n            options.forEach(function (item) {\n                if (_.contains(values, item.value + '')) {\n                    label.push(item.row_label);\n                }\n            });\n\n            return label.join(', ');\n        },\n        getFieldHandler: function (row) {\n            return false;\n        }\n    });\n});\n","Webkul_Marketplace/js/grid/columns/sellerdeny.js":"/**\n * Webkul Software.\n *\n * @category  Webkul\n * @package   Webkul_Marketplace\n * @author    Webkul Software Private Limited\n * @copyright Webkul Software Private Limited (https://webkul.com)\n * @license   https://store.webkul.com/license.html\n */\ndefine([\n    './column',\n    'jquery',\n    'mage/template',\n    'text!Webkul_Marketplace/templates/grid/cells/deny/seller.html',\n    'Magento_Ui/js/modal/modal'\n], function (Column, $, mageTemplate, denyPreviewTemplate) {\n    'use strict';\n\n    return Column.extend({\n        defaults: {\n            bodyTmpl: 'ui/grid/cells/html',\n            fieldClass: {\n                'data-grid-html-cell': true\n            }\n        },\n        gethtml: function (row) {\n            return row[this.index + '_html'];\n        },\n        getFormaction: function (row) {\n            return row[this.index + '_formaction'];\n        },\n        getSellerid: function (row) {\n            return row[this.index + '_sellerid'];\n        },\n        getLabel: function (row) {\n            return row[this.index + '_html']\n        },\n        getTitle: function (row) {\n            return row[this.index + '_title']\n        },\n        getSubmitlabel: function (row) {\n            return row[this.index + '_submitlabel']\n        },\n        getCancellabel: function (row) {\n            return row[this.index + '_cancellabel']\n        },\n        preview: function (row) {\n            var modalHtml = mageTemplate(\n                denyPreviewTemplate,\n                {\n                    html: this.gethtml(row),\n                    title: this.getTitle(row),\n                    label: this.getLabel(row),\n                    formaction: this.getFormaction(row),\n                    sellerid: this.getSellerid(row),\n                    submitlabel: this.getSubmitlabel(row),\n                    cancellabel: this.getCancellabel(row),\n                    linkText: $.mage.__('Go to Details Page'),\n                    notifyMsg: $.mage.__(' Notify Seller by Email')\n                }\n            );\n            var previewPopup = $('<div></div>').html(modalHtml);\n            previewPopup.modal({\n                title: this.getTitle(row),\n                innerScroll: true,\n                modalClass: '_image-box',\n                buttons: []}).trigger('openModal');\n        },\n        getFieldHandler: function (row) {\n            return this.preview.bind(this, row);\n        }\n    });\n});\n","Webkul_Marketplace/js/grid/columns/sellerpay.js":"/**\n * Webkul Software.\n *\n * @category  Webkul\n * @package   Webkul_Marketplace\n * @author    Webkul Software Private Limited\n * @copyright Webkul Software Private Limited (https://webkul.com)\n * @license   https://store.webkul.com/license.html\n */\ndefine([\n    './column',\n    'jquery',\n    'mage/template',\n    'text!Webkul_Marketplace/templates/grid/cells/deny/sellerpay.html',\n    'Magento_Ui/js/modal/modal'\n], function (Column, $, mageTemplate, denyPreviewTemplate) {\n    'use strict';\n\n    return Column.extend({\n        defaults: {\n            bodyTmpl: 'ui/grid/cells/html',\n            fieldClass: {\n                'data-grid-html-cell': true\n            }\n        },\n        getFlag: function (row) {\n            return row[this.index + '_flag'];\n        },\n        gethtml: function (row) {\n            return row[this.index + '_html'];\n        },\n        getFormaction: function (row) {\n            return row[this.index + '_formaction'];\n        },\n        getSellerid: function (row) {\n            return row[this.index + '_sellerid'];\n        },\n        getAutoorderid: function (row) {\n            return row[this.index + '_autoorderid'];\n        },\n        getLabel: function (row) {\n            return row[this.index + '_html']\n        },\n        getTitle: function (row) {\n            return row[this.index + '_title']\n        },\n        getSubmitlabel: function (row) {\n            return row[this.index + '_submitlabel']\n        },\n        getCancellabel: function (row) {\n            return row[this.index + '_cancellabel']\n        },\n        preview: function (row) {\n            if (this.getFlag(row)==1) {\n                var modalHtml = mageTemplate(\n                    denyPreviewTemplate,\n                    {\n                        flag: this.getFlag(row),\n                        html: this.gethtml(row),\n                        title: this.getTitle(row),\n                        label: this.getLabel(row),\n                        formaction: this.getFormaction(row),\n                        autoorderid: this.getAutoorderid(row),\n                        sellerid: this.getSellerid(row),\n                        submitlabel: this.getSubmitlabel(row),\n                        cancellabel: this.getCancellabel(row),\n                        linkText: $.mage.__('Go to Details Page')\n                    }\n                );\n                var previewPopup = $('<div></div>').html(modalHtml);\n                previewPopup.modal({\n                    title: this.getTitle(row),\n                    innerScroll: true,\n                    modalClass: '_image-box',\n                    buttons: []}).trigger('openModal');\n            }\n        },\n        getFieldHandler: function (row) {\n            return this.preview.bind(this, row);\n        }\n    });\n});\n","Webkul_Marketplace/js/grid/columns/sku.js":"/**\n * Webkul Software.\n *\n * @category  Webkul\n * @package   Webkul_Marketplace\n * @author    Webkul Software Private Limited\n * @copyright Webkul Software Private Limited (https://webkul.com)\n * @license   https://store.webkul.com/license.html\n */\ndefine([\n    './column',\n    'jquery'\n], function (Column, $) {\n    'use strict';\n\n    return Column.extend({\n        defaults: {\n            fieldClass: {\n                'wk-mp-grid-sku-cell': true\n            }\n        }\n    });\n});\n","Webkul_Marketplace/js/grid/columns/status.js":"/**\n * Webkul Software.\n *\n * @category  Webkul\n * @package   Webkul_Marketplace\n * @author    Webkul Software Private Limited\n * @copyright Webkul Software Private Limited (https://webkul.com)\n * @license   https://store.webkul.com/license.html\n */\ndefine([\n    'underscore',\n    './column'\n], function (_, Column) {\n    'use strict';\n\n    return Column.extend({\n        defaults: {\n            fieldClass: {\n                'wk-mp-grid-status-cell': true\n            }\n        },\n        /*eslint-disable eqeqeq*/\n        /**\n         * Retrieves label associated with a provided value.\n         *\n         * @returns {String}\n         */\n        getLabel: function () {\n            var options = this.options || [],\n                values = this._super(),\n                label = [];\n\n            if (_.isString(values)) {\n                values = values.split(',');\n            }\n\n            if (!Array.isArray(values)) {\n                values = [values];\n            }\n\n            values = values.map(function (value) {\n                return value + '';\n            });\n\n            options.forEach(function (item) {\n                if (_.contains(values, item.value + '')) {\n                    label.push(item.label);\n                }\n            });\n\n            return label.join(', ');\n        }\n\n        /*eslint-enable eqeqeq*/\n    });\n});\n","Webkul_Marketplace/js/grid/columns/thumbnail.js":"/**\n * Webkul Software.\n *\n * @category  Webkul\n * @package   Webkul_Marketplace\n * @author    Webkul Software Private Limited\n * @copyright Webkul Software Private Limited (https://webkul.com)\n * @license   https://store.webkul.com/license.html\n */\ndefine([\n    './column',\n    'jquery'\n], function (Column, $) {\n    'use strict';\n\n    return Column.extend({\n        defaults: {\n            fieldClass: {\n                'wk-mp-grid-thumbnail-cell': true\n            }\n        }\n    });\n});\n","Webkul_Marketplace/js/grid/editing/editor.js":"/**\n * Webkul Software.\n *\n * @category  Webkul\n * @package   Webkul_Marketplace\n * @author    Webkul Software Private Limited\n * @copyright Webkul Software Private Limited (https://webkul.com)\n * @license   https://store.webkul.com/license.html\n */\ndefine(\n    [\n        'Magento_Ui/js/grid/editing/editor'\n    ], function(Component){\n        'use strict';\n        return Component.extend({\n            defaults:{\n                templates: {\n                    record: {  \n                        component: 'Webkul_Marketplace/js/grid/editing/record', \n                    }\n                }\n            }\n        })\n    }\n)","Webkul_Marketplace/js/grid/editing/record.js":"/**\n * Webkul Software.\n *\n * @category  Webkul\n * @package   Webkul_Marketplace\n * @author    Webkul Software Private Limited\n * @copyright Webkul Software Private Limited (https://webkul.com)\n * @license   https://store.webkul.com/license.html\n */\ndefine(\n    [\n        'Magento_Ui/js/grid/editing/record'\n    ], function(Component){\n        'use strict';\n        return Component.extend({\n            defaults:{\n                templates: {\n                    fields: {\n                        price: {\n                            component: 'Webkul_Marketplace/js/form/element/price',\n                            template: 'ui/form/element/input'\n                        }\n                    }\n                }\n            }\n        })\n    }\n)","Webkul_Marketplace/js/grid/filters/filter.js":"/**\n * Webkul Software.\n *\n * @category  Webkul\n * @package   Webkul_Marketplace\n * @author    Webkul Software Private Limited\n * @copyright Webkul Software Private Limited (https://webkul.com)\n * @license   https://store.webkul.com/license.html\n */\n define([\n    'Magento_Ui/js/grid/filters/filters',\n    'mageUtils'\n], function (Filters,utils) {\n    'use strict';\n    /**\n         * Extracts and formats preview of an element.\n         *\n         * @param {Object} elem - Element whose preview should be extracted.\n         * @returns {Object} Formatted data.\n         */\n    function extractPreview(elem) {\n        return {\n            label: elem.label,\n            preview: elem.getPreview(),\n            elem: elem\n        };\n    }\n\n    /**\n     * Removes empty properties from the provided object.\n     *\n     * @param {Object} data - Object to be processed.\n     * @returns {Object}\n     */\n    function removeEmpty(data) {\n        var result = utils.mapRecursive(data, utils.removeEmptyValues.bind(utils));\n\n        return utils.mapRecursive(result, function (value) {\n            return _.isString(value) ? value.trim() : value;\n        });\n    }\n    return Filters.extend({\n        /**\n         * Sets filters data to the applied state.\n         *\n         * @returns {Filters} Chainable.\n         */\n         apply: function () {\n            this.set('applied', removeEmpty(this.filters));\n\n            return this;\n        },\n        \n    });\n});\n","Webkul_Marketplace/js/lib/step-wizard.js":"/**\n * Webkul Software.\n *\n * @category  Webkul\n * @package   Webkul_Marketplace\n * @author    Webkul Software Private Limited\n * @copyright Webkul Software Private Limited (https://webkul.com)\n * @license   https://store.webkul.com/license.html\n */\n// jscs:disable jsDoc\ndefine([\n    'uiRegistry',\n    'uiComponent',\n    'jquery',\n    'underscore',\n    'ko',\n    'mage/backend/notification'\n], function (uiRegistry, Component, $, _, ko) {\n    'use strict';\n\n    var Wizard;\n\n    ko.utils.domNodeDisposal.cleanExternalData = _.wrap(\n        ko.utils.domNodeDisposal.cleanExternalData,\n        function (func, node) {\n            if (!$(node).closest('[data-type=skipKO]').length) {\n                func(node);\n            }\n        }\n    );\n\n    Wizard = function (steps, modalClass) {\n        this.steps = steps;\n        this.index = 0;\n        this.data = {};\n        this.nextLabelText = 'Next';\n        this.prevLabelText = 'Back';\n        this.initSelectors = function (modalClass) {\n            var elementSelector = '[data-role=steps-wizard-main]';\n\n            this.nextLabel = '[data-role=\"step-wizard-next\"]';\n            this.prevLabel = '[data-role=\"step-wizard-prev\"]';\n\n            if (modalClass) {\n                this.nextLabel = '.' + modalClass + ' ' + this.nextLabel;\n                this.prevLabel = '.' + modalClass + ' ' + this.prevLabel;\n                elementSelector = '.' + modalClass + elementSelector;\n            }\n\n            this.element = $(elementSelector);\n            $(this.element).notification();\n        };\n        this.initSelectors(modalClass);\n        this.move = function (newIndex) {\n            if (!this.preventSwitch(newIndex)) {\n                if (newIndex > this.index) {\n                    this._next(newIndex);\n                } else if (newIndex < this.index) {\n                    this._prev(newIndex);\n                }\n            }\n            this.updateLabels(this.getStep());\n            this.showNotificationMessage();\n\n            return this.getStep().name;\n        };\n        this.next = function () {\n            this.move(this.index + 1);\n\n            return this.getStep().name;\n        };\n        this.prev = function () {\n            this.move(this.index - 1);\n\n            return this.getStep().name;\n        };\n        this.preventSwitch = function (newIndex) {\n            return newIndex < 0 || (newIndex - this.index) > 1;\n        };\n        this._next = function (newIndex) {\n            newIndex = _.isNumber(newIndex) ? newIndex : this.index + 1;\n\n            try {\n                this.getStep().force(this);\n\n                if (newIndex >= steps.length) {\n                    return false;\n                }\n            } catch (e) {\n                this.setNotificationMessage(e.message, true);\n\n                return false;\n            }\n            this.cleanErrorNotificationMessage();\n            this.index = newIndex;\n            this.cleanNotificationMessage();\n            this.render();\n        };\n        this._prev = function (newIndex) {\n            newIndex = _.isNumber(newIndex) ? newIndex : this.index - 1;\n            this.getStep().back(this);\n            this.index = newIndex;\n        };\n        this.getStep = function (stepIndex) {\n            return this.steps[stepIndex || this.index] || {};\n        };\n        this.notifyMessage = function (message, error) {\n            $(this.element).notification('clear').notification('add', {\n                error: error,\n                message: message\n            });\n        };\n        this.updateLabels = function (step) {\n            this.element.find(this.nextLabel).find('button').text(step.nextLabelText || this.nextLabelText);\n            this.element.find(this.prevLabel).find('button').text(step.prevLabelText || this.prevLabelText);\n        };\n        this.showNotificationMessage = function () {\n            if (!_.isEmpty(this.getStep())) {\n                this.hideNotificationMessage();\n\n                if (this.getStep().notificationMessage.text !== null) {\n                    this.notifyMessage(\n                        this.getStep().notificationMessage.text,\n                        this.getStep().notificationMessage.error\n                    );\n                }\n            }\n        };\n        this.cleanNotificationMessage = function () {\n            this.getStep().notificationMessage.text = null;\n            this.hideNotificationMessage();\n        };\n        this.cleanErrorNotificationMessage = function () {\n            if (this.getStep().notificationMessage.error === true) {\n                this.cleanNotificationMessage();\n            }\n        };\n        this.setNotificationMessage = function (text, error) {\n            error = error !== undefined;\n\n            if (!_.isEmpty(this.getStep())) {\n                this.getStep().notificationMessage.text = text;\n                this.getStep().notificationMessage.error = error;\n                this.showNotificationMessage();\n            }\n        };\n        this.hideNotificationMessage = function () {\n            $(this.element).notification('clear');\n        };\n        this.render = function () {\n            this.hideNotificationMessage();\n            this.getStep().render(this);\n        };\n        this.init = function () {\n            this.updateLabels(this.getStep());\n            this.render();\n        };\n        this.init();\n    };\n\n    return Component.extend({\n        defaults: {\n            modalClass: '',\n            initData: [],\n            stepsNames: [],\n            selectedStep: '',\n            steps: [],\n            disabled: true\n        },\n        initialize: function () {\n            this._super();\n            this.selectedStep.subscribe(this.wrapDisabledBackButton.bind(this));\n        },\n        initElement: function (step) {\n            step.initData = this.initData;\n            step.mode = _.all(this.initData, _.isEmpty) ? 'create' : 'edit';\n            this.steps[this.getStepIndexByName(step.name)] = step;\n        },\n        initObservable: function () {\n            this._super().observe([\n                'selectedStep',\n                'disabled'\n            ]);\n\n            return this;\n        },\n        destroy: function () {\n            _.each(this.steps, function (step) {\n                step.destroy();\n            });\n\n            this._super();\n        },\n        wrapDisabledBackButton: function (stepName) {\n            if (_.first(this.stepsNames) === stepName) {\n                this.disabled(true);\n            } else {\n                this.disabled(false);\n            }\n        },\n        getStepIndexByName: function (stepName) {\n            return _.indexOf(this.stepsNames, stepName);\n        },\n        //controls, todo to another object\n        next: function () {\n            this.selectedStep(this.wizard.next());\n        },\n        back: function () {\n            this.selectedStep(this.wizard.prev());\n        },\n        open: function () {\n            this.selectedStep(this.stepsNames.first());\n            this.wizard = new Wizard(this.steps, this.modalClass);\n            $('[data-role=step-wizard-dialog]').trigger('openModal');\n        },\n        close: function () {\n            var modal =  uiRegistry.get(this.initData.configurableModal);\n            if (!_.isUndefined(modal)) {\n                modal.closeModal();\n            }\n            $('[data-role=step-wizard-dialog]').trigger('closeModal');\n        },\n        showSpecificStep: function () {\n            var index = _.indexOf(this.stepsNames, event.target.hash.substr(1)),\n                stepName = this.wizard.move(index);\n\n            this.selectedStep(stepName);\n        }\n    });\n});\n","Webkul_Marketplace/js/options/price-type-handler.js":"/**\n * Webkul Software.\n *\n * @category  Webkul\n * @package   Webkul_Marketplace\n * @author    Webkul Software Private Limited\n * @copyright Webkul Software Private Limited (https://webkul.com)\n * @license   https://store.webkul.com/license.html\n */\ndefine([\n    'jquery',\n    'Webkul_Marketplace/catalog/type-events',\n    'notification',\n    'mage/translate'\n], function ($, productType) {\n    'use strict';\n\n    return {\n        isConfigurable: false,\n        messageInited: false,\n        messageSelector: '[data-role=product-custom-options-content]',\n        isPercentPriceTypeExist: function () {\n            var productOptionsContainer = $('#product_options_container_top');\n\n            return !!productOptionsContainer.length;\n        },\n        showWarning: function () {\n            if (!this.messageInited) {\n                $(this.messageSelector).notification();\n                this.messageInited = true;\n            }\n            this.hideWarning();\n            $(this.messageSelector).notification('add', {\n                message: $.mage.__('We can\\'t save custom-defined options with price type \"percent\" for ' +\n                    'configurable product.'),\n                error: true,\n                messageContainer: this.messageSelector\n            });\n        },\n        hideWarning: function () {\n            $(this.messageSelector).notification('clear');\n        },\n        init: function () {\n            $(document).on('changeTypeProduct', this._initType.bind(this));\n\n            $('#product-edit-form-tabs').on('change', '.opt-type > select', function () {\n                var selected = $('.opt-type > select :selected'),\n                    optGroup = selected.parent().attr('label');\n\n                if (optGroup === 'Select') {\n                    $('#product-edit-form-tabs').on(\n                        'click',\n                        '[data-ui-id=\"admin-product-options-options-box-select-option-type-add-select-row-button\"]',\n                        function () {\n                            this.percentPriceTypeHandler();\n                        }.bind(this)\n                    );\n                } else {\n                    this.percentPriceTypeHandler();\n                }\n            }.bind(this));\n\n            this._initType();\n        },\n        _initType: function () {\n            this.isConfigurable = productType.type.current === 'configurable';\n            if (this.isPercentPriceTypeExist()) {\n                this.percentPriceTypeHandler();\n            }\n        },\n        percentPriceTypeHandler: function () {\n            var priceType = $('[data-attr=\"price-type\"]'),\n                optionPercentPriceType = priceType.find('option[value=\"percent\"]');\n\n            if (this.isConfigurable) {\n                this.showWarning();\n                optionPercentPriceType.hide();\n                optionPercentPriceType.parent().val() === 'percent' ? optionPercentPriceType.parent().val('fixed') : '';\n            } else {\n                $(this.messageSelector).notification();\n                optionPercentPriceType.show();\n                this.hideWarning();\n            }\n        }\n    };\n});\n","Webkul_Marketplace/js/order/history.js":"/**\n * Webkul Software.\n *\n * @category  Webkul\n * @package   Webkul_Marketplace\n * @author    Webkul Software Private Limited\n * @copyright Webkul Software Private Limited (https://webkul.com)\n * @license   https://store.webkul.com/license.html\n */\n/*jshint jquery:true*/\ndefine([\n    \"jquery\",\n    \"jquery/ui\",\n    'mage/calendar'\n], function ($) {\n    'use strict';\n    $.widget('mage.sellerOrderHistory', {\n        _create: function () {\n            var self = this;\n            \n            $('.wk-shipslip').click(function () {\n                $('#wk-ship-light').hide();\n                $('#wk-ship-fade').hide();\n            });\n\n            $('body').append($('#wk-mp-invoice-print-data'));\n\n            $('#invoice-lightboxopen').click(function () {\n                $('#form-invoice-print input, #form-invoice-print textarea').removeClass('error_border');\n                $('.page-wrapper').css('opacity','0.4');\n                $('#wk-mp-invoice-print-data').find('.wk-mp-model-popup').addClass('_show');\n                $('#wk-mp-invoice-print-data').show();\n            });\n            $('.wk-close').click(function () {\n                $('.page-wrapper').css('opacity','1');\n                $('#resetbtn').trigger('click');\n                $('#wk-mp-invoice-print-data').hide();\n                $('#form-invoice-print .validation-failed').each(function () {\n                    $(this).removeClass('validation-failed');\n                });\n                $('#form-invoice-print .validation-advice').each(function () {\n                    $(this).remove();\n                });\n            });\n            \n            $('.wk-shipslip').click(function () {\n                $('#wk-ship-light').hide();\n                $('#wk-ship-fade').hide();\n            });\n\n            $('body').append($('#wk-mp-shipping-print-data'));\n\n            $('#shiplightboxopen').click(function () {\n                $('#form-shipping-print input,#form-shipping-print textarea').removeClass('error_border');\n                $('.page-wrapper').css('opacity','0.4');\n                $('#wk-mp-shipping-print-data').find('.wk-mp-model-popup').addClass('_show');\n                $('#wk-mp-shipping-print-data').show();\n            });\n            $('.wk-close').click(function () {\n                $('.page-wrapper').css('opacity','1');\n                $('#resetbtn').trigger('click');\n                $('#wk-mp-shipping-print-data').hide();\n                $('#form-shipping-print .validation-failed').each(function () {\n                    $(this).removeClass('validation-failed');\n                });\n                $('#form-shipping-print .validation-advice').each(function () {\n                    $(this).remove();\n                });\n            });\n            $(\".wk-mp-body\").dateRange({\n                'dateFormat':'mm/dd/yy',\n                'from': {\n                    'id': 'special-from-date'\n                },\n                'to': {\n                    'id': 'special-to-date'\n                }\n            });\n            $(\"#form-shipping-print\").dateRange({\n                'dateFormat':'mm/dd/yy',\n                'from': {\n                    'id': 'editfromdatepicker'\n                },\n                'to': {\n                    'id': 'edittodatepicker'\n                }\n            });\n            $(\"#form-invoice-print\").dateRange({\n                'dateFormat':'mm/dd/yy',\n                'from': {\n                    'id': 'invoice_editfromdatepicker'\n                },\n                'to': {\n                    'id': 'invoice_edittodatepicker'\n                }\n            });\n        }\n    });\n    return $.mage.sellerOrderHistory;\n});\n","Webkul_Marketplace/js/order/invoice-create-post-action.js":"/**\n * Webkul Software.\n *\n * @category  Webkul\n * @package   Webkul_Marketplace\n * @author    Webkul Software Private Limited\n * @copyright Webkul Software Private Limited (https://webkul.com)\n * @license   https://store.webkul.com/license.html\n */\n\nrequire([\n    'Webkul_Marketplace/order/invoice-create-post-wrapper'\n]);\n","Webkul_Marketplace/js/order/invoice-create-post-wrapper.js":"/**\n * Webkul Software.\n *\n * @category  Webkul\n * @package   Webkul_Marketplace\n * @author    Webkul Software Private Limited\n * @copyright Webkul Software Private Limited (https://webkul.com)\n * @license   https://store.webkul.com/license.html\n */\n\ndefine([\n    'jquery',\n    'Magento_Ui/js/modal/confirm',\n    'mage/translate'\n], function ($, confirm) {\n    'use strict';\n\n    /**\n     * @param {String} url\n     * @returns {jQuery}\n     */\n    function getForm(url) {\n        return $('<form>', {\n            'action': url,\n            'method': 'POST'\n        }).append($('<input>', {\n            'name': 'form_key',\n            'value': window.FORM_KEY,\n            'type': 'hidden'\n        }));\n    }\n});\n","Webkul_Marketplace/js/order/seller-shipment-validation.js":"/**\n * Webkul Software.\n *\n * @category  Webkul\n * @package   Webkul_Marketplace\n * @author    Webkul Software Private Limited\n * @copyright Webkul Software Private Limited (https://webkul.com)\n * @license   https://store.webkul.com/license.html\n */\ndefine([\n    'jquery',\n    \"Magento_Ui/js/modal/alert\",\n    \"prototype\",\n    'jquery/ui'\n    ], function($, alert){\n        $.widget('mage.shipmentValidation', {\n            options: {\n            },\n            /**\n             * Widget initialization\n             * @private\n             */\n             _create: function() {\n                 self = this;\n                 if (jQuery('#wk-mp-send-email').length) {\n                    jQuery('#wk-mp-send-email').on('change', shipmentSendEmail);\n                    shipmentSendEmail();\n                }\n                function shipmentSendEmail() {\n                    if (jQuery('#wk-mp-send-email').prop('checked') == true) {\n                        jQuery('#wk-mp-notify-customer').prop('disabled', false);\n                    } else {\n                        jQuery('#wk-mp-notify-customer').prop('checked', false);\n                        jQuery('#wk-mp-notify-customer').prop('disabled', true);\n                    }\n                }\n                jQuery('#wk_mp_submit_shipment').on('click', submitSellerShipment);\n            \n                function submitSellerShipment() {\n                    if (!validShipmentItemsQty()) {\n                        alert({\n                            content: self.options.invalidQtyAlert\n                        });\n                        return false;\n                    }\n                }\n                function validShipmentItemsQty() {\n                    var valid = true;\n                    $('.wk-qty-input').each(function(shipmentItem) {\n                        var orderQty =  jQuery('.wk-qty-input').attr('data-orig');\n                        var val = parseFloat($(this).val());                                \n                        if (orderQty == \"\" || isNaN(val) || val < 0) {\n                            valid = false;\n                        }\n                        if(val > orderQty) {\n                            valid = false;\n                        }\n                    });\n                    return valid;\n                }\n                window.submitSellerShipment = submitSellerShipment;\n                window.validShipmentItemsQty = validShipmentItemsQty;\n                window.shipmentSendEmail = shipmentSendEmail;\n            }\n        });\n\n    return $.mage.shipmentValidation;\n});","Webkul_Marketplace/js/order/shipment.js":"/**\n * Webkul Software.\n *\n * @category  Webkul\n * @package   Webkul_Marketplace\n * @author    Webkul Software Private Limited\n * @copyright Webkul Software Private Limited (https://webkul.com)\n * @license   https://store.webkul.com/license.html\n */\n /*jshint jquery:true*/\n define([\n    \"jquery\",\n    'mage/translate',\n    'Magento_Ui/js/modal/alert',\n    'mage/template'\n], function ($, $t, alert, mageTemplate) {\n    'use strict';\n    $.widget('mage.sellerOrderShipment', {\n        _create: function () {\n            var self = this;\n            $('#wk-mp-tracking-carrier').change(function () {\n                if ($('select#wk-mp-tracking-carrier option:selected').val() != 'custom') {\n                    var val = $('select#wk-mp-tracking-carrier option:selected').text();\n                    $('#wk-mp-tracking-title').attr('value', $.trim(val));\n                } else {\n                    $('#wk-mp-tracking-title').attr('value', '');\n                }\n            });\n            $('body').on('click', '.wk-mp-tracking-action-delete', function (e) {\n                var thisObj = $(this);\n                $.ajax({\n                    url: thisObj.attr('data-url'),\n                    type: \"POST\",\n                    showLoader: true,\n                    success:function ($data) {\n                        if ($data.error) {\n                            alert({\n                                content: $data.message\n                            });\n                        } else {\n                            thisObj.parents('tr').remove();\n                        }\n                    },\n                    error: function (response) {\n                        alert({\n                            content: self.options.ajaxErrorMessage\n                        });\n                    }\n                });\n            });\n            $('#wk-mp-tracking-add').click(function (e) {\n                $.ajax({\n                    url: self.options.addTrackingAjaxUrl,\n                    type: \"POST\",\n                    data: {\n                        carrier: $('#wk-mp-tracking-carrier').val(),\n                        title: $('#wk-mp-tracking-title').val(),\n                        number: $('#wk-mp-tracking-number').val()\n                    },\n                    showLoader: true,\n                    success:function ($data) {\n                        if ($data.error) {\n                            alert({\n                                content: $data.message\n                            });\n                        } else {\n                            var progressTmpl = mageTemplate('#sellerOrderShipmentTemplate'),tmpl;\n                            tmpl = progressTmpl({\n                                data: {\n                                    carrier: $data.carrier,\n                                    title: $data.title,\n                                    number: $data.number,\n                                    numberclass: $data.numberclass,\n                                    numberclasshref: $data.numberclasshref,\n                                    trackingPopupUrl: $data.trackingPopupUrl,\n                                    trackingDeleteUrl: $data.trackingDeleteUrl\n                                }\n                            });\n                            $('#wk-mp-shipment-tracking-info-tbody').append(tmpl);\n                            $('#wk-mp-tracking-carrier').val('custom');\n                            $('#wk-mp-tracking-title').val('');\n                            $('#wk-mp-tracking-number').val('');\n                        }\n                    },\n                    error: function (response) {\n                        alert({\n                            content: self.options.ajaxErrorMessage\n                        });\n                    }\n                });\n            });\n        }\n    });\n    return $.mage.sellerOrderShipment;\n});\n","Webkul_Marketplace/js/product/crosssell-product.js":"/**\n * Webkul Software.\n *\n * @category  Webkul\n * @package   Webkul_Marketplace\n * @author    Webkul Software Private Limited\n * @copyright Webkul Software Private Limited (https://webkul.com)\n * @license   https://store.webkul.com/license.html\n */\n/*jshint jquery:true*/\ndefine([\n    \"jquery\",\n    'mage/translate',\n    'mage/template',\n    'Magento_Ui/js/modal/alert',\n    \"jquery/ui\"\n], function ($, $t, mageTemplate, alert) {\n    'use strict';\n    $.widget('mage.crosssellProduct', {\n        options: {\n            backUrl: ''\n        },\n        _create: function () {\n            var self = this;\n            var indexValue = 0;\n            var crosssellProductData = $.parseJSON(self.options.crosssellProducts);\n            if ($.isArray(crosssellProductData)) {\n                $(document).ajaxComplete(function ( event, request, settings ) {\n                    var currentAjaxUrl = settings.url;\n                    if (currentAjaxUrl.indexOf(\"marketplace_crosssell_product_listing\") > 0) {\n                        var responseData = $.parseJSON(request.responseText);\n                        if(responseData.totalRecords>0) {\n                            setTimeout(function () {\n                                if ($('#crosssell-product-block-wrapper .data-row').length) {\n                                    crosssellProductData.each(function (index, value) {\n                                        var indexId = index;\n                                        $(\"#crosssellIdscheck\"+indexId).trigger(\"click\");\n                                        crosssellProductData = $.grep(crosssellProductData, function (arrValue) {\n                                        return indexId !== arrValue;\n                                        });\n                                    });\n                                    $(\"#crosssell-product-block-loader\").hide();\n                                    $(\"#crosssell-product-block-wrapper\").show();\n                                } else {\n                                    setTimeout(function () {\n                                        if ($('#crosssell-product-block-wrapper .data-row').length) {\n                                            crosssellProductData.each(function (index, value) {\n                                                var indexId = index;\n                                                $(\"#crosssellIdscheck\"+indexId).trigger(\"click\");\n                                            });\n                                            $(\"#crosssell-product-block-loader\").hide();\n                                            $(\"#crosssell-product-block-wrapper\").show();\n                                        } else {\n                                            $(\"#crosssell-product-block-loader\").hide();\n                                            $(\"#crosssell-product-block-wrapper\").show();\n                                        }\n                                    }, 2000);\n                                }\n                            }, 2000);\n                        } else {\n                            $(\"#crosssell-product-block-loader\").hide();\n                            $(\"#crosssell-product-block-wrapper\").show();\n                        }\n                    } else {\n                        $(\"#crosssell-product-block-loader\").hide();\n                        $(\"#crosssell-product-block-wrapper\").show();\n                    }\n                });\n            }\n            $(this.element).delegate(\"#crosssell-product-block-wrapper .data-grid-multicheck-cell input\", 'change', function () {\n                if (!$(this).is(\":checked\")) {\n                    $('div[id^=\"crosssell-product-record\"').remove();\n                }\n            });\n            $(this.element).delegate(self.options.gridCheckbox, 'change', function () {\n                var productId = $(this).val();\n                var parentDivId = $(this).parents('div.admin__data-grid-wrap').parents('div').parents('div').attr('id');\n                if (parentDivId == 'crosssell-product-block-wrapper') {\n                    if ($(this).is(\":checked\")) {\n                        if (productId == 'on') {\n                            $('#crosssell-product-block-wrapper .data-row').each(function () {\n                                var trElement = $(this);\n                                var progressTmpl = mageTemplate(self.options.templateId),\n                                  tmpl;\n                                tmpl = progressTmpl({\n                                    data: {\n                                        index: indexValue,\n                                        id: trElement.find('.wk-mp-grid-id-cell').find('div').text(),\n                                        name: trElement.find('.wk-mp-grid-name-cell').find('div').text(),\n                                        status: trElement.find('.wk-mp-grid-status-cell').find('div').text(),\n                                        attribute_set: trElement.find('.wk-mp-grid-attributeset-cell').find('div').text(),\n                                        sku: trElement.find('.wk-mp-grid-sku-cell').find('div').text(),\n                                        price: trElement.find('.wk-mp-grid-price-cell').find('div').text(),\n                                        thumbnail: trElement.find('.data-grid-thumbnail-cell').find('img').attr('src'),\n                                        position: indexValue+1,\n                                        record_id: trElement.find('.wk-mp-grid-id-cell').find('div').text()\n                                    }\n                                });\n                                indexValue++;\n                                $(self.options.crosssellProductId).after(tmpl);\n                            });\n                        } else {\n                            var trElement = $(this).parents('tr');\n                            var progressTmpl = mageTemplate(self.options.templateId),\n                              tmpl;\n                            tmpl = progressTmpl({\n                                data: {\n                                    index: indexValue,\n                                    id: trElement.find('.wk-mp-grid-id-cell').find('div').text(),\n                                    name: trElement.find('.wk-mp-grid-name-cell').find('div').text(),\n                                    status: trElement.find('.wk-mp-grid-status-cell').find('div').text(),\n                                    attribute_set: trElement.find('.wk-mp-grid-attributeset-cell').find('div').text(),\n                                    sku: trElement.find('.wk-mp-grid-sku-cell').find('div').text(),\n                                    price: trElement.find('.wk-mp-grid-price-cell').find('div').text(),\n                                    thumbnail: trElement.find('.data-grid-thumbnail-cell').find('img').attr('src'),\n                                    position: indexValue+1,\n                                    record_id: trElement.find('.wk-mp-grid-id-cell').find('div').text()\n                                }\n                            });\n                            indexValue++;\n                            $(self.options.crosssellProductId).after(tmpl);\n                        }\n                    } else {\n                        $('#crosssell-product-record'+productId).remove();\n                    }\n                }\n            });\n        }\n    });\n    return $.mage.crosssellProduct;\n});\n","Webkul_Marketplace/js/product/product-date-range.js":"/**\n * Webkul Software.\n *\n * @category  Webkul\n * @package   Webkul_Marketplace\n * @author    Webkul Software Private Limited\n * @copyright Webkul Software Private Limited (https://webkul.com)\n * @license   https://store.webkul.com/license.html\n */\n /*jshint jquery:true*/\ndefine([\n    \"jquery\",\n    'mage/translate',\n    'Magento_Ui/js/modal/alert',\n    \"jquery/ui\",\n    'mage/calendar'\n], function ($, $t, alert) {\n    'use strict';\n    $.widget('mage.productDateRange', {\n        _create: function () {\n            var self = this;\n            $(\".wk-mp-body\").dateRange({\n                'dateFormat':'mm/dd/yy',\n                'from': {\n                    'id': 'special-from-date'\n                },\n                'to': {\n                    'id': 'special-to-date'\n                }\n            });\n        }\n    });\n    return $.mage.productDateRange;\n});\n","Webkul_Marketplace/js/product/related-product.js":"/**\n * Webkul Software.\n *\n * @category  Webkul\n * @package   Webkul_Marketplace\n * @author    Webkul Software Private Limited\n * @copyright Webkul Software Private Limited (https://webkul.com)\n * @license   https://store.webkul.com/license.html\n */\n/*jshint jquery:true*/\ndefine([\n    \"jquery\",\n    'mage/translate',\n    'mage/template',\n    'Magento_Ui/js/modal/alert',\n    \"jquery/ui\"\n], function ($, $t, mageTemplate, alert) {\n    'use strict';\n    $.widget('mage.relatedProduct', {\n        options: {\n            backUrl: ''\n        },\n        _create: function () {\n            var self = this;\n            var indexValue = 0;\n            var relatedProductData = $.parseJSON(self.options.relatedProducts);\n            if ($.isArray(relatedProductData)) {\n                $(document).ajaxComplete(function ( event, request, settings ) {\n                    var currentAjaxUrl = settings.url;\n                    if (currentAjaxUrl.indexOf(\"marketplace_related_product_listing\") > 0) {\n                        var responseData = $.parseJSON(request.responseText);\n                        if(responseData.totalRecords>0) {\n                            setTimeout(function () {\n                                if ($('#related-product-block-wrapper .data-row').length) {\n                                    relatedProductData.each(function (index, value) {\n                                        var indexId = index;\n                                        $(\"#relatedIdscheck\"+indexId).trigger(\"click\");\n                                        relatedProductData = $.grep(relatedProductData, function (arrValue) {\n                                        return indexId !== arrValue;\n                                        });\n                                    });\n                                    $(\"#related-product-block-loader\").hide();\n                                    $(\"#related-product-block-wrapper\").show();\n                                } else {\n                                    setTimeout(function () {\n                                        if ($('#related-product-block-wrapper .data-row').length) {\n                                            relatedProductData.each(function (index, value) {\n                                                var indexId = index;\n                                                $(\"#relatedIdscheck\"+indexId).trigger(\"click\");\n                                            });\n                                            $(\"#related-product-block-loader\").hide();\n                                            $(\"#related-product-block-wrapper\").show();\n                                        } else {\n                                            $(\"#related-product-block-loader\").hide();\n                                            $(\"#related-product-block-wrapper\").show();\n                                        }\n                                    }, 2000);\n                                }\n                            }, 2000);\n                        } else {\n                            $(\"#related-product-block-loader\").hide();\n                            $(\"#related-product-block-wrapper\").show();\n                        }\n                    } else {\n                        $(\"#related-product-block-loader\").hide();\n                        $(\"#related-product-block-wrapper\").show();\n                    }\n                });\n            }\n            $(this.element).delegate(\"#related-product-block-wrapper .data-grid-multicheck-cell input\", 'change', function () {\n                if (!$(this).is(\":checked\")) {\n                    $('div[id^=\"related-product-record\"').remove();\n                }\n            });\n            $(this.element).delegate(self.options.gridCheckbox, 'change', function () {\n                var productId = $(this).val();\n                var parentDivId = $(this).parents('div.admin__data-grid-wrap').parents('div').parents('div').attr('id');\n                if (parentDivId == 'related-product-block-wrapper') {\n                    if ($(this).is(\":checked\")) {\n                        if (productId == 'on') {\n                            $('#related-product-block-wrapper .data-row').each(function () {\n                                var trElement = $(this);\n                                var progressTmpl = mageTemplate(self.options.templateId),\n                                  tmpl;\n                                tmpl = progressTmpl({\n                                    data: {\n                                        index: indexValue,\n                                        id: trElement.find('.wk-mp-grid-id-cell').find('div').text(),\n                                        name: trElement.find('.wk-mp-grid-name-cell').find('div').text(),\n                                        status: trElement.find('.wk-mp-grid-status-cell').find('div').text(),\n                                        attribute_set: trElement.find('.wk-mp-grid-attributeset-cell').find('div').text(),\n                                        sku: trElement.find('.wk-mp-grid-sku-cell').find('div').text(),\n                                        price: trElement.find('.wk-mp-grid-price-cell').find('div').text(),\n                                        thumbnail: trElement.find('.data-grid-thumbnail-cell').find('img').attr('src'),\n                                        position: indexValue+1,\n                                        record_id: trElement.find('.wk-mp-grid-id-cell').find('div').text()\n                                    }\n                                });\n                                indexValue++;\n                                $(self.options.relatedProductId).after(tmpl);\n                            });\n                        } else {\n                            var trElement = $(this).parents('tr');\n                            var progressTmpl = mageTemplate(self.options.templateId),\n                              tmpl;\n                            tmpl = progressTmpl({\n                                data: {\n                                    index: indexValue,\n                                    id: trElement.find('.wk-mp-grid-id-cell').find('div').text(),\n                                    name: trElement.find('.wk-mp-grid-name-cell').find('div').text(),\n                                    status: trElement.find('.wk-mp-grid-status-cell').find('div').text(),\n                                    attribute_set: trElement.find('.wk-mp-grid-attributeset-cell').find('div').text(),\n                                    sku: trElement.find('.wk-mp-grid-sku-cell').find('div').text(),\n                                    price: trElement.find('.wk-mp-grid-price-cell').find('div').text(),\n                                    thumbnail: trElement.find('.data-grid-thumbnail-cell').find('img').attr('src'),\n                                    position: indexValue+1,\n                                    record_id: trElement.find('.wk-mp-grid-id-cell').find('div').text()\n                                }\n                            });\n                            indexValue++;\n                            $(self.options.relatedProductId).after(tmpl);\n                        }\n                    } else {\n                        $('#related-product-record'+productId).remove();\n                    }\n                }\n            });\n        }\n    });\n    return $.mage.relatedProduct;\n});\n","Webkul_Marketplace/js/product/seller-add-product.js":"/**\n * Webkul Software.\n *\n * @category  Webkul\n * @package   Webkul_Marketplace\n * @author    Webkul Software Private Limited\n * @copyright Webkul Software Private Limited (https://webkul.com)\n * @license   https://store.webkul.com/license.html\n */\n /*jshint jquery:true*/\ndefine([\n    \"jquery\",\n    'mage/translate',\n    'Magento_Ui/js/modal/alert',\n    \"jquery/ui\",\n    'mage/calendar'\n], function ($, $t, alert) {\n    'use strict';\n    $.widget('mage.sellerAddProduct', {\n        options: {\n            errorMessageSku: $t(\"SKU can\\'t be left empty\"),\n            ajaxErrorMessage: $t('There was error during fetching results.'),\n            productid: 0\n        },\n        _create: function () {\n            var self = this;\n            $(\"#edit-product\").dateRange({\n                'dateFormat':'mm/dd/yy',\n                'from': {\n                    'id': 'special-from-date'\n                },\n                'to': {\n                    'id': 'special-to-date'\n                }\n            });\n            $('#wk-mp-save-duplicate-btn').click(function () {\n                $(\"#edit-product\").append('<input type=\"hidden\" name=\"back\" value=\"duplicate\">');\n                $('#save-btn').trigger('click');\n            });\n            $('#save-btn').click(function (e) {\n                if ($(\"#edit-product\").valid()!==false) {\n                    if ($('#description_ifr').length) {\n                        var desc = document.getElementById('description_ifr').contentWindow.document.body.innerHTML;\n                        $('#description-error').remove();\n                        if (desc === \"\" || desc === null) {\n                            $('#description-error').remove();\n                            $('#description').parent().append('<div class=\"mage-error\" generated=\"true\" id=\"description-error\">This is a required field.</div>');\n                        }\n                        if (desc !== \"\" && desc !== null) {\n                            $('.button').css('opacity','0.7');\n                            $('.button').css('cursor','default');\n                            $('.button').attr('disabled','disabled');\n                            $('body').trigger('processStart');\n                            $('#edit-product').submit();\n                        } else {\n                            return false;\n                        }\n                    }\n                }\n            });\n            $('.input-text').change(function () {\n                var validt = $(this).val();\n                var regex = /(<([^>]+)>)/ig;\n                var mainvald = validt .replace(regex, \"\");\n                $(this).val(mainvald);\n            });\n            $('input#sku').change(function () {\n                var len=$('input#sku').val();\n                var len2=len.length;\n                if (len2 === 0) {\n                    alert({\n                        content: self.options.errorMessageSku\n                    });\n                    $('div#skuavail').css('display','none');\n                    $('div#skunotavail').css('display','none');\n                } else {\n                    self.callVerifySkuAjaxFunction();\n                }\n            });\n            $('body').on('change','.wk-elements',function () {\n                var category_id=$(this).val();\n                if (this.checked === true) {\n                    var $obj = $('<input>').attr('type','hidden').attr('name','product[category_ids][]').attr('id','wk-cat-hide'+category_id).attr('value',category_id);\n                    $('.wk-for-validation').append($obj);\n                } else {\n                    $('#wk-cat-hide'+category_id).remove();\n                }\n            });\n            $(\"#wk-bodymain\").delegate('.wk-plus ,.wk-plusend,.wk-minus, .wk-minusend ',\"click\",function () {\n                var thisthis=$(this);\n                if (thisthis.hasClass(\"wk-plus\") || thisthis.hasClass(\"wk-plusend\")) {\n                    if (thisthis.hasClass(\"wk-plus\")) {\n                        thisthis.removeClass('wk-plus').addClass('wk-plus_click');\n                    }\n                    if (thisthis.hasClass(\"wk-plusend\")) {\n                        thisthis.removeClass('wk-plusend').addClass('wk-plusend_click');\n                    }\n                    thisthis.prepend(\"<span class='wk-node-loader'></span>\");\n                    self.callCategoryTreeAjaxFunction(thisthis);\n                }\n                if (thisthis.hasClass(\"wk-minus\") || thisthis.hasClass(\"wk-minusend\")) {\n                    self.callRemoveCategoryNodeFunction(thisthis);\n                }\n            });\n        },\n        callVerifySkuAjaxFunction: function () {\n            var self = this;\n            $.ajax({\n                url: self.options.verifySkuAjaxUrl,\n                type: \"POST\",\n                data: {sku:$('input#sku').val(), product_id:self.options.productid},\n                dataType: 'html',\n                success:function ($data) {\n                    $data=JSON.parse($data);\n                    if ($data.avialability==1) {\n                        $('div#skuavail').css('display','block');\n                        $('div#skunotavail').css('display','none');\n                    } else {\n                        $('div#skunotavail').css('display','block');\n                        $('div#skuavail').css('display','none');\n                        $(\"input#sku\").attr('value','');\n                    }\n                },\n                error: function (response) {\n                    alert({\n                        content: self.options.ajaxErrorMessage\n                    });\n                }\n            });\n        },\n        callCategoryTreeAjaxFunction: function (thisthis) {\n            var self = this;\n            var i, len, name, id;\n            $.ajax({\n                url     :   self.options.categoryTreeAjaxUrl,\n                type    :   \"POST\",\n                data    :   {\n                    parentCategoryId:thisthis.siblings(\"input\").val()\n                },\n                dataType:   \"html\",\n                success :   function (content) {\n                    var newdata=  $.parseJSON(content);\n                    len = newdata.length;\n                    var pxl= parseInt(thisthis.parent(\".wk-cat-container\").css(\"margin-left\").replace(\"px\",\"\"))+20;\n                    thisthis.find(\".wk-node-loader\").remove();\n                    if (thisthis.attr(\"class\") == \"wk-plus\") {\n                        thisthis.attr(\"class\",\"wk-minus\");\n                    }\n                    if (thisthis.attr(\"class\") == \"wk-plusend\") {\n                        thisthis.attr(\"class\",\"wk-minusend\");\n                    }\n                    if (thisthis.attr(\"class\") == \"wk-plus_click\") {\n                        thisthis.attr(\"class\",\"wk-minus\");\n                    }\n                    if (thisthis.attr(\"class\") == \"wk-plusend_click\") {\n                        thisthis.attr(\"class\",\"wk-minusend\");\n                    }\n                    for (i=0; i<len; i++) {\n                        id=newdata[i].id;\n                        name=newdata[i].name;\n                        if ($('#wk-cat-hide'+id).length) {\n                            if (newdata[i].counting === 0) {\n                                thisthis.parent(\".wk-cat-container\").after('<div class=\"wk-removable wk-cat-container\" style=\"display:none;margin-left:'+pxl+'px;\"><span  class=\"wk-no\"></span><span class=\"wk-foldersign\"></span><span class=\"wk-elements wk-cat-name\">'+ name +'</span><input class=\"wk-elements\" type=\"checkbox\" checked name=\"product[category_ids][]\" value='+ id +'></div>');\n                            } else {\n                                thisthis.parent(\".wk-cat-container\").after('<div class=\"wk-removable wk-cat-container\" style=\"display:none;margin-left:'+pxl+'px;\"><span  class=\"wk-plusend\"></span><span class=\"wk-foldersign\"></span><span class=\"wk-elements wk-cat-name\">'+ name +'</span><input class=\"wk-elements\" type=\"checkbox\" checked name=\"product[category_ids][]\" value='+ id +'></div>');\n                            }\n                        } else {\n                            if (newdata[i].counting === 0) {\n                                thisthis.parent(\".wk-cat-container\").after('<div class=\"wk-removable wk-cat-container\" style=\"display:none;margin-left:'+pxl+'px;\"><span  class=\"wk-no\"></span><span class=\"wk-foldersign\"></span><span class=\"wk-elements wk-cat-name\">'+ name +'</span><input class=\"wk-elements\" type=\"checkbox\" name=\"product[category_ids][]\" value='+ id +'></div>');\n                            } else {\n                                thisthis.parent(\".wk-cat-container\").after('<div class=\"wk-removable wk-cat-container\" style=\"display:none;margin-left:'+pxl+'px;\"><span  class=\"wk-plusend\"></span><span class=\"wk-foldersign\"></span><span class=\"wk-elements wk-cat-name\">'+ name +'</span><input class=\"wk-elements\" type=\"checkbox\" name=\"product[category_ids][]\" value='+ id +'></div>');\n                            }\n                        }\n                    }\n                    thisthis.parent(\".wk-cat-container\").nextAll().slideDown(300);\n                },\n                error: function (response) {\n                    alert({\n                        content: self.options.ajaxErrorMessage\n                    });\n                }\n            });\n        },\n        callRemoveCategoryNodeFunction: function (thisthis) {\n            if (thisthis.attr(\"class\") == \"wk-minus\") {\n                thisthis.attr(\"class\",\"wk-plus\");\n            }\n            if (thisthis.attr(\"class\") == \"wk-minusend\") {\n                thisthis.attr(\"class\",\"wk-plusend\");\n            }\n            var thiscategory = thisthis.parent(\".wk-cat-container\");\n            var marg= parseInt(thiscategory.css(\"margin-left\").replace(\"px\",\"\"));\n            while (thiscategory.next().hasClass(\"wk-removable\")) {\n                if (parseInt(thiscategory.next().css(\"margin-left\").replace(\"px\",\"\"))>marg) {\n                    thiscategory.next().slideUp(\"slow\",function () {\n                        $(this).remove();\n                    });\n                }\n                thiscategory = thiscategory.next();\n                if (typeof thiscategory.next().css(\"margin-left\")!= \"undefined\") {\n                    if (marg == thiscategory.next().css(\"margin-left\").replace(\"px\",\"\")) {\n                        break;\n                    }\n                }\n            }\n        }\n    });\n    return $.mage.sellerAddProduct;\n});\n","Webkul_Marketplace/js/product/seller-category-tree.js":"/**\n * Webkul Software.\n *\n * @category  Webkul\n * @package   Webkul_Marketplace\n * @author    Webkul Software Private Limited\n * @copyright Webkul Software Private Limited (https://webkul.com)\n * @license   https://store.webkul.com/license.html\n */\ndefine([\n    'underscore',\n    'Magento_Ui/js/form/element/abstract',\n    'Magento_Ui/js/lib/key-codes',\n    'mage/translate',\n    'ko',\n    'jquery',\n    'Magento_Ui/js/lib/view/utils/async'\n], function (_, Abstract, keyCodes, $t, ko, $) {\n    'use strict';\n\n    var isTouchDevice = typeof document.ontouchstart !== 'undefined';\n\n    /**\n     * Processing options list\n     *\n     * @param {Array} array - Property array\n     * @param {String} separator - Level separator\n     * @param {Array} created - list to add new options\n     *\n     * @return {Array} Plain options list\n     */\n    function flattenCollection(array, separator, created)\n    {\n        var i = 0,\n            length,\n            childCollection;\n\n        array = _.compact(array);\n        length = array.length;\n        created = created || [];\n\n        for (i; i < length; i++) {\n            created.push(array[i]);\n\n            if (array[i].hasOwnProperty(separator)) {\n                childCollection = array[i][separator];\n                delete array[i][separator];\n                flattenCollection.call(this, childCollection, separator, created);\n            }\n        }\n\n        return created;\n    }\n\n    /**\n     * Set levels to options list\n     *\n     * @param {Array} array - Property array\n     * @param {String} separator - Level separator\n     * @param {Number} level - Starting level\n     * @param {String} path - path to root\n     *\n     * @returns {Array} Array with levels\n     */\n    function setProperty(array, separator, level, path)\n    {\n        var i = 0,\n            length,\n            nextLevel,\n            nextPath;\n\n        array = _.compact(array);\n        length = array.length;\n        level = level || 0;\n        path = path || '';\n\n        for (i; i < length; i++) {\n            if (array[i]) {\n                _.extend(array[i], {\n                    level: level,\n                    path: path\n                });\n            }\n\n            if (array[i].hasOwnProperty(separator)) {\n                nextLevel = level + 1;\n                nextPath = path ? path + '.' + array[i].label : array[i].label;\n                setProperty.call(this, array[i][separator], separator, nextLevel, nextPath);\n            }\n        }\n\n        return array;\n    }\n\n    /**\n     * Preprocessing options list\n     *\n     * @param {Array} nodes - Options list\n     *\n     * @return {Object} Object with property - options(options list)\n     *      and cache options with plain and tree list\n     */\n    function parseOptions(nodes)\n    {\n        var caption,\n            value,\n            cacheNodes,\n            copyNodes;\n\n        nodes = setProperty(nodes, 'optgroup');\n        copyNodes = JSON.parse(JSON.stringify(nodes));\n        cacheNodes = flattenCollection(copyNodes, 'optgroup');\n\n        nodes = _.map(nodes, function (node) {\n            value = node.value;\n\n            if (value == null || value === '') {\n                if (_.isUndefined(caption)) {\n                    caption = node.label;\n                }\n            } else {\n                return node;\n            }\n        });\n\n        return {\n            options: _.compact(nodes),\n            cacheOptions: {\n                plain: _.compact(cacheNodes),\n                tree: _.compact(nodes)\n            }\n        };\n    }\n\n    return Abstract.extend({\n        defaults: {\n            options: [],\n            listVisible: false,\n            value: [],\n            filterOptions: false,\n            chipsEnabled: true,\n            itemsQuantity: '',\n            filterInputValue: '',\n            filterOptionsFocus: false,\n            multiselectFocus: false,\n            multiple: true,\n            selectType: 'tree',\n            lastSelectable: false,\n            showFilteredQuantity: true,\n            showCheckbox: true,\n            levelsVisibility: true,\n            openLevelsAction: true,\n            showOpenLevelsActionIcon: true,\n            optgroupLabels: false,\n            closeBtn: true,\n            showPath: true,\n            labelsDecoration: false,\n            disableLabel: false,\n            filterRateLimit: 500,\n            closeBtnLabel: $t('Done'),\n            optgroupTmpl: 'ui/grid/filters/elements/ui-select-optgroup',\n            quantityPlaceholder: $t('options'),\n            hoverClass: '_hover',\n            rootListSelector: 'ul.admin__action-multiselect-menu-inner._root',\n            visibleOptionSelector: 'li.admin__action-multiselect-menu-inner-item:visible',\n            actionTargetSelector: '.action-menu-item',\n            selectedPlaceholders: {\n                defaultPlaceholder: $t('Select...'),\n                lotPlaceholders: $t('Selected')\n            },\n            separator: 'optgroup',\n            listens: {\n                listVisible: 'cleanHoveredElement',\n                filterInputValue: 'filterOptionsList',\n                options: 'checkOptionsList'\n            },\n            presets: {\n                single: {\n                    showCheckbox: false,\n                    chipsEnabled: false,\n                    closeBtn: false\n                },\n                optgroup: {\n                    showCheckbox: false,\n                    lastSelectable: true,\n                    optgroupLabels: true,\n                    openLevelsAction: false,\n                    labelsDecoration: true,\n                    showOpenLevelsActionIcon: false\n                }\n            }\n        },\n\n        /**\n         * Initializes UISelect component.\n         *\n         * @returns {UISelect} Chainable.\n         */\n        initialize: function () {\n            this._super();\n\n            $.async(\n                this.rootListSelector,\n                this,\n                this.onRootListRender.bind(this)\n            );\n\n            return this;\n        },\n\n        /**\n         * Parses options and merges the result with instance\n         * Set defaults according to mode and levels configuration\n         *\n         * @param  {Object} config\n         * @returns {Object} Chainable.\n         */\n        initConfig: function (config) {\n            var result = parseOptions(config.options),\n                defaults = this.constructor.defaults,\n                multiple = _.isBoolean(config.multiple) ? config.multiple : defaults.multiple,\n                type = config.selectType || defaults.selectType,\n                showOpenLevelsActionIcon = _.isBoolean(config.showOpenLevelsActionIcon) ?\n                    config.showOpenLevelsActionIcon :\n                    defaults.showOpenLevelsActionIcon,\n                openLevelsAction = _.isBoolean(config.openLevelsAction) ?\n                    config.openLevelsAction :\n                    defaults.openLevelsAction;\n\n            multiple = !multiple ? 'single' : false;\n            config.showOpenLevelsActionIcon = showOpenLevelsActionIcon && openLevelsAction;\n            _.extend(config, result, defaults.presets[multiple], defaults.presets[type]);\n            this._super();\n\n            return this;\n        },\n\n        /**\n         * Check child optgroup\n         */\n        hasChildList: function () {\n            return _.find(this.options(), function (option) {\n                return !!option[this.separator];\n            }, this);\n        },\n\n        /**\n         * Check tree mode\n         */\n        isTree: function () {\n            return this.hasChildList() && this.selectType !== 'optgroup';\n        },\n\n        /**\n         * Add option to lastOptions array\n         *\n         * @param {Object} data\n         * @returns {Boolean}\n         */\n        addLastElement: function (data) {\n            if (!data.hasOwnProperty(this.separator)) {\n                !this.cacheOptions.lastOptions ? this.cacheOptions.lastOptions = [] : false;\n\n                if (!_.findWhere(this.cacheOptions.lastOptions, { value: data.value })) {\n                    this.cacheOptions.lastOptions.push(data);\n                }\n\n                return true;\n            }\n\n            return false;\n        },\n\n        /**\n         * Check options length and set to cache\n         * if some options is added\n         *\n         * @param {Array} options - ui select options\n         */\n        checkOptionsList: function (options) {\n            if (options.length > this.cacheOptions.plain.length) {\n                this.cacheOptions.plain = options;\n                this.setCaption();\n            }\n        },\n\n        /**\n         * Check label decoration\n         */\n        isLabelDecoration: function (data) {\n            return data.hasOwnProperty(this.separator) && this.labelsDecoration;\n        },\n\n        /**\n         * Calls 'initObservable' of parent, initializes 'options' and 'initialOptions'\n         *     properties, calls 'setOptions' passing options to it\n         *\n         * @returns {Object} Chainable.\n         */\n        initObservable: function () {\n            this._super();\n            this.observe([\n                'listVisible',\n                'placeholder',\n                'multiselectFocus',\n                'options',\n                'itemsQuantity',\n                'filterInputValue',\n                'filterOptionsFocus'\n            ]);\n\n            this.filterInputValue.extend({\n                rateLimit: this.filterRateLimit\n            });\n\n            return this;\n        },\n\n        /**\n         * object with key - keyname and value - handler function for this key\n         *\n         * @returns {Object} Object with handlers function name.\n         */\n        keyDownHandlers: function () {\n            return {\n                enterKey: this.enterKeyHandler,\n                escapeKey: this.escapeKeyHandler,\n                spaceKey: this.enterKeyHandler,\n                pageUpKey: this.pageUpKeyHandler,\n                pageDownKey: this.pageDownKeyHandler\n            };\n        },\n\n        /**\n         * Processing level visibility for levels\n         *\n         * @param {Object} data - element data\n         *\n         * @returns {Boolean} level visibility.\n         */\n        showLevels: function (data) {\n            var curLevel = ++data.level,\n                isVisible;\n\n            if (data.visible) {\n                isVisible = data.visible();\n            } else {\n                isVisible = !!data.hasOwnProperty(this.separator) &&\n                    _.isBoolean(this.levelsVisibility) &&\n                    this.levelsVisibility ||\n                    data.hasOwnProperty(this.separator) && parseInt(this.levelsVisibility, 10) >= curLevel;\n\n                data.visible = ko.observable(isVisible);\n                data.isVisited = isVisible;\n            }\n\n            return isVisible;\n        },\n\n        /**\n         * Processing level visibility for levels\n         *\n         * @param {Object} data - element data\n         *\n         * @returns {Boolean} level visibility.\n         */\n        getLevelVisibility: function (data) {\n            if (data.visible) {\n                return data.visible();\n            }\n\n            return this.showLevels(data);\n        },\n\n        /**\n         * Set option to options array.\n         *\n         * @param {Object} option\n         * @param {Array} options\n         */\n        setOption: function (option, options) {\n            var copyOptionsTree;\n\n            options = options || this.cacheOptions.tree;\n\n            _.each(options, function (opt) {\n                if (opt.value == option.parent) { //eslint-disable-line eqeqeq\n                    delete  option.parent;\n                    opt[this.separator] ? opt[this.separator].push(option) : opt[this.separator] = [option];\n                    copyOptionsTree = JSON.parse(JSON.stringify(this.cacheOptions.tree));\n                    this.cacheOptions.plain = flattenCollection(copyOptionsTree, this.separator);\n                    this.options(this.cacheOptions.tree);\n                } else if (opt[this.separator]) {\n                    this.setOption(option, opt[this.separator]);\n                }\n            }, this);\n        },\n\n        /**\n         * Handler outerClick event. Closed options list\n         */\n        outerClick: function () {\n            this.listVisible() ? this.listVisible(false) : false;\n\n            if (isTouchDevice) {\n                this.multiselectFocus(false);\n            }\n        },\n\n        /**\n         * Handler keydown event to filter options input\n         *\n         * @returns {Boolean} Returned true for emersion events\n         */\n        filterOptionsKeydown: function (data, event) {\n            var key = keyCodes[event.keyCode];\n\n            !this.isTabKey(event) ? event.stopPropagation() : false;\n\n            if (key === 'pageDownKey' || key === 'pageUpKey') {\n                event.preventDefault();\n                this.filterOptionsFocus(false);\n                this.cacheUiSelect.focus();\n            }\n\n            this.keydownSwitcher(data, event);\n\n            return true;\n        },\n\n        /**\n         * Filtered options list by value from filter options list\n         */\n        filterOptionsList: function () {\n            var value = this.filterInputValue().trim().toLowerCase(),\n                array = [];\n\n            if (value && value.length < 2) {\n                return false;\n            }\n\n            this.cleanHoveredElement();\n\n            if (!value) {\n                this.renderPath = false;\n                this.options(this.cacheOptions.tree);\n                this._setItemsQuantity(false);\n\n                return false;\n            }\n\n            this.showPath ? this.renderPath = true : false;\n\n            if (this.filterInputValue()) {\n                array = this.selectType === 'optgroup' ?\n                    this._getFilteredArray(this.cacheOptions.lastOptions, value) :\n                    this._getFilteredArray(this.cacheOptions.plain, value);\n\n                if (!value.length) {\n                    this.options(this.cacheOptions.plain);\n                    this._setItemsQuantity(this.cacheOptions.plain.length);\n                } else {\n                    this.options(array);\n                    this._setItemsQuantity(array.length);\n                }\n\n                return false;\n            }\n\n            this.options(this.cacheOptions.plain);\n        },\n\n        /**\n         * Filtered options list by value from filter options list\n         *\n         * @param {Array} list - option list\n         * @param {String} value\n         *\n         * @returns {Array} filters result\n         */\n        _getFilteredArray: function (list, value) {\n            var i = 0,\n                array = [],\n                curOption;\n\n            for (i; i < list.length; i++) {\n                curOption = list[i].label.toLowerCase();\n\n                if (curOption.indexOf(value) > -1) {\n                    array.push(list[i]); /*eslint max-depth: [2, 4]*/\n                }\n            }\n\n            return array;\n        },\n\n        /**\n         * Get path to current option\n         *\n         * @param {Object} data - option data\n         * @returns {String} path\n         */\n        getPath: function (data) {\n            var pathParts,\n                createdPath = '';\n\n            if (this.renderPath) {\n                pathParts = data.path.split('.');\n                _.each(pathParts, function (curData) {\n                    createdPath = createdPath ? createdPath + ' / ' + curData : curData;\n                });\n\n                return createdPath;\n            }\n        },\n\n        /**\n         * Set filtered items quantity\n         *\n         * @param {Object} data - option data\n         */\n        _setItemsQuantity: function (data) {\n            if (this.showFilteredQuantity) {\n                data || parseInt(data, 10) === 0 ?\n                    this.itemsQuantity(data + ' ' + this.quantityPlaceholder) :\n                    this.itemsQuantity('');\n            }\n        },\n\n        /**\n         * Remove element from selected array\n         */\n        removeSelected: function (value, data, event) {\n            event ? event.stopPropagation() : false;\n            this.value.remove(value);\n        },\n\n        /**\n         * Checked key name\n         *\n         * @returns {Boolean}\n         */\n        isTabKey: function (event) {\n            return keyCodes[event.keyCode] === 'tabKey';\n        },\n\n        /**\n         * Clean hoveredElement variable\n         *\n         * @returns {Object} Chainable\n         */\n        cleanHoveredElement: function () {\n            if (this.hoveredElement) {\n                $(this.hoveredElement)\n                    .children(this.actionTargetSelector)\n                    .removeClass(this.hoverClass);\n\n                this.hoveredElement = null;\n            }\n\n            return this;\n        },\n\n        /**\n         * Check selected option\n         *\n         * @param {String} value - option value\n         * @return {Boolean}\n         */\n        isSelected: function (value) {\n            return this.multiple ? _.contains(this.value(), value) : this.value() === value;\n        },\n\n        /**\n         * Check optgroup label\n         *\n         * @param {Object} data - element data\n         * @return {Boolean}\n         */\n        isOptgroupLabels: function (data) {\n            return data.hasOwnProperty(this.separator) && this.optgroupLabels;\n        },\n\n        /**\n         * Check hovered option\n         *\n         * @param {Object} data - element data\n         * @return {Boolean}\n         */\n        isHovered: function (data) {\n            var element = this.hoveredElement,\n                elementData;\n\n            if (!element) {\n                return false;\n            }\n\n            elementData = ko.dataFor(this.hoveredElement);\n\n            return data.value === elementData.value;\n        },\n\n        /**\n         * Toggle list visibility\n         *\n         * @returns {Object} Chainable\n         */\n        toggleListVisible: function () {\n            this.listVisible(!this.listVisible());\n\n            return this;\n        },\n\n        /**\n         * Get selected element labels\n         *\n         * @returns {Array} array labels\n         */\n        getSelected: function () {\n            var selected = this.value();\n\n            return this.cacheOptions.plain.filter(function (opt) {\n                return _.isArray(selected) ?\n                    _.contains(selected, opt.value) :\n                selected == opt.value;//eslint-disable-line eqeqeq\n            });\n        },\n\n        /**\n         * Toggle activity list element\n         *\n         * @param {Object} data - selected option data\n         * @returns {Object} Chainable\n         */\n        toggleOptionSelected: function (data) {\n            var isSelected = this.isSelected(data.value);\n\n            if (this.lastSelectable && data.hasOwnProperty(this.separator)) {\n                return this;\n            }\n\n            if (!this.multiple) {\n                if (!isSelected) {\n                    this.value(data.value);\n                }\n                this.listVisible(false);\n            } else {\n                if (!isSelected) { /*eslint no-lonely-if: 0*/\n                    this.value.push(data.value);\n                } else {\n                    this.value(_.without(this.value(), data.value));\n                }\n            }\n\n            return this;\n        },\n\n        /**\n         * Change visibility to child level\n         *\n         * @param {Object} data - element data\n         */\n        openChildLevel: function (data) {\n            var contextElement = data,\n                isVisible;\n\n            if (this.openLevelsAction && data.hasOwnProperty(this.separator) && _.isBoolean(this.levelsVisibility) || this.openLevelsAction && data.hasOwnProperty(this.separator) && parseInt(this.levelsVisibility, 10) <= data.level) {\n                isVisible = !contextElement.visible();\n\n                if (isVisible && !contextElement.isVisited) {\n                    contextElement.isVisited = true;\n                }\n\n                contextElement.visible(isVisible);\n            }\n        },\n\n        /**\n         * Check selected elements\n         *\n         * @returns {Boolean}\n         */\n        hasData: function () {\n            if (!this.value()) {\n                this.value([]);\n            }\n\n            return this.value() ? !!this.value().length : false;\n        },\n\n        /**\n         * @deprecated\n         */\n        onMousemove: function () {},\n\n        /**\n         * Handles hover on list items.\n         *\n         * @param {Object} event - mousemove event\n         */\n        onDelegatedMouseMouve: function (event) {\n            var target = $(event.currentTarget).closest(this.visibleOptionSelector)[0];\n\n            if (this.isCursorPositionChange(event) || this.hoveredElement === target) {\n                return;\n            }\n\n            this._hoverTo(target);\n            this.setCursorPosition(event);\n        },\n\n        /**\n         * Get option index\n         *\n         * @param {Object} data - object with data about this element\n         *\n         * @returns {Number}\n         */\n        getOptionIndex: function (data) {\n            var index;\n\n            _.each(this.cacheOptions.plain, function (opt, id) {\n                if (data.value === opt.value) {\n                    index = id;\n                }\n            });\n\n            return index;\n        },\n\n        /**\n         * Set X and Y cursor position\n         *\n         * @param {Object} event - mousemove event\n         */\n        setCursorPosition: function (event) {\n            this.cursorPosition = {\n                x: event.pageX,\n                y: event.pageY\n            };\n        },\n\n        /**\n         * Check previous and current cursor position\n         *\n         * @param {Object} event - mousemove event\n         * @returns {Boolean}\n         */\n        isCursorPositionChange: function (event) {\n            return this.cursorPosition &&\n                this.cursorPosition.x === event.pageX &&\n                this.cursorPosition.y === event.pageY;\n        },\n\n        /**\n         * Set true to observable variable multiselectFocus\n         * @param {Object} ctx\n         * @param {Object} event - focus event\n         */\n        onFocusIn: function (ctx, event) {\n            !this.cacheUiSelect ? this.cacheUiSelect = event.target : false;\n            this.multiselectFocus(true);\n        },\n\n        /**\n         * Set false to observable variable multiselectFocus\n         * and close list\n         */\n        onFocusOut: function () {\n            this.multiselectFocus(false);\n        },\n\n        /**\n         * Handler enter key, if select list is closed - open select,\n         * if select list is open toggle selected current option\n         */\n        enterKeyHandler: function () {\n\n            if (this.filterOptionsFocus()) {\n                return false;\n            }\n\n            if (this.listVisible()) {\n                if (this.hoveredElement) {\n                    this.toggleOptionSelected(ko.dataFor(this.hoveredElement));\n                }\n            } else {\n                this.setListVisible(true);\n            }\n        },\n\n        /**\n         * Handler escape key, if select list is open - closes it,\n         */\n        escapeKeyHandler: function () {\n            this.listVisible() ? this.setListVisible(false) : false;\n        },\n\n        /**\n         * Handler pageDown key, selected next option in list, if current option is last\n         * selected first option in list\n         */\n        pageDownKeyHandler: function () {\n            this._setHoverToElement(1);\n        },\n\n        /**\n         * Get jQuery element by option data\n         *\n         * @param {Object} data - option data\n         *\n         * @returns {Object} jQuery element\n         */\n        _getElemByData: function (data) {\n            var i = 0,\n                list = $(this.cacheUiSelect).find('li'),\n                length = this.options().length,\n                result;\n\n            for (i; i < length; i++) {\n                if (this.options()[i].value === data.value) {\n                    result = $(list[i]);\n                }\n            }\n\n            return result;\n        },\n\n        /**\n         * Set hover to visible element\n         *\n         * @param {Number} direction - iterator\n         */\n        _setHoverToElement: function (direction) {\n            var element;\n\n            if (direction ===  1) {\n                element = this._getNextElement();\n            } else if (direction === -1) {\n                element = this._getPreviousElement();\n            }\n\n            if (element) {\n                this._hoverTo(element);\n                this._scrollTo(element);\n            }\n        },\n\n        /**\n         * Find current hovered element\n         * and change scroll position\n         *\n         * @param {Number} element - element index\n         */\n        _scrollTo: function (element) {\n            var curEl = $(element).children(this.actionTargetSelector),\n                wrapper = $(this.rootList),\n                curElPos = {},\n                wrapperPos = {};\n\n            curElPos.start = curEl.offset().top;\n            curElPos.end = curElPos.start + curEl.outerHeight();\n\n            wrapperPos.start = wrapper.offset().top;\n            wrapperPos.end = wrapperPos.start + wrapper.height();\n\n            if (curElPos.start < wrapperPos.start) {\n                wrapper.scrollTop(wrapper.scrollTop() - (wrapperPos.start - curElPos.start));\n            } else if (curElPos.end > wrapperPos.end) {\n                wrapper.scrollTop(wrapper.scrollTop() + curElPos.end - wrapperPos.end);\n            }\n        },\n\n        /**\n         * Handler pageUp key, selected previous option in list, if current option is first -\n         * selected last option in list\n         */\n        pageUpKeyHandler: function () {\n            this._setHoverToElement(-1);\n        },\n\n        /**\n         * Switcher to parse keydown event and delegate event to needful method\n         *\n         * @param {Object} data - element data\n         * @param {Object} event - keydown event\n         * @returns {Boolean} if handler for this event doesn't found return true\n         */\n        keydownSwitcher: function (data, event) {\n            var keyName = keyCodes[event.keyCode];\n\n            if (this.isTabKey(event)) {\n                if (!this.filterOptionsFocus() && this.listVisible() && this.filterOptions) {\n                    this.cacheUiSelect.blur();\n                    this.filterOptionsFocus(true);\n                    this.cleanHoveredElement();\n\n                    return false;\n                }\n                this.listVisible(false);\n\n                return true;\n            }\n\n            if (this.keyDownHandlers().hasOwnProperty(keyName)) {\n                this.keyDownHandlers()[keyName].apply(this, arguments);\n            } else {\n                return true;\n            }\n        },\n\n        /**\n         * Set caption\n         */\n        setCaption: function () {\n            var length;\n\n            if (!_.isArray(this.value()) && this.value()) {\n                length = 1;\n            } else if (this.value()) {\n                length = this.value().length;\n            } else {\n                this.value([]);\n                length = 0;\n            }\n\n            if (length > 1) {\n                this.placeholder(length + ' ' + this.selectedPlaceholders.lotPlaceholders);\n            } else if (length && this.getSelected().length) {\n                this.placeholder(this.getSelected()[0].label);\n            } else {\n                this.placeholder(this.selectedPlaceholders.defaultPlaceholder);\n            }\n\n            return this.placeholder();\n        },\n\n        /**\n         * Set list status, open or close\n         *\n         * @param {Boolean} value - variable for set list visible status\n         */\n        setListVisible: function (value) {\n            this.listVisible(value);\n        },\n\n        /**\n         * Processes preview for option by it's value, and sets the result\n         * to 'preview' observable\n         *\n         * @returns {String}\n         */\n        getPreview: function () {\n            var selected = this.getSelected();\n\n            return selected.map(function (option) {\n                return option.label;\n            }).join(', ');\n        },\n\n        /**\n         * Defines previous option element to\n         * the one that is currently hovered.\n         *\n         * @returns {Element}\n         */\n        _getPreviousElement: function () {\n            var currentElement = this.hoveredElement,\n                lastElement    = this._getLastIn(this.rootList),\n                previousElement;\n\n            if (!currentElement) {\n                return lastElement;\n            }\n\n            previousElement = $(currentElement).prev()[0];\n\n            return this._getLastIn(previousElement) ||\n                previousElement ||\n                this._getFirstParentOf(currentElement) ||\n                lastElement;\n        },\n\n        /**\n         * Defines next option element to\n         * the one that is currently hovered.\n         *\n         * @returns {Element}\n         */\n        _getNextElement: function () {\n            var currentElement = this.hoveredElement,\n                firstElement   = this._getFirstIn(this.rootList);\n\n            if (!currentElement) {\n                return firstElement;\n            }\n\n            return this._getFirstIn(currentElement) ||\n                $(currentElement).next()[0] ||\n                this._getParentsOf(currentElement).next()[0] ||\n                firstElement;\n        },\n\n        /**\n         * Returns first option element in provided scope.\n         *\n         * @param {Element} scope\n         * @returns {Element}\n         */\n        _getFirstIn: function (scope) {\n            return $(scope).find(this.visibleOptionSelector)[0];\n        },\n\n        /**\n         * Returns last descendant option element in provided scope.\n         *\n         * @param {Element} scope\n         * @returns {Element}\n         */\n        _getLastIn: function (scope) {\n            return $(scope).find(this.visibleOptionSelector).last()[0];\n        },\n\n        /**\n         * Returns a collection of parent option elements.\n         *\n         * @param {Element} scope\n         * @returns {jQueryCollection}\n         */\n        _getParentsOf: function (scope) {\n            return $(scope).parents(this.visibleOptionSelector);\n        },\n\n        /**\n         * Returns first parent option element.\n         *\n         * @param {Element} scope\n         * @returns {Element}\n         */\n        _getFirstParentOf: function (scope) {\n            return this._getParentsOf(scope)[0];\n        },\n\n        /**\n         * Sets hover class to provided option element.\n         *\n         * @param {Element} element\n         */\n        _hoverTo: function (element) {\n            if (this.hoveredElement) {\n                $(this.hoveredElement)\n                    .children(this.actionTargetSelector)\n                    .removeClass(this.hoverClass);\n            }\n\n            $(element)\n                .children(this.actionTargetSelector)\n                .addClass(this.hoverClass);\n\n            this.hoveredElement = element;\n        },\n\n        /**\n         * Callback which fires when root list element is rendered.\n         *\n         * @param {Element} element\n         */\n        onRootListRender: function (element) {\n            var targetSelector = 'li > ' + this.actionTargetSelector;\n\n            this.rootList = element;\n\n            $(this.rootList).on(\n                'mousemove',\n                targetSelector,\n                this.onDelegatedMouseMouve.bind(this)\n            );\n        }\n    });\n});\n","Webkul_Marketplace/js/product/seller-edit-product.js":"/**\n * Webkul Software.\n *\n * @category  Webkul\n * @package   Webkul_Marketplace\n * @author    Webkul Software Private Limited\n * @copyright Webkul Software Private Limited (https://webkul.com)\n * @license   https://store.webkul.com/license.html\n */\n /*jshint jquery:true*/\ndefine([\n    \"jquery\",\n    'mage/translate',\n    'Magento_Ui/js/modal/alert',\n    \"jquery/ui\",\n    'mage/calendar'\n], function ($, $t, alert) {\n    'use strict';\n    $.widget('mage.sellerEditProduct', {\n        options: {\n            errorMessageSku: $t(\"SKU can\\'t be left empty\"),\n            ajaxErrorMessage: $t('There was error during fetching results.')\n        },\n        _create: function () {\n            var self = this;\n            if (self.options.productTypeId !=' configurable') {\n                $(\"#edit-product\").dateRange({\n                    'dateFormat':'mm/dd/yy',\n                    'from': {\n                        'id': 'special-from-date'\n                    },\n                    'to': {\n                        'id': 'special-to-date'\n                    }\n                });\n            }\n            $('#wk-mp-save-duplicate-btn').click(function () {\n                $(\"#edit-product\").append('<input type=\"hidden\" name=\"back\" value=\"duplicate\">');\n                $('#save-btn').trigger('click');\n            });\n            $('#save-btn').click(function (e) {\n                if ($(\"#edit-product\").valid()!==false) {\n                    if ($('#description_ifr').length) {\n                        var desc = document.getElementById('description_ifr').contentWindow.document.body.innerHTML;\n                        $('#description-error').remove();\n                        if (desc === \"\" || desc === null) {\n                            $('#description-error').remove();\n                            $('#description').parent().append('<div class=\"mage-error\" generated=\"true\" id=\"description-error\">This is a required field.</div>');\n                        }\n                        if (desc !== \"\" && desc !== null) {\n                            $('.button').css('opacity','0.7');\n                            $('.button').css('cursor','default');\n                            $('.button').attr('disabled','disabled');\n                            $('body').trigger('processStart');\n                            $('#edit-product').submit();\n                        } else {\n                            return false;\n                        }\n                    }\n                }\n            });\n            $('.input-text').change(function () {\n                var validt = $(this).val();\n                var regex = /(<([^>]+)>)/ig;\n                var mainvald = validt .replace(regex, \"\");\n                $(this).val(mainvald);\n            });\n            $('input#sku').change(function () {\n                var len=$('input#sku').val();\n                var len2=len.length;\n                if (len2 === 0) {\n                    alert({\n                        content: self.options.errorMessageSku\n                    });\n                    $('div#skuavail').css('display','none');\n                    $('div#skunotavail').css('display','none');\n                } else {\n                    self.callVerifySkuAjaxFunction();\n                }\n            });\n            $('body').on('change','.wk-elements',function () {\n                var category_id=$(this).val();\n                if (this.checked === true) {\n                    var $obj = $('<input>').attr('type','hidden').attr('name','product[category_ids][]').attr('id','wk-cat-hide'+category_id).attr('value',category_id);\n                    $('.wk-for-validation').append($obj);\n                } else {\n                    $('#wk-cat-hide'+category_id).remove();\n                }\n            });\n            $(\"#wk-bodymain\").delegate('.wk-plus ,.wk-plusend,.wk-minus, .wk-minusend ',\"click\",function () {\n                var thisthis=$(this);\n                if (thisthis.hasClass(\"wk-plus\") || thisthis.hasClass(\"wk-plusend\")) {\n                    if (thisthis.hasClass(\"wk-plus\")) {\n                        thisthis.removeClass('wk-plus').addClass('wk-plus_click');\n                    }\n                    if (thisthis.hasClass(\"wk-plusend\")) {\n                        thisthis.removeClass('wk-plusend').addClass('wk-plusend_click');\n                    }\n                    thisthis.prepend(\"<span class='wk-node-loader'></span>\");\n                    self.callCategoryTreeAjaxFunction(thisthis);\n                }\n                if (thisthis.hasClass(\"wk-minus\") || thisthis.hasClass(\"wk-minusend\")) {\n                    self.callRemoveCategoryNodeFunction(thisthis);\n                }\n            });\n        },\n        callVerifySkuAjaxFunction: function () {\n            var self = this;\n            $.ajax({\n                url: self.options.verifySkuAjaxUrl,\n                type: \"POST\",\n                data: {sku:$('input#sku').val(), product_id:self.options.productid},\n                dataType: 'html',\n                success:function ($data) {\n                    $data=JSON.parse($data);\n                    if ($data.avialability==1) {\n                        $('div#skuavail').css('display','block');\n                        $('div#skunotavail').css('display','none');\n                    } else {\n                        $('div#skunotavail').css('display','block');\n                        $('div#skuavail').css('display','none');\n                        $(\"input#sku\").attr('value','');\n                    }\n                },\n                error: function (response) {\n                    alert({\n                        content: self.options.ajaxErrorMessage\n                    });\n                }\n            });\n        },\n        callCategoryTreeAjaxFunction: function (thisthis) {\n            var self = this;\n            var i, len, name, id, checkn;\n            $.ajax({\n                url     :   self.options.categoryTreeAjaxUrl,\n                type    :   \"POST\",\n                data    :   {\n                    parentCategoryId : thisthis.siblings(\"input\").val(),\n                    categoryIds :   self.options.categories\n                },\n                dataType:   \"html\",\n                success :   function (content) {\n                    var newdata=  $.parseJSON(content);\n                    len = newdata.length;\n                    var pxl= parseInt(thisthis.parent(\".wk-cat-container\").css(\"margin-left\").replace(\"px\",\"\"))+20;\n                    thisthis.find(\".wk-node-loader\").remove();\n                    if (thisthis.attr(\"class\") == \"wk-plus\") {\n                        thisthis.attr(\"class\",\"wk-minus\");\n                    }\n                    if (thisthis.attr(\"class\") == \"wk-plusend\") {\n                        thisthis.attr(\"class\",\"wk-minusend\");\n                    }\n                    if (thisthis.attr(\"class\") == \"wk-plus_click\") {\n                        thisthis.attr(\"class\",\"wk-minus\");\n                    }\n                    if (thisthis.attr(\"class\") == \"wk-plusend_click\") {\n                        thisthis.attr(\"class\",\"wk-minusend\");\n                    }\n                    for (i=0; i<len; i++) {\n                        id=newdata[i].id;\n                        checkn=newdata[i].check;\n                        name=newdata[i].name;\n                        if (checkn==1) {\n                            if (newdata[i].counting === 0) {\n                                thisthis.parent(\".wk-cat-container\").after('<div class=\"wk-removable wk-cat-container\" style=\"display:none;margin-left:'+pxl+'px;\"><span  class=\"wk-no\"></span><span class=\"wk-foldersign\"></span><span class=\"wk-elements wk-cat-name\">'+ name +'</span><input class=\"wk-elements\" type=\"checkbox\" checked value='+ id+'></div>');\n                            } else {\n                                thisthis.parent(\".wk-cat-container\").after('<div class=\"wk-removable wk-cat-container\" style=\"display:none;margin-left:'+pxl+'px;\"><span  class=\"wk-plusend\"></span><span class=\"wk-foldersign\"></span><span class=\"wk-elements wk-cat-name\">'+ name +'</span><input class=\"wk-elements\" type=\"checkbox\" checked value='+ id +'></div>');\n                            }\n                        } else {\n                            if (newdata[i].counting === 0) {\n                                thisthis.parent(\".wk-cat-container\").after('<div class=\"wk-removable wk-cat-container\" style=\"display:none;margin-left:'+pxl+'px;\"><span  class=\"wk-no\"></span><span class=\"wk-foldersign\"></span><span class=\"wk-elements wk-cat-name\">'+ name +'</span><input class=\"wk-elements\" type=\"checkbox\" value='+ id+'></div>');\n                            } else {\n                                thisthis.parent(\".wk-cat-container\").after('<div class=\"wk-removable wk-cat-container\" style=\"display:none;margin-left:'+pxl+'px;\"><span  class=\"wk-plusend\"></span><span class=\"wk-foldersign\"></span><span class=\"wk-elements wk-cat-name\">'+ name +'</span><input class=\"wk-elements\" type=\"checkbox\" value='+ id +'></div>');\n                            }\n                        }\n                    }\n                    thisthis.parent(\".wk-cat-container\").nextAll().slideDown(300);\n                },\n                error: function (response) {\n                    alert({\n                        content: self.options.ajaxErrorMessage\n                    });\n                }\n            });\n        },\n        callRemoveCategoryNodeFunction: function (thisthis) {\n            if (thisthis.attr(\"class\") == \"wk-minus\") {\n                thisthis.attr(\"class\",\"wk-plus\");\n            }\n            if (thisthis.attr(\"class\") == \"wk-minusend\") {\n                thisthis.attr(\"class\",\"wk-plusend\");\n            }\n            var thiscategory = thisthis.parent(\".wk-cat-container\");\n            var marg= parseInt(thiscategory.css(\"margin-left\").replace(\"px\",\"\"));\n            while (thiscategory.next().hasClass(\"wk-removable\")) {\n                if (parseInt(thiscategory.next().css(\"margin-left\").replace(\"px\",\"\"))>marg) {\n                    thiscategory.next().slideUp(\"slow\",function () {\n                        $(this).remove();\n                    });\n                }\n                thiscategory = thiscategory.next();\n                if (typeof thiscategory.next().css(\"margin-left\")!= \"undefined\") {\n                    if (marg == thiscategory.next().css(\"margin-left\").replace(\"px\",\"\")) {\n                        break;\n                    }\n                }\n            }\n        }\n    });\n    return $.mage.sellerEditProduct;\n});\n","Webkul_Marketplace/js/product/seller-product-info.js":"/**\n * Webkul Software.\n *\n * @category  Webkul\n * @package   Webkul_Marketplace\n * @author    Webkul Software Private Limited\n * @copyright Webkul Software Private Limited (https://webkul.com)\n * @license   https://store.webkul.com/license.html\n */\ndefine([\n    \"jquery\",\n    \"Magento_Ui/js/modal/alert\",\n    \"mage/mage\"\n], function($, alert) {\n        $.widget('mage.sellerProductInfo', {\n            options: {\n            },\n            /**\n             * Widget initialization\n             * @private\n             */\n             _create: function() {\n                self = this;\n                var askDataForm = $('#ask-form');\n                var cardType = self.options.cardType;\n\n                askDataForm.mage('validation', {});\n                var flagDataForm = $('#flag-form');\n                flagDataForm.mage('validation', {});\n                if (cardType == 2) {\n                    $('.product-info-main').before($('#mp-wk-block'));\n                } else {\n                    $('.product-info-main').append($('#mp-wk-block'));\n                }\n                $('#mp-wk-block').removeClass('no-display');\n                $('#mp-wk-block').addClass('wk-display-block');\n\n                $('body').append($('#wk-mp-ask-data'));\n                $('body').append($('#wk-mp-flag-data'));\n                $(\".wk-seller-rating-number\" ).mouseover(function() {\n                        $( \".wk-seller-rating\" ).show();\n                }).mouseout(function() {\n                    $( \".wk-seller-rating\" ).hide();\n                    });\n\n                $('#askque').click(function() {\n                    $('#ask-form input,#ask-form textarea').removeClass('mage-error');\n                    $('.page-wrapper').css('opacity','0.4');\n                    $('.wk-mp-model-popup').addClass('_show');\n                    $('#wk-mp-ask-data').show();\n                });\n                $('.wk-close').click(function() {\n                    $('.page-wrapper').css('opacity','1');\n                    $('#resetbtn').trigger('click');\n                    $('#wk-mp-ask-data').hide();\n                    $('#ask-form .validation-failed').each(function() {\n                        $(this).removeClass('validation-failed');\n                    });\n                    $('#ask-form .validation-advice').each(function() {\n                        $(this).remove();\n                    });\n                });\n                $('#askbtn').click(function() {\n                    if (askDataForm.valid()!=false) {\n                        var thisthis = $(this);\n                        if (thisthis.hasClass(\"clickask\")) {\n                            if (self.options.captchenable) {\n                                var total = parseInt($('#wk-mp-captchalable1').text()) \n                                + parseInt($('#wk-mp-captchalable2').text());\n                                var wk_mp_captcha = $('#wk-mp-captcha').val();\n                                if (total != wk_mp_captcha) {\n                                    $('#wk-mp-captchalable1').text(Math.floor((Math.random()*10)+1));\n                                    $('#wk-mp-captchalable2').text(Math.floor((Math.random()*100)+1));\n                                    $('#wk-mp-captcha').val('');\n                                    $('#wk-mp-captcha').addClass('mage-error');\n                                    $(this).addClass('mage-error');\n                                    $('#ask_form .errormail').text(self.options.wrongNumber)\n                                    .slideDown('slow').delay(2000).slideUp('slow');\n                                } else {\n                                    thisthis.removeClass('clickask');\n                                    $('#wk-mp-ask-data').addClass('mail-procss');\n                                    $.ajax({\n                                        url:self.options.sendMailUrl,\n                                        data:$('#ask-form').serialize(),\n                                        type:'post',\n                                        dataType:'json',\n                                        success:function(d) {\n                                            thisthis.addClass('clickask');\n                                            $('#wk-mp-ask-data').removeClass('mail-procss')\n                                            alert({\n                                                title: $.mage.__('Success Message'),\n                                                content: $.mage.__('Your mail has been sent...'),\n                                                actions: {\n                                                    always: function(){\n                                                        $('.wk-close,#resetbtn').trigger('click');\n                                                    }\n                                                },\n                                                buttons: [{\n                                                    text: $.mage.__('Close'),\n                                                    class: 'action primary close',\n                                                    click: function () {\n                                                        this.closeModal(true);\n                                                    }\n                                                }]\n                                            });\n                                            $('.wk-close,#resetbtn').trigger('click');\n                                        }\n                                    });\n                                }\n                            } else {\n                                thisthis.removeClass('clickask');\n                                    $('#wk-mp-ask-data').addClass('mail-procss');\n                                    $.ajax({\n                                        url:self.options.sendMailUrl,\n                                        data:$('#ask-form').serialize(),\n                                        type:'post',\n                                        dataType:'json',\n                                        success:function(d) {\n                                            thisthis.addClass('clickask');\n                                            $('#wk-mp-ask-data').removeClass('mail-procss');\n                                            alert({\n                                                title: $.mage.__('Success Message'),\n                                                content: $.mage.__('Your mail has been sent...'),\n                                                actions: {\n                                                    always: function(){\n                                                        $('.wk-close,#resetbtn').trigger('click');\n                                                    }\n                                                },\n                                                buttons: [{\n                                                    text: $.mage.__('Close'),\n                                                    class: 'action primary close',\n                                                    click: function () {\n                                                        this.closeModal(true);\n                                                    }\n                                                }]\n                                            });\n                                            $('.wk-close,#resetbtn').trigger('click');\n                                        }\n                                    });\n                            }\n                        }\n                        return false;\n                    }\n                });\n                $('#reportflag').click(function() {\n                    $('#flag-form input,#flag-form textarea').removeClass('mage-error');\n                    $('.page-wrapper').css('opacity','0.4');\n                    $('.wk-mp-model-flag-popup').addClass('_show');\n                    $('#wk-mp-flag-data').show();\n                });\n                $('.wk-product-flag-close').click(function() {\n                    $('.page-wrapper').css('opacity','1');\n                    $('#resetflagbtn').trigger('click');\n                    $('#wk-mp-flag-data').hide();\n                    $('#flag-form .validation-failed').each(function() {\n                        $(this).removeClass('validation-failed');\n                    });\n                    $('#flag-form .validation-advice').each(function() {\n                        $(this).remove();\n                    });\n                });\n                $('.flag-reason').on('change',function(e) {\n                    if($(this).val() == \"other_value\") {\n                    $('.wk-flag-other-reason').show();\n                    $('.wk-flag-other-reason').addClass('required-entry');\n                    } else {\n                    $('.wk-flag-other-reason').hide();\n                    $('.wk-flag-other-reason').removeClass('required-entry');\n                    }\n                });\n                $('#resetflagbtn').on('click', function(e) {\n                    $('.wk-flag-other-reason').show();\n                    $('.wk-flag-other-reason').addClass('required-entry');\n                });\n                $('#flagbtn').click(function() {\n                    if (flagDataForm.valid()!=false) {\n                        var thisthis = $(this);\n                        if (thisthis.hasClass(\"clickflag\")) {\n                            thisthis.removeClass('clickflag');\n                            $('#wk-mp-flag-data').addClass('mail-procss');\n                            $.ajax({\n                                url:self.options.flagUrl,\n                                data:$('#flag-form').serialize(),\n                                type:'post',\n                                dataType:'json',\n                                success:function(response) {\n                                    $('#wk-mp-flag-data').removeClass('mail-procss');\n                                    thisthis.addClass('clickflag');\n                                    if (response.status == true) {\n                                        var messageContent = $('.wk-alert-modal-content').html();\n                                        $('.wk-product-flag-close,#resetflagbtn').trigger('click');\n                                        alert({\n                                            title: $.mage.__('Report Product'),\n                                            content: $('.wk-flag-status-content'),\n                                            actions: {\n                                                always: function(){\n                                                $('.wk-flag-other-reason').show();\n                                                $('.wk-flag-other-reason').addClass('required-entry');\n                                                }\n                                            },\n                                            buttons: [{\n                                                text: $.mage.__('Close'),\n                                                class: 'action primary close',\n                                                click: function () {\n                                                    this.closeModal(true);\n                                                }\n                                            }]\n                                        });\n                                        $('.wk-alert-modal-content').append(messageContent);\n                                    } else {\n                                        alert({\n                                            title: $.mage.__('Report Product'),\n                                            content: $.mage.__('Unable to send mail. Please try again later.'),\n                                            clickableOverlay: false,\n                                            modalClass: \"mailResponse\",\n                                            actions: {\n                                                always: function(){\n                                                $('.wk-product-flag-close,#resetflagbtn').trigger('click');\n                                                $('.wk-flag-other-reason').show();\n                                                $('.wk-flag-other-reason').addClass('required-entry');\n                                                }\n                                            },\n                                            buttons: [{\n                                                text: $.mage.__('Close'),\n                                                class: 'action primary close',\n                                                click: function () {\n                                                    this.closeModal(true);\n                                                }\n                                            }]\n                                        });\n                                    }\n                                }\n                            });\n                        }\n                        return false;\n                    }\n                });\n            }\n    })\n    return $.mage.sellerProductInfo;\n})","Webkul_Marketplace/js/product/seller-product-list.js":"/**\n * Webkul Software.\n *\n * @category  Webkul\n * @package   Webkul_Marketplace\n * @author    Webkul Software Private Limited\n * @copyright Webkul Software Private Limited (https://webkul.com)\n * @license   https://store.webkul.com/license.html\n */\n/*jshint browser:true jquery:true*/\n/*global alert*/\ndefine([\n    'jquery',\n    'mage/template',\n    'uiComponent',\n    'ko',\n    'mage/translate',\n    'Magento_Ui/js/modal/alert',\n    \"jquery/ui\",\n    'mage/calendar'\n    ], function ($, mageTemplate, Component, ko, $t, alert) {\n        'use strict';\n        var totalSelected = ko.observable(0);\n        return Component.extend({\n            initialize: function () {\n                this._super();\n                var self = this;\n                $('body').find(\".wk-mp-body\").dateRange({\n                    'dateFormat':'mm/dd/yy',\n                    'from': {\n                        'id': 'colender-check #special-from-date'\n                    },\n                    'to': {\n                        'id': 'colender-check #special-to-date'\n                    }\n                });\n\n                $('body').delegate('.mp-edit','click',function () {\n                    var dicision=confirm($t(\" Are you sure you want to edit this product ? \"));\n                    if (dicision === true) {\n                        var $url=$(this).attr('data-url');\n                        window.location = $url;\n                    }\n                });\n                $('body').delegate('#mass-delete-butn','click', function (e) {\n                    var flag =0;\n                    $('.mpcheckbox').each(function () {\n                        if (this.checked === true) {\n                            flag =1;\n                        }\n                    });\n                    if (flag === 0) {\n                        alert({content : $t(' No Checkbox is checked ')});\n                        return false;\n                    } else {\n                        var dicisionapp=confirm($t(\" Are you sure you want to delete these product ? \"));\n                        if (dicisionapp === true) {\n                            $('#form-customer-product-new').submit();\n                        } else {\n                            return false;\n                        }\n                    }\n                });\n\n                $('body').delegate('.mpcheckbox', 'click', function (event) {\n                    var self = this;\n                    if (this.checked) {\n                        totalSelected(totalSelected()+1);\n                    } else {\n                       totalSelected(totalSelected()-1);\n                    }\n                });\n\n                $('body').delegate('#mpselecctall', 'click', function (event) {\n                    totalSelected(0);\n                    if (this.checked) {\n                        $('.mpcheckbox').each(function () {\n                            this.checked = true;\n                            totalSelected(totalSelected()+1);\n                        });\n                    } else {\n                        $('.mpcheckbox').each(function () {\n                            this.checked = false;\n                            totalSelected(0);\n                        });\n                    }\n                });\n\n                $('body').delegate('.mp-delete', 'click', function () {\n                    var dicisionapp=confirm($t(\" Are you sure you want to delete this product ? \"));\n                    if (dicisionapp === true) {\n                        var $url=$(this).attr('data-url');\n                        window.location = $url;\n                    }\n                });\n            },\n            getTotalSelected: function () {\n                return totalSelected();\n            }\n        });\n    });\n","Webkul_Marketplace/js/product/separate-seller-product-list.js":"/**\n * Webkul Software.\n *\n * @category  Webkul\n * @package   Webkul_Marketplace\n * @author    Webkul Software Private Limited\n * @copyright Webkul Software Private Limited (https://webkul.com)\n * @license   https://store.webkul.com/license.html\n */\n/*jshint browser:true jquery:true*/\n/*global alert*/\ndefine([\n    'jquery',\n    'uiComponent',\n    'mage/translate',\n    'Magento_Ui/js/modal/confirm'\n], function ($, Component, $t, confirm) {\n    'use strict';\n    return Component.extend({\n        initialize: function () {\n            window.FORM_KEY = $(\"input[name=form_key]\").val();\n            this._super();\n            var self = this;\n            $(\"body\").on(\"click\", \".mp-edit\", function () {\n                var $url = $(this).attr('data-url');\n                confirm({\n                    content: $t(\" Are you sure you want to edit this product ? \"),\n                    actions: {\n                        confirm: function () {\n                            window.location = $url;\n                        },\n                        cancel: function () {\n                            return false;\n                        }\n                    }\n                });\n            });\n            $(\"body\").on(\"click\", \".mp-delete\", function () {\n                var $url = $(this).attr('data-url');\n                confirm({\n                    content: $t(\" Are you sure you want to delete this product ? \"),\n                    actions: {\n                        confirm: function () {\n                            window.location = $url;\n                        },\n                        cancel: function () {\n                            return false;\n                        }\n                    }\n                });\n            });\n        }\n    });\n});\n"}
}});
